cset: moving following pidspec: 26950
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.375316779 seconds)
loading group "string"... done (took 0.582903894 seconds)
loading group "linalg"... done (took 7.685821306 seconds)
loading group "parallel"... done (took 0.160726238 seconds)
loading group "find"... done (took 1.131819624 seconds)
loading group "tuple"... done (took 1.862118386 seconds)
loading group "dates"... done (took 1.238198522 seconds)
loading group "micro"... done (took 0.235136958 seconds)
loading group "io"... done (took 0.915947492 seconds)
loading group "scalar"... done (took 38.152079246 seconds)
loading group "sparse"... done (took 11.751763889 seconds)
loading group "broadcast"... done (took 0.926004053 seconds)
loading group "union"... done (took 13.202255455 seconds)
loading group "simd"... done (took 4.802501804 seconds)
loading group "random"... done (took 9.31852169 seconds)
loading group "problem"... done (took 1.690654955 seconds)
loading group "array"... done (took 20.284916009 seconds)
loading group "misc"... done (took 1.677850401 seconds)
loading group "sort"... done (took 3.166153469 seconds)
loading group "collection"... done (took 17.345822473 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.545707496 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132945924 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141044635 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128866717 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156723802 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.125647536 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132986581 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091355207 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.902898214 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156542299 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121520227 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419941384 seconds)
done (took 5.444825517 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179499735 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089731571 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09027241 seconds)
  done (took 1.241696477 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073648976 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.134638863 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074336659 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075310443 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.078140295 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074336797 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07410728 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074463595 seconds)
  done (took 1.647752652 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080560697 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076400124 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073128802 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075414371 seconds)
  done (took 1.36827886 seconds)
done (took 5.584805672 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.788622587 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217531844 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192431484 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.402829884 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137261287 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180626043 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661442268 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346048933 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192670069 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08366321 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115533747 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.353749251 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128433395 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641224075 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080314394 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096038412 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.147494917 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452769398 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073400862 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08866384 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094474349 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134122679 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089870693 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078482567 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151215074 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07303229 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138960631 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087719688 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071282896 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224040604 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180066095 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660661826 seconds)
  done (took 10.45787254 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10975558 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10722671 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076510713 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133054425 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106888495 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078206259 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083135574 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075284625 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098828292 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.138539945 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100625746 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.113536039 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074186523 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077106599 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.091185623 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.217658884 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088682676 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089368425 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077900043 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086130613 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1164361 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086445084 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087758914 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087621121 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137188849 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18958114 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105566894 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105455219 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074069269 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089522337 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122703376 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136001762 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073897858 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073208612 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133678812 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104666171 seconds)
  done (took 4.845222735 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.987244967 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150033001 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.096565965 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141129253 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072371419 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116287616 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073242695 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088476372 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217194211 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.462416725 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.581657851 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.136366837 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117913448 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108090286 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075273857 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076025771 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074689914 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.496471288 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107801384 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115819945 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088044043 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078150527 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07656324 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.072944846 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074325472 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071788936 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07570473 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.121550323 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082139574 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.313358559 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129863431 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078353485 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.944629353 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171537739 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073282305 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.248653832 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178100882 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096116099 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144535072 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075576929 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072038143 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163850794 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070223261 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076818203 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073506723 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092345933 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111494587 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12669958 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074829378 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071877036 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173013882 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071421377 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087011022 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.142981552 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160866913 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074107766 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298792268 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098151247 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077904475 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073171869 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174979631 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124215115 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073351914 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07285686 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074995062 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076029106 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374571357 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.074069238 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.942951065 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0767956 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085391214 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077138956 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079477888 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079900737 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080046676 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095753002 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073397156 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080704171 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.072999723 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073208714 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073818352 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090820244 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072077175 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.368079411 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071232227 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179096958 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073391797 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099367293 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103255413 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075538394 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073876288 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107451263 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077040823 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073862595 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074227073 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091600921 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099463652 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076887678 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120872917 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072814309 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070761644 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093720371 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102870564 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074518238 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10349958 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083574087 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070117913 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07842756 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.415641811 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071611183 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074922758 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073050443 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076221069 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074287738 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.086492329 seconds)
  done (took 22.40368835 seconds)
done (took 39.753657962 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.251748391 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077169872 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077718218 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077670565 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07754322 seconds)
  done (took 1.704058172 seconds)
done (took 2.836765273 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127826424 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105692574 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071753033 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104725671 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072248935 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110786193 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107042234 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084548517 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106563913 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072111558 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103988111 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072394397 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071542139 seconds)
  done (took 2.351246513 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091842865 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091295179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077491568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090435287 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070992158 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090370611 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088971541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096815112 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091311624 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080344121 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070924412 seconds)
  done (took 2.06626648 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090357996 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091513015 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077250759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089100909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071075297 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089128422 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088947906 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092904063 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08922946 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081684725 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071046002 seconds)
  done (took 2.049832213 seconds)
done (took 7.585288756 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.083544872 seconds)
  done (took 1.189872469 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.540417252 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.645940061 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084458169 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109146921 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196823262 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116170261 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.237800354 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086989454 seconds)
  done (took 8.28627999 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109758514 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07579965 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077167184 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076902843 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07575287 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079221458 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077139238 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078093283 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075712449 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07784566 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074057061 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076018318 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077027532 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075974973 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075230204 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077638807 seconds)
  done (took 2.451957734 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098869511 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096247179 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078890573 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080176914 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0768542 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076459651 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079083154 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.079490091 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077902909 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078911708 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081932284 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080349814 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078462377 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07079281 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081323109 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083049596 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078294701 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080954418 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081891228 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082631652 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081964317 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070802989 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078922825 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081145691 seconds)
  done (took 3.143178533 seconds)
done (took 16.190033184 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114311861 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075022671 seconds)
  done (took 1.305109293 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086165886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086976855 seconds)
  done (took 1.299650663 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086680703 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070817755 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094157937 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.083354498 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072659501 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.072428256 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092283188 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072664694 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.071996404 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072439059 seconds)
  done (took 1.916257653 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07398043 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081646728 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075655044 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085766645 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079512202 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070228634 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077667574 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.073853237 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083054583 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069826895 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077873025 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089897256 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077085997 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091131698 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0786056 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074391289 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076363243 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073784878 seconds)
  done (took 2.539147314 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072514916 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073179783 seconds)
  done (took 1.278900361 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0734316 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069222998 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072581759 seconds)
    (4/7) benchmarking "year"...
    done (took 0.072043317 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.069517834 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.068995192 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.069890968 seconds)
  done (took 1.624852858 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395814613 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123105279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311996145 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079480926 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088867108 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260246223 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073451087 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078812497 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078750003 seconds)
  done (took 2.655996628 seconds)
done (took 13.754198418 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08858459 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094863378 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.102460225 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.389546545 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.100438623 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07473597 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121323929 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187852766 seconds)
done (took 2.304492838 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216278591 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.664095102 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404489313 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210665827 seconds)
  done (took 2.416032338 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345693891 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094832001 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067194624 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075516098 seconds)
  done (took 1.725755964 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074974028 seconds)
    (2/2) benchmarking "read"...
    done (took 0.076906879 seconds)
  done (took 1.292219863 seconds)
done (took 6.792860813 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075057319 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.206304883 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.072243706 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071755467 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.070666395 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073225474 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.071607997 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071594073 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071225204 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073349561 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073579206 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.073400977 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073146392 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073501097 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070986923 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07108224 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073383973 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070687414 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071390705 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070925794 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072989124 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073065601 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070743952 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070825401 seconds)
  done (took 3.032901023 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.090723053 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073028108 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075962856 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.076776723 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075340036 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07795517 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077656053 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072987647 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077692655 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075633268 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075275815 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075054055 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.074883506 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07573807 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075464335 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075630255 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077930007 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073251612 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075657068 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075831114 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077777956 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073322915 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.075592583 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077711664 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075443896 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07528738 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07571193 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073226415 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077703885 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075929178 seconds)
  done (took 3.434703054 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.077353117 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069607631 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.070790377 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078545168 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069833624 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.070450948 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.069290841 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070584145 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070672754 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069862581 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.071417818 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069948893 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069907855 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07071776 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070483509 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074164129 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08643426 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070171822 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069918399 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070595326 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.073860858 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.072779799 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069897897 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070050198 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070178879 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069720029 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070473504 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070002534 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071039366 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.070145286 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073926499 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074401659 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070016237 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077903825 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074700751 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069727017 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075297772 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0702811 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070927121 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069066128 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06820501 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068126106 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06870765 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.077748488 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070261739 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071216852 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.069759647 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071426843 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07044789 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072576598 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.069515501 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070621899 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072242136 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071675751 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074696461 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069963717 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070936231 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069141973 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069204874 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068679507 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068578601 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068383453 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071565935 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069139645 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085329116 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076226466 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068981705 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071639641 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071086968 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07378025 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.072129777 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085935749 seconds)
  done (took 6.322449838 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094837302 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094537105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074179204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073324815 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068285172 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070805893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077681303 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070767419 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073189044 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091141324 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070735384 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073770159 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072879275 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074727192 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071078372 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07312717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079755279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068744387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071065257 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07505146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070708199 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076628325 seconds)
  done (took 2.833055461 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15430398 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076883127 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113076267 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082370496 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077547944 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081624266 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076564738 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077035682 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076780865 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074969257 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074759542 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077306408 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077042534 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074796554 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07474752 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074621078 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077235995 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075040647 seconds)
  done (took 2.652831342 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084805656 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073715709 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095507699 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073399952 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07352975 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075432491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077695049 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081155897 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075643383 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0732001 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081059088 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074780056 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075589197 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073567147 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075418482 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073754003 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075950792 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073265165 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080822592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078066308 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077726373 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081267694 seconds)
  done (took 2.861527907 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088104604 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075584695 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088981458 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075964979 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068453005 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070834149 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077107443 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073370215 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077016303 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074636379 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07364007 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070542781 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076012377 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073248108 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075418914 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073096223 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075082506 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0732075 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075586581 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068385095 seconds)
  done (took 2.661472361 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091584539 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07464838 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074823075 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080528594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074167408 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07448491 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080723694 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074214572 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074428237 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095408842 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073995754 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074618932 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080908869 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081322024 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074437577 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080874879 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080796078 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081123978 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074408604 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07438467 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095556449 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07448738 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081314262 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074411615 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074330161 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074757964 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074570367 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078397781 seconds)
  done (took 3.357861211 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074144324 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072793343 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071626156 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070496432 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070967766 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.070676116 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.070996949 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071239752 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073641812 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071081159 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073331361 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073529619 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073620341 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073203724 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073388141 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073195598 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073407236 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07093943 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071510364 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07159918 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07324413 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073115227 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073518832 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070917882 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07130287 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073885028 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071589573 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071006497 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073571713 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071290798 seconds)
  done (took 3.334030384 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082367511 seconds)
    (2/2) benchmarking "in"...
    done (took 0.079658187 seconds)
  done (took 1.326372856 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06959928 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086903169 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070185884 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078883152 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076679609 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073846738 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079976296 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076719407 seconds)
  done (took 1.769945907 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088578826 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08256837 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073637122 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082986573 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081625252 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08918522 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131321757 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073053861 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080170987 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071803941 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085745616 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072482915 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080617731 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073991987 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07965918 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081326212 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.07033528 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077956828 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074951418 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.070807537 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073412881 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082154209 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077175884 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068246843 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074856204 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09641757 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085084 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072499436 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076839269 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081481598 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080406359 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06720006 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072723904 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073138607 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070549779 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081399366 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088121881 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077284324 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082991362 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073653313 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081406519 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068061191 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078161018 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080625282 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084942534 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073130184 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073183374 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067717895 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071598218 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076363694 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068016946 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074262977 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068115275 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08045706 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077355371 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084176168 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071634108 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07525164 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076800179 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076550838 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080360812 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076195658 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077222209 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072330118 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085261473 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.078545956 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081358643 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.067955251 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066980454 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.070767428 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083377763 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097212332 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.078866222 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.072715453 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0729939 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.070474784 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076569591 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073168903 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078472906 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.079981647 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072273589 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077051048 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081139129 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074183481 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076021296 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079287625 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.07055266 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.074825919 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.071473476 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08849772 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073294863 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.070164624 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07164035 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083036324 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076737507 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071506139 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070951291 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079999874 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066232805 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071840682 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072659691 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073781619 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082030656 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075229862 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075986306 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081505092 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078811019 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073132378 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.076071977 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06931527 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.201877839 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.075389589 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084575298 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069547185 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079788821 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.077606911 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.074856501 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083866457 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.072333283 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074141297 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083305493 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.08085497 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.072083707 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070891236 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077360839 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073637858 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075345198 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08263137 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071803691 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068816098 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068144128 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077607375 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07263159 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077799539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077269269 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077433432 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068370785 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071020489 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.077605493 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.08241383 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074366132 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075717954 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080124617 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075382671 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072263411 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080424494 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076458836 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073873552 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079592166 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075303404 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067800624 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075588879 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076010851 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.072101144 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078123923 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075285708 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07617897 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073236441 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071463257 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079028308 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073434156 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073152125 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073954749 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071648739 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084347639 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075631692 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068334083 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070501413 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080462828 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071984917 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072123293 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073411754 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076198209 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073104504 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070889366 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072323496 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075559886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080830376 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075837749 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073514429 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079342593 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086331882 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072791402 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076741864 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072192983 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073265081 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072979558 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.082939276 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.079614177 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076596084 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076324614 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06959906 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078165752 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081715847 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.072878907 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070311631 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072686384 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.075904853 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079217234 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.076005771 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07278372 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07095118 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074207335 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074395099 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.075469603 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071897957 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072124108 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07678202 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070629887 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077062 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072152615 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083126252 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076330669 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066994839 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073656572 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070224264 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079456408 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067379507 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071715895 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072915054 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072255656 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070806827 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075087738 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066407708 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.213431296 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084608215 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.077351349 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075566262 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074424558 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082656567 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.077116687 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079382111 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079193174 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08104657 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085790471 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074302906 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078859432 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.087171154 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.073295647 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067646526 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078988404 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071624718 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071563272 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072153995 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.07123328 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07722277 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079682681 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08011781 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067627903 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076472294 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071709062 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.07311594 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068076377 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07850671 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076606109 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.074942713 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081141793 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073140339 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072536667 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077109919 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072475455 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072932564 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073376801 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076639974 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073495476 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07565612 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.072691368 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07629511 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.072928792 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070823307 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075135902 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072676655 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074029075 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078332065 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072586649 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073902261 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076335336 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073193743 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07455111 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.075013596 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073745432 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076763647 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074554756 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074569269 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076397565 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068314057 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081508455 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072811114 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081373222 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074817831 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070531511 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078605873 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076640973 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07744973 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07313528 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07303359 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075619417 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07246899 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076481884 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080743536 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.071942111 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083959438 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080244513 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074703877 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076351641 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07426899 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.074920317 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073478947 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.074488276 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073061695 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.073976674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.072021116 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.077886344 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076337433 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074622062 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075296491 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073034044 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074285947 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.073880063 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.068092308 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072837369 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.07314308 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072087396 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081602026 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072010364 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.072673726 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.07057169 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072295182 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070607052 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06870331 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077954704 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078275736 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072164858 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0795905 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072458881 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074008925 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083122091 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066587434 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070015785 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.206913766 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.074577397 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083677677 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075912261 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085782081 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075958656 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.075179071 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071247142 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.074324398 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072449161 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068462272 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07150725 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077219187 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.07362603 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072597181 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072699077 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076824777 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073589159 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083086344 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072350511 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.074981498 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.073058634 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07066119 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073245404 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072920205 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077087266 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07368389 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071770072 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070760706 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072293956 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075162093 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076272845 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072612486 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075646101 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081535012 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07278641 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077053182 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075704629 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068110089 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076504902 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072050432 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072204035 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.07276441 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077649551 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07934328 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073024704 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083011266 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072352068 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074404533 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072685142 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.07078186 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072454632 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072497714 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.072546514 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073268319 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074053218 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082000249 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.070811666 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077228296 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074557981 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074522793 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080516925 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073542924 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077477057 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078269205 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.075345643 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075821367 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082290967 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076893192 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077966506 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073814597 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075843819 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080852286 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073650964 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.081041599 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074588866 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073556526 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.076152846 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072327593 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072855653 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072689421 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07206071 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079556066 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07319661 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073600583 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073383375 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071018865 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074881488 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075241956 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082086819 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.076035033 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076867183 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.067898481 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.070472259 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073050232 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072598014 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075317681 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076034747 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07950345 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07604624 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074406882 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.071691593 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083373735 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07907314 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076958614 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.07149682 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076385844 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072278643 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075028624 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074380538 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073090305 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07258104 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076580125 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074479475 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072465563 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07874775 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076079913 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.209341439 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.076887783 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077717758 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07691341 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070086459 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074751017 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.077569536 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08015428 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077726787 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073856176 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085566484 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072835213 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075452903 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075840756 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073726397 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078864085 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068716973 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07636167 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074175784 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073926803 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068722181 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073764789 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.071886553 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076877301 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073118501 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068595776 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08458929 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083540354 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077119462 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072377004 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072123719 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068183868 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068676996 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.074292156 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073796605 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.075648048 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.083998627 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073490138 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073147799 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068304044 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072829821 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077160841 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077764732 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070279355 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068569628 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073075886 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076856545 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079727653 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071333549 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072561777 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076894366 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076118366 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071276255 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075669473 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070528042 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077950922 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086496359 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073538508 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075229272 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080751067 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081996809 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073141522 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068450342 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073470767 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077312691 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074728079 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.073424468 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074505263 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088661981 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077111532 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073213677 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072540288 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076638496 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.076649178 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.08225589 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073789472 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074027323 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078734542 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.076348827 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080651125 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077591387 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080928817 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077092638 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07724483 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.071736024 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074377924 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.07140852 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073351783 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073872826 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073335255 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077629368 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080046776 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073428409 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084501995 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083084145 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075391241 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070145364 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073177182 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073701533 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068572621 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072851725 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.070487375 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070523153 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070445568 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071699665 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074415193 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07772812 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073652401 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072139595 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071427792 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.066534785 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075628761 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074625948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074280264 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069164133 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071669432 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.07197074 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076737221 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07389245 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071052688 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07465516 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075028159 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074113317 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067312617 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07943985 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071733611 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074689342 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.072010283 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071727105 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072120213 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07641115 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076447535 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072515098 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.075037959 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076933148 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073265199 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069788668 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069603 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.078192977 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.070732134 seconds)
  done (took 46.627843337 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11355369 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072917192 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071095887 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071958801 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082297856 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073226189 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072202201 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07249626 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072051287 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074069201 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070839743 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070744264 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078641962 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086300741 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081105647 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075281694 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070138522 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071705303 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070220755 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071182402 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077585176 seconds)
  done (took 2.931593578 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.081331628 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085315601 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082247036 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091085665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078719524 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077625791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082724901 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077281531 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085784898 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080211472 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08632971 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077793754 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.080400957 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.080664527 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079146517 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075803523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083224395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076697232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074996706 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080548127 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075460575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080120463 seconds)
  done (took 3.025452928 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074430957 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073332048 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075816824 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.069012279 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073533838 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06880159 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075992069 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.071129571 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076221989 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073250178 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.073215176 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081977855 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075919727 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068999752 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074248909 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071217257 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.116202113 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07676135 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073458726 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07383517 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068499917 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075764723 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067730518 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069376063 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071226633 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073659884 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.072224466 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069606716 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.07147753 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.073500525 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072918253 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071470854 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075823506 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074647821 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.073182839 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.073263248 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072795386 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.075109403 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067376891 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070064269 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074129118 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069183082 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073381517 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074848747 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071707313 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.072116005 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.076013243 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073004489 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068587005 seconds)
  done (took 4.863784057 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085344975 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.116553093 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074825851 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095311033 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086944825 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078968563 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07834182 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096059212 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070375491 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071361491 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087876021 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085492636 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07295408 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076840511 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07919926 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071851411 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073789266 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071746617 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.074936327 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070624839 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075687442 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079580359 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086728174 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084392165 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074812822 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069677988 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070166462 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075599557 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084051278 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076347882 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076637892 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077567666 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087716009 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07543221 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072603908 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074705093 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087806336 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.07299141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075010947 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.071014733 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07460069 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076836243 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079621781 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088647296 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072956952 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077943489 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0725106 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069916735 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085007711 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07486891 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080518546 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085542041 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076284187 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072583776 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076636364 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08742832 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.073365159 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071352837 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.076099473 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08408652 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070457086 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076085166 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085479295 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074215669 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078985655 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.086410693 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078060572 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076105998 seconds)
  done (took 6.730592712 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083529146 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102158484 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089422337 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089599499 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083628265 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083626079 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083107055 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08294887 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083306503 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08704821 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083246176 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123544414 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088665092 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085482173 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082843316 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083389582 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.083142126 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083597697 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08364364 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08211091 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.08080622 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089421852 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083052362 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089467263 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086153907 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078340541 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082892573 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100934209 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089576973 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082623796 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085621898 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082819479 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082293898 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089368682 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085714515 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082624628 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072448515 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082900469 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082521 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082987428 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078731043 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089495098 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082600902 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078402922 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082593589 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082792509 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089217219 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085767922 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085287962 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086740102 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082953811 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08999085 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082832146 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082686658 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087891329 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08919694 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086718116 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087000819 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080525365 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0868735 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086795858 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089698812 seconds)
  done (took 6.598419029 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087485366 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077399364 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08664944 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066438246 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072090006 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077610759 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06936856 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.070970358 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079760897 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078338532 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0794043 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076744006 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079477354 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079501534 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076516519 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079490594 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076867792 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077315736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077691491 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077090437 seconds)
  done (took 2.842284575 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.083761309 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090807117 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.075180138 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079228709 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076144723 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078582292 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075879841 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076664822 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074626562 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076603291 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082284164 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082890336 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074513114 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078658372 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.081907327 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07682109 seconds)
  done (took 2.547173485 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090405698 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077005773 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083005638 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071323245 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071943216 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067502226 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070512966 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066511918 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067141534 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083409627 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070847487 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082464871 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.07085945 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070587429 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069016389 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078203856 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068859686 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070128215 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072412652 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08367355 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077292811 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070582625 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076640893 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072243879 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075379622 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077624549 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072022485 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07398208 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070291813 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072926535 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075964843 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076776767 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069742881 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070449358 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071553918 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070089741 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072180816 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073020634 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078388196 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072705202 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071019984 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07538582 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072420979 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073823801 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06921736 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07296455 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069178942 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075805583 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070408247 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075961321 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072577937 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075114453 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073772347 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080319256 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07571014 seconds)
  done (took 5.341417475 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088440011 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076754506 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068590486 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070971844 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076256236 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074963704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075915494 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074430348 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074878327 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070895529 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07458339 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075970307 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074378481 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076962992 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074769607 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077156447 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068452609 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074568312 seconds)
  done (took 2.646974454 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080532542 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072813103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.079115036 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072873107 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073723635 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075852327 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068442981 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071754946 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071706092 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073482254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073756577 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075846232 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071252145 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.076299278 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073543418 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073430965 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075690308 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071335322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07321247 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068701381 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075615232 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071243355 seconds)
  done (took 2.907260823 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101422194 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090626191 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.147621879 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086925315 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.094840198 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07957572 seconds)
  done (took 1.890091885 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100922225 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108616187 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073627738 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076861696 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082050537 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077699581 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077146662 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077451457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084367407 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082098766 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077006242 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087423329 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084515679 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08393912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08249391 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082754808 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077375292 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077954354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07380051 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08974812 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077429275 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085155471 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077464028 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077344813 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077864024 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084213383 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08458516 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082782641 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077566501 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08467131 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082171735 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077397857 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084958636 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082729207 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077036601 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084942727 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077878097 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090230917 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083684621 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084482011 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077326079 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082815559 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085327299 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081546001 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085255635 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077833844 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081966676 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07799412 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078235434 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0919173 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082823164 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084364829 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082812458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085825794 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084492008 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091417523 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082326288 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084010086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082713469 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08236775 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08426477 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082860418 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084384766 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082482384 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082397185 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083913484 seconds)
  done (took 6.749315439 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112714289 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074308226 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077891488 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082746894 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084320795 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077934508 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078528138 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078175576 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077899767 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074567569 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116342905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077989132 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084480289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084286691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078211104 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077750903 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07793139 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084310263 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074924136 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091498403 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077567208 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084257974 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084032003 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084138906 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082491097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082480106 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077886679 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077620529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077303353 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077230355 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081488472 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077361145 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084699493 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074273075 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084209532 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07783933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077439778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081374981 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078232258 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082828481 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084324394 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089671209 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07767959 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077114095 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082633355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077847257 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077587003 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074475119 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077795031 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074822449 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082706603 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082730084 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08261601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084394354 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077930424 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077637119 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077637284 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077832884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078139897 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082782407 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084443196 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078163594 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091662866 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077957125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077477308 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083845812 seconds)
  done (took 6.679175355 seconds)
done (took 137.11003214 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202399007 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174729898 seconds)
  done (took 1.651143854 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076952198 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104444594 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084044104 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136357191 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072239696 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107247259 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104223356 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082284218 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074546566 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074062611 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073673135 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075849775 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139769278 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071435042 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071430401 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076017586 seconds)
  done (took 2.719122422 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105523468 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160825537 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106385698 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072631158 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106038121 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080024537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072683605 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085075807 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078290629 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073151332 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079658217 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077803328 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072891431 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077627276 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078497503 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079674181 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07266491 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079484025 seconds)
  done (took 2.857120561 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105276784 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09851628 seconds)
  done (took 1.508427878 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172433444 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.140147529 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210113627 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343846712 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16339005 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151057077 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149395564 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147523399 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120707856 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14187881 seconds)
  done (took 3.035816053 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.109379094 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157329578 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.281480517 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125159255 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.081103274 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098990913 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125161826 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084723974 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083998457 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083868743 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083787057 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081507021 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103925633 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080986503 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082054538 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083534208 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.111062318 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.082094472 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.083083135 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083226963 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108996634 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074559595 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.081040987 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081520294 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084202629 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084288305 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.074451937 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07381837 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083172488 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082589766 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08428294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098009099 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084156285 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108098742 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076518077 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107294111 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081070705 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077823248 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079810219 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078253232 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082142233 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081959096 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078502612 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081227538 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072245135 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081386862 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071770219 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071950061 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081919507 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072802194 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082045373 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081192438 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106295473 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073468534 seconds)
  done (took 6.2547457 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.116327159 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110837076 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07558959 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117005081 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109074003 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07516669 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111850362 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10625591 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.115419374 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0778931 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076343445 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077892521 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086874264 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.089492573 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121391589 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111960778 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077539999 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07465027 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111868693 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112434375 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07426652 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106954242 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102097174 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111803081 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073316127 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077256924 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075606625 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077501229 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083269086 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084820212 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076293014 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085890171 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.094258553 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084967358 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075317436 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075966306 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076053258 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.084915526 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084701493 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084891214 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081932169 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075428055 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075369729 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076773563 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07691806 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075176816 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084178792 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08566308 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084654219 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076031941 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077127459 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076628118 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076475073 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085063279 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082734667 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083310188 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082743803 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073433857 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074496004 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078518314 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086541597 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084516117 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083094649 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076412032 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086355479 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.079222046 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08838602 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089221269 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075900424 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076935723 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075680485 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075529692 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076708059 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082798814 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082799163 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077181438 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075786225 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074883238 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083566308 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080615553 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073377959 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079935198 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07236444 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072780863 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075356732 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074935198 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080254696 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082207739 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074289207 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072718575 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072954464 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072322229 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074069322 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082130567 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081982699 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080875451 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080517603 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073604075 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080790182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079373252 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.210417458 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08384351 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075654937 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076982358 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0760514 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085442822 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.085086321 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087132305 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077100368 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07756302 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085379872 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087002978 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076890772 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.084170462 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086723739 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085246654 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074677513 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084549233 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074437998 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082882358 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073987184 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084303983 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074942782 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084459507 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075515846 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075296917 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075911523 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08533145 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07725492 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076462433 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076988777 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076034518 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083615139 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086676682 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075289079 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081021851 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081793898 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07487107 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081482212 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073833761 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081952199 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073117612 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074724405 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073213911 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086938017 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076460576 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075750812 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075816028 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086644059 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076646052 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085883001 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084061429 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074982569 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.089071577 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083329173 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080274664 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083745222 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074739486 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073601776 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073595128 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073969185 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082361364 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085137695 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07593965 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074009768 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083238598 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086061463 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075502895 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083767552 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084224747 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084129064 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074081256 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073708633 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083530594 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082786087 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080767775 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08101738 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081011313 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073780133 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082275576 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083680101 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075764356 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089270658 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07646777 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088082394 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084083539 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08218895 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083265458 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083547541 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082315432 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082863251 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084352771 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072119886 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073402729 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080446834 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072294038 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072069222 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078899703 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07390714 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073827662 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083965441 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072968981 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081521009 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071464668 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079926254 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072042939 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073490632 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084736632 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072810973 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073716303 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079830237 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075239044 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079117713 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081804445 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079602305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072911283 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073243918 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080634243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080125123 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072862679 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072030052 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073653587 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079160358 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078937125 seconds)
  done (took 19.663591626 seconds)
done (took 39.006529632 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204662275 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15449267 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.16495087 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118921885 seconds)
  done (took 2.041892718 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116978886 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104129732 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094748093 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072282241 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100595412 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.071464938 seconds)
  done (took 1.905053124 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280612857 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193783883 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177348883 seconds)
  done (took 1.98847077 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206085877 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193897764 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.439712173 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265925291 seconds)
  done (took 2.543543774 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145778385 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093275657 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.074489861 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.091150488 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133317499 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159474615 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100133082 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125054595 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083778316 seconds)
  done (took 2.397008778 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147512813 seconds)
done (took 12.420709709 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 0.182822925 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.177752425 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095312346 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.084355556 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.077648078 seconds)
    (6/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.199398549 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076426923 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 0.139944887 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.086543075 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.217700372 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.247561374 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087743837 seconds)
    (13/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.24335034 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.083720179 seconds)
    (15/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.255265607 seconds)
    (16/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.079430002 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.085813745 seconds)
    (18/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.17007157 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.164698349 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.334410995 seconds)
    (21/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.078094541 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071817505 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079289974 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096246948 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20170364 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.095053369 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079295911 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217876285 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057900364 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076014551 seconds)
    (31/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.232828145 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084000731 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081591019 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.240956409 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.177659688 seconds)
    (36/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060461634 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.11022102 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.084443391 seconds)
    (39/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.080977925 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.126037357 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107060448 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132939793 seconds)
    (43/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.124840614 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.180001087 seconds)
    (45/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.171883405 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09058575 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080005948 seconds)
    (48/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.176527023 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.081566177 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080433506 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071154721 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184228922 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111652359 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148507813 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179646629 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.152255949 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096871256 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124478177 seconds)
    (59/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.096736517 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07965953 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.084159251 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101862019 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 0.074283083 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080921745 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189920421 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.165492119 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078499177 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.069967842 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071976042 seconds)
    (70/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.087465396 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07228197 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.164935188 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081248954 seconds)
    (74/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098551558 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091760613 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.186182062 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095745988 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070179165 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07230215 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.117129924 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.179114978 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.246857733 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.074930409 seconds)
    (84/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086569605 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.209952121 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.082441725 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092514185 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161240427 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095936905 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156498785 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08322741 seconds)
    (92/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083961739 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074663158 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086230713 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086544359 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076777531 seconds)
    (97/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083987651 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079077617 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128811457 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.166746423 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071408825 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.070991951 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060429234 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.061576138 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073111667 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081242345 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.060971208 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082420258 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080874564 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.078327177 seconds)
    (111/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.174800937 seconds)
    (112/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128445083 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079427391 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.1871745 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082035203 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.177633194 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.060045486 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07377809 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073296684 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.158953968 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072118716 seconds)
    (122/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.061456928 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.072676513 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.080734531 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.208313085 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.101038111 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188473142 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146469886 seconds)
    (129/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.07230053 seconds)
    (130/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.061595169 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091005065 seconds)
    (132/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080468747 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.164200736 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.081167048 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05965241 seconds)
    (136/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.072007169 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099397857 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081417976 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104400962 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.081824095 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100835004 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.060485679 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083608527 seconds)
    (144/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.164959452 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.099720076 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094225102 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076009728 seconds)
    (148/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082130781 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080440893 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090283513 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.164327333 seconds)
    (152/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073018231 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097532385 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104381377 seconds)
    (155/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.1069787 seconds)
    (156/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.059480633 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103044106 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.079564072 seconds)
    (159/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167444589 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175718799 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119844286 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156097869 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.086719481 seconds)
    (164/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080143673 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.115736462 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.071354125 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129635668 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094403317 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.071631953 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077808151 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057588366 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073430921 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091193832 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 0.135449631 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.192163036 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079726729 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193679328 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148350898 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150881024 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095267735 seconds)
    (181/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076947695 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.056776673 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.254901806 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.188595117 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.077875082 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.106364982 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.060362611 seconds)
    (188/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.122757476 seconds)
    (189/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.123225488 seconds)
    (190/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.058353205 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07951115 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081594789 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060607753 seconds)
    (194/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059195876 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083540849 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.059874525 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078929679 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070997283 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057405819 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067869679 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08427312 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070700437 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077638628 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057435563 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07825147 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.073766415 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086269843 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069792583 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071762331 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072555281 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.057215276 seconds)
    (212/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194668564 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130242349 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078149789 seconds)
    (215/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071735213 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057294348 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079816168 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078971839 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145900864 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07906971 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058870583 seconds)
    (222/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.059807422 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.16301709 seconds)
    (224/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.109986858 seconds)
    (225/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078360525 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.101302646 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.080283743 seconds)
    (228/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.128419148 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117454572 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080724638 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074453926 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073034815 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05857552 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.059582997 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149209737 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073692917 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.123298811 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.059268876 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.063803845 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.16287871 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.059720903 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.061033255 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059810121 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073347592 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072907811 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.060882918 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085329111 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.073491449 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072217958 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.060181889 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073600761 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098341497 seconds)
    (253/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07271027 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.072548191 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119301606 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090218738 seconds)
    (257/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058758136 seconds)
    (258/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057942822 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082561844 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071869326 seconds)
    (261/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06805804 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.073364757 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187335732 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081613233 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059717616 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09329746 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.058979182 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.059797553 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.154076315 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096464773 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.078965282 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.061739441 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117533374 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.073217375 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.058844969 seconds)
    (276/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077158578 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.059531423 seconds)
    (278/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.070147344 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.060834535 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073205491 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.059623659 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.073665292 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.072016967 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05771914 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069866545 seconds)
    (286/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.058805275 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184067513 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081167769 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080303566 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.059477078 seconds)
    (291/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.075417089 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060399663 seconds)
    (293/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.060616369 seconds)
    (294/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073972998 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.072391612 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085038346 seconds)
    (297/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075818907 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078859157 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096085918 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073660911 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078390132 seconds)
    (302/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05874269 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080012697 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.060444747 seconds)
    (305/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080986707 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071838575 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.289327089 seconds)
    (308/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.061489236 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.059408499 seconds)
  done (took 33.161454181 seconds)
done (took 34.516924163 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.092003267 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098957034 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081188529 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.100210809 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.090119946 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.086888762 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.082447318 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.087201269 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.090038134 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.089235695 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08560212 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06238164 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.082809309 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.084306626 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084194092 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100063645 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.088080809 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081988953 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.082545993 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073372627 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.082276965 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.074215782 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.075350968 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06428851 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.087304335 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.080743389 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.083613301 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082716363 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.074401924 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073941178 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077892847 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.082260357 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073211096 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.088896839 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.082217643 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081782631 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.083427282 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085677577 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075068301 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073378705 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.082899079 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073510761 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081509256 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.081492927 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.079974064 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079349086 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081680593 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085193625 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098322965 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076052476 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.083371879 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.084099266 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.085748456 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.08093947 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077729974 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08163 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.079168304 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099818246 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081743649 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077067332 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083398429 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082159645 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079162255 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081530216 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.08174035 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08388791 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.085225355 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079262421 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.084057671 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080063045 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073630157 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080182336 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07796664 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073200856 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084338297 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.088836967 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.07220836 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07984717 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081198205 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.082251778 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073556367 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074900104 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075112937 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080410408 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076188863 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.063886825 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077887589 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080882195 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072518086 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.082476007 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080539846 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.080304823 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073811873 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084985165 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072231307 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078937594 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073532144 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.072915428 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.074709926 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.077363351 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.072534868 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075606065 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.08332442 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074505325 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.078153369 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084103854 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071213314 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.079170216 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.07184695 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072541998 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.0867796 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082984495 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.072851472 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076289252 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072325561 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080610954 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072043316 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071306978 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069850917 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070115758 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076177135 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069638891 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071646379 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076853308 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.228935147 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073700088 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077684764 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.077097055 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.075844624 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.081052045 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07446132 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074024049 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076010772 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.071208392 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076573021 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074085746 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081269588 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076759902 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082102713 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074753294 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.082663879 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079079012 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.079977677 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.079109956 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071802588 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.068430131 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076478606 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076221809 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075268819 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073207161 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.074529766 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073216665 seconds)
done (took 13.61945538 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075360406 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140272107 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100707805 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10132218 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092388044 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074657836 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082588491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10237012 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075751787 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105421289 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095125668 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093334421 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117342257 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072440829 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074056583 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077524318 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075269825 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087806353 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103525765 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094596839 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11952508 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073220494 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098401298 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095485934 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093918508 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.109184067 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074927619 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07758549 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.077698416 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098502084 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.096627343 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.077822748 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074245791 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102943822 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100774045 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090149406 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074921426 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089607629 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074214095 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073319603 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075705282 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103407682 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08727278 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087628716 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078205964 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084759045 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075006703 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089675094 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094560493 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083422171 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090507845 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102160915 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073896212 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087684132 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070153993 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08882715 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080495045 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074193428 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.0725122 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079059352 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071786387 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075239068 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084267423 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083425744 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07540438 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087548229 seconds)
  done (took 7.166079356 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.092180215 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.102310842 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090684425 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.094148331 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073214674 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.073831785 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.07438157 seconds)
  done (took 2.046605983 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.074823923 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094959455 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095882567 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095917326 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08853963 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09895193 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084444704 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074855598 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100639446 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075224349 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094338917 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105027764 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077703556 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.087843291 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097370835 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074254949 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097115425 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074737427 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.078363432 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096861946 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080184917 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104774407 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081889153 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074782944 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087651065 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074315647 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119833041 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078151688 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076405708 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077345583 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075870223 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114141545 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086980893 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082012491 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074563999 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089148941 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088345713 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077702345 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085617262 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083862149 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087653461 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074922111 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075630216 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07621162 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07867939 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084584939 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075607609 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.078751926 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07692735 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093539731 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073068094 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087031692 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077225634 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.08028345 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076679454 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080982958 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085192121 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075415041 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093649707 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076032092 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090274761 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089176662 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087222146 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089794408 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075826925 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087055449 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087364065 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.076387145 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074891885 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075728716 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08630665 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070696991 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073934937 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.083626079 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076757791 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.096780729 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096688156 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076483871 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08873137 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075192493 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075395677 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07456 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095238877 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077895553 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072085245 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079225342 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078087949 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.077646252 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073670914 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.077936296 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072388848 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.080230512 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077229513 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078103881 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077181799 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.089698099 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077709853 seconds)
  done (took 9.510234921 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07811753 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.075038816 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074618593 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073475442 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073156442 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073424372 seconds)
  done (took 1.919943851 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097746918 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073966768 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084476475 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076528925 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107329748 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090272656 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.093106028 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.084857672 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090826487 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084709482 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090277889 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092017474 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095241487 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077710442 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090515625 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076573609 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090938352 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079063696 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082535859 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077352769 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090306624 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077057978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077139783 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085011105 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080474991 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076100148 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083593141 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083547302 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082892572 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08168426 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07722049 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080276322 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075614754 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081970255 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.0909529 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075005415 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076024988 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082167517 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076764206 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083171773 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091357416 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077891784 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.0786528 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081618429 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081746279 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075392699 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.082262489 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083933151 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090708246 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081933415 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082109238 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076322112 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080326752 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081709062 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075298777 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081701003 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082309575 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090854708 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077095271 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075616702 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073638502 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080276006 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08251506 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083275558 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083976255 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.085107486 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078090683 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078650927 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079981792 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07798291 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081961624 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073746631 seconds)
  done (took 7.379015781 seconds)
done (took 29.449249608 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546991108 seconds)
  done (took 1.965591084 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610401668 seconds)
  done (took 2.063076684 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.531145737 seconds)
  done (took 7.978395542 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.377936648 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476055556 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721095817 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140147516 seconds)
  done (took 3.197844732 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.730756617 seconds)
  done (took 2.187835505 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240425724 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230405684 seconds)
  done (took 1.937021141 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381375416 seconds)
  done (took 1.830053051 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130070423 seconds)
  done (took 2.579458201 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.245467345 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184652722 seconds)
  done (took 1.884096175 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452838287 seconds)
  done (took 1.905409596 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.875507858 seconds)
  done (took 6.326579698 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225627657 seconds)
  done (took 1.72139881 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245554516 seconds)
  done (took 1.697231224 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.74925907 seconds)
  done (took 3.200972446 seconds)
done (took 41.938545569 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0917386 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.092719684 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.092488552 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.088017067 seconds)
  done (took 1.794550058 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.085256405 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.081113764 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083632031 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.080430243 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.083814172 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080277172 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082688623 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083308718 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080574243 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.080647827 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.08084113 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080340617 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.082990069 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.08208055 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079472645 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.082598698 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.083735436 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080296453 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.0831728 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080361937 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078789075 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.082494148 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082965292 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079514003 seconds)
  done (took 3.41521758 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086667321 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.080685514 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.08376477 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080048395 seconds)
  done (took 1.793892678 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086469409 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097396702 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095605055 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.086265454 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098104476 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094271538 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.076874069 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07636925 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07800122 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086271699 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076056063 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103248454 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.095874922 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.0857968 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088099246 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.072900945 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075710816 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.094572974 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.086956744 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.086805406 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.077917665 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086407113 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076025779 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096812424 seconds)
  done (took 3.53796049 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089336818 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109020628 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088631914 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097880255 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099926155 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073804979 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088192013 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100402591 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.133673324 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073490304 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07940341 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.073769488 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.082014458 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073215951 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088462511 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.118692239 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.120251051 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077147282 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105682161 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.073453965 seconds)
  done (took 3.312693345 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080477455 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076621346 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.077207114 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072043286 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083604313 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078881519 seconds)
  done (took 1.937202432 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.076693906 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075584123 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073349043 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072742763 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.078112776 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074052151 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072919725 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075122183 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074519689 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.074598695 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074497481 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.072632161 seconds)
  done (took 2.357130459 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189762186 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073205021 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073171483 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071086793 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075812335 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.07204781 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.087635137 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075210687 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.10032451 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.073533168 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072046009 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074500721 seconds)
  done (took 2.503256553 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200615435 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080705705 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229372065 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152598234 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113885507 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117213719 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115514409 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117314297 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140922479 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104910759 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166559775 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166485628 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112196044 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140551075 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097041928 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.109313358 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155309222 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166170577 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111059802 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167055161 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148190329 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13230106 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147470516 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104501808 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107966306 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120689907 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077048951 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084048185 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166331758 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131904165 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141922186 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113532228 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093932223 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175776196 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162805416 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13821962 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148324727 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087540072 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106063262 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132064346 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190448976 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092672531 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302817957 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114393309 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085488568 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133903298 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119264731 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122817079 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106449316 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094556919 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143690767 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177235937 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134537188 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091304147 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127979639 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119008438 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11730495 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118837752 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176884547 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158529942 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130449009 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077195397 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116447945 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153413274 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136469265 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112892202 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128280477 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100094091 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136122085 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157200558 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127263406 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144032301 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118333779 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092435116 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122213077 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137638584 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127920201 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157911164 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124953999 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077693442 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12276792 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101592029 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084042639 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14713821 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079242857 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171119883 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102994296 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109018603 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125139258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113463137 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111046043 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152153955 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287817246 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10780445 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073559799 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108771324 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120074368 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145350391 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091719809 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110543711 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117503646 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082414752 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134835403 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080204337 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123764404 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081725515 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125690759 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133796732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.085712297 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127252781 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109820962 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108439058 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135414449 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159439022 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095271532 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088794758 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167268772 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126120636 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105577214 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141472738 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15488578 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.108861051 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105384926 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149563998 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171082793 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094989112 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160229152 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107089019 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087815707 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091812097 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124860189 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112014924 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124130481 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084978504 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120117169 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165581128 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.08232729 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102490642 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13744712 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085848245 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086021443 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10885167 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10557987 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099598019 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101073876 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104242657 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136161052 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274247346 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115495856 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130812119 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106288038 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167275198 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095012825 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110118669 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111087191 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078183832 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13560144 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156404173 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086509972 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161475126 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128155233 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121752027 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124620215 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090875932 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140680827 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085842538 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078170246 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143349135 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114648491 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114426525 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151802588 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120470044 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127102187 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123498465 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134859218 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133682634 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133365539 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112982998 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095417558 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11698158 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127838252 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078147681 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093837554 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084571311 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107438955 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101565802 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090709909 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14306582 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126270856 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117516864 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117543897 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103306514 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146429499 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083155524 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129748546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12459952 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101734245 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153335286 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151224153 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134374234 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100977873 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285017678 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077503675 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083180974 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094658552 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128301255 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091585434 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091026915 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117983226 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149147932 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132474918 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138797142 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128436999 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123561146 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157195963 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.078050182 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.125736945 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146152614 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126312951 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111389207 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098668236 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106535116 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143590628 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111258772 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178465863 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119742952 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130174115 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158372036 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.109188601 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087273773 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108210237 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136468842 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108477735 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143899175 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105018689 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095803805 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114155633 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.086065643 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104086594 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129650665 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118122032 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133582675 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115005446 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13197319 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081968859 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114667716 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122996006 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120643507 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069779191 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118342948 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154653403 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09845562 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122050185 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30308632 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084636452 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138822614 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172810955 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148487322 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092797221 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112990787 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125611501 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130508312 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124627868 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141439145 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111599428 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140388275 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115511021 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093118862 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093914986 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102649278 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109805996 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101796925 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108274364 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118567879 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103262352 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133315478 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109195292 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116418088 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123356484 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.106627495 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.099934003 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10387684 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176068243 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123291357 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169876497 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105772142 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141699206 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158384786 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079869298 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083798661 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082698135 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137516437 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089033388 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130537944 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111864545 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11754837 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123491442 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138338386 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098294698 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073988417 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110711353 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131828306 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123641864 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100544757 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103489322 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157526292 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101156217 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082485977 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111255434 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114728227 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103365418 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158592377 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066941981 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106451317 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080045908 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082919815 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122621903 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142909052 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082857962 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.09869051 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115735689 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108071087 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119011592 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095683 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109942559 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119531739 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135543402 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120833801 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089134294 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107555306 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118513629 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140776453 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099729379 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097972902 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157249977 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139517057 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144463373 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085180889 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110258639 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109623188 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105547913 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127072192 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084749751 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146220789 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082660307 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125617764 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098310346 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087052137 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119991005 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107531718 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08789591 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132846968 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111562462 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083680548 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078640959 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110303123 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113271254 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101074959 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077371029 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38839443 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.084061667 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140552003 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166961579 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091096483 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115557568 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104931525 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090715931 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111104973 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107189132 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09331198 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.105434692 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168415402 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092764759 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148651872 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135500101 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11508445 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136237309 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106680484 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645093168 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082979811 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150382315 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117939084 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168875889 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104171428 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121037393 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113201235 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122595143 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143265938 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105053399 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184007479 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132520547 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118864425 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083938938 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105671166 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106860844 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090842136 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109916263 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116048196 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116128073 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096033213 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116629713 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122150857 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086593264 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098466824 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151321866 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115904831 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140954824 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13645781 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087955626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118364511 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287109719 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08436856 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118763285 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148937037 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11233528 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107173518 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087963656 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104668113 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157681058 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096861114 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158800664 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126609047 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112557043 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115739225 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110879736 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131158817 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10681547 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122859326 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095420424 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110057827 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115559368 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086060907 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082092665 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109989881 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111964471 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10177034 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100376211 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103310195 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148975219 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077661476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100942646 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117152135 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141554351 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168399591 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092307506 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08795819 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120800525 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117628047 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114357863 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122605712 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083864566 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086566311 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083794863 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086943308 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1093346 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114830345 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114141404 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110667791 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157194232 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087231844 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226051657 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099636741 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107269853 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075474071 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082614381 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098730104 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098719938 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259804767 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119197581 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161512281 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103127138 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097410733 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098420539 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.082345511 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091011456 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129274192 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114496246 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123565466 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107378584 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.071529209 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112714384 seconds)
  done (took 59.917233131 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116793893 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.088431163 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.105389743 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150058109 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128035501 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205962836 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.162415726 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194281973 seconds)
  done (took 2.762932201 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07916137 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.103699947 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.111912861 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.09309589 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.075996797 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.079049078 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235435285 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.091725954 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07412919 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097490268 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.087338813 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.076777536 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42304271 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074926207 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.078270363 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07390649 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.076493895 seconds)
  done (took 3.513239677 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.406179098 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630697601 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349350814 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.083724313 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.974400111 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.101569608 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.30582135 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.144831317 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085731442 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534543732 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411413875 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139426218 seconds)
  done (took 18.761664484 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.092326816 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.085444793 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.098571932 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.097710668 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.087740533 seconds)
  done (took 2.049887234 seconds)
done (took 109.136088659 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.092918629 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431754347 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063526356 seconds)
  done (took 2.11098875 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09620898 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093994291 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.09358828 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.092252152 seconds)
  done (took 1.977200849 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.084286932 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.086663936 seconds)
  done (took 1.762022862 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237460185 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177466523 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.106437118 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091682503 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.088918083 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088950049 seconds)
  done (took 1.86467031 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.08159776 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.084484272 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081394732 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084340463 seconds)
  done (took 1.921793082 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.084362802 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060812427 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063170098 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066513045 seconds)
  done (took 1.865644145 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096293028 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.091229466 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087724304 seconds)
  done (took 1.86685589 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10823848 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095818703 seconds)
  done (took 1.795680392 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089707127 seconds)
  done (took 1.684122336 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098086732 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107336508 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.141189918 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.122790021 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147667595 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.122833441 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.091611786 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092012911 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.087677842 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.09556238 seconds)
  done (took 2.701202293 seconds)
done (took 21.752596477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.088115589 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.38320925 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369832756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099772697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.678531922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.366120101 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.009881064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102383526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150610591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077138835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093837708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.658439643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.003672092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.339627677 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9906995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.338166505 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.659954698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078897167 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077853532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0791752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.997915317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077881392 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.077766512 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078411223 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.657303373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380015295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075224568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.337394213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074527464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076597498 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37928535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075316124 seconds)
  done (took 16.506663305 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080200532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129442049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08180112 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09441615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.080341965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078543016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.081297845 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.078764924 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131114962 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077917033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09586782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.079103382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.081499519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076642908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096906224 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074986988 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075638688 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075821658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.078128388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075040176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097903242 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077728452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07829916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078756125 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078537569 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091562799 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07906136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078079337 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078748315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.080588049 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.081173732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078953747 seconds)
  done (took 4.310628994 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126738844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.134712336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.083097221 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114795866 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122699831 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08012882 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.155151204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.104236432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138999342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.078910255 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09672118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.078436404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112924001 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.079223769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09956764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.078253285 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.079735613 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07911293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.078309673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078610386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.098329625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.078011412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.078972246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07903039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078333628 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.09324327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078333666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.079003738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078482431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.080560522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.082451188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078882818 seconds)
  done (took 4.594213592 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081448058 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.08345057 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.089656469 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.09050788 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075982173 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.079495344 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081464941 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.078226352 seconds)
  done (took 2.272698945 seconds)
done (took 29.284424018 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.088136311 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.078378353 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.082191276 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09885489 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082830065 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.086513855 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.076121078 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.085776489 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.0831824 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.083621218 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.084003292 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07654832 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080884815 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.076262674 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082108033 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075855615 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.087597134 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.081654936 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08771003 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088650072 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.079369234 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.082483989 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.084611873 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087287867 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087746857 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08766135 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.086192651 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081691385 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076881966 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.079507428 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.086138003 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.093674378 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.077069626 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086957359 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076868487 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075947237 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.080489373 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.076269327 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086984241 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084956933 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078342827 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.085454676 seconds)
  done (took 5.069972742 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.098182847 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.102639689 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.094938587 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071848359 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.077383746 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.074884638 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.099047647 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.069703381 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.070444684 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.098983589 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.066186445 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.068976553 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073268529 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.064080253 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.070183261 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.067634686 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.071426809 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.064437218 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.069559591 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.069131723 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0999092 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.063968217 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086815994 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07267451 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.066572465 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.071769935 seconds)
  done (took 3.627457019 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.083617784 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091770093 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.099521908 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153079764 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.119805185 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086696043 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.088510438 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102224398 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103453281 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075400042 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079885832 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102910936 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096980007 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.083315936 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076421223 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.093467366 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.094724268 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077957259 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081680911 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101152735 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095187175 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.094729448 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101108278 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.093107713 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075514315 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078473252 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079781558 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.089680173 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078727631 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085587314 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079589986 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07947465 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.078260068 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08800803 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078976009 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.078127104 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.101972689 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085147846 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.087299114 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076787252 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.085083921 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077232995 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100023938 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133540826 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075373312 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080963083 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077309824 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08377492 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073029397 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10002859 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085242024 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.076346562 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.079088299 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07544708 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07560856 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079024077 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.078384929 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.078534887 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085352039 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.082067283 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101235847 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.081989777 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.092985677 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07600003 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.085315912 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075700543 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.077136845 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.075108344 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101337154 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078032703 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117983857 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.077210956 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077697818 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.086290415 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.085485317 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.083294498 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.076295493 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.093415896 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086440807 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.081498464 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.085465988 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07970535 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078999631 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105619586 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07916282 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.078172643 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.077223116 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081831936 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079006554 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.077295736 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089526045 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07620042 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.079212239 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091577631 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07561596 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077234333 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081298896 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080758651 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075451725 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088277394 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.080091421 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.076645506 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08603308 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075765763 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07842003 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087971442 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082880586 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07494495 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080754801 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081031104 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076364498 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077518036 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078717089 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077855966 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.085076248 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.083758528 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080560586 seconds)
  done (took 11.61431477 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176001071 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.164911754 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080882003 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155239989 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.086613448 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.088094504 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156719738 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102675767 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.077010583 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.078020816 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.078091937 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117830629 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112422338 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.125381624 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087292073 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.077043571 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.099867201 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.122243456 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158188105 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153939237 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.100708217 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085520869 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079414194 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.078597036 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078891086 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.086451512 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.096205745 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085893952 seconds)
  done (took 4.652391756 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088743541 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.112487619 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083688712 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100187952 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098449483 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076870663 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078135067 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076678528 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091139105 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083547752 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074207512 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078804682 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08033363 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07722391 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075170616 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080456294 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080389617 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.077354497 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079575992 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.082040969 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.086079153 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098762198 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080113578 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.077854115 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078816557 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073264628 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06821474 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.09109323 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077255961 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102040359 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074258021 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081782224 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.090814125 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077648869 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076202096 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076456381 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076643905 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076679359 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.079004989 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.074928766 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075613541 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06632612 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075721001 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085697407 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086964207 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063888803 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.081112166 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081656901 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081795517 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.072892276 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07912269 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.079553769 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079216859 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.084638493 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080811708 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082457373 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078101769 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.085953441 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.084852893 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076455555 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.073095991 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.075320438 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0804537 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072465983 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.091075232 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.080158377 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.073654055 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076483881 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078267007 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.089975 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076765063 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081665809 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.074323679 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.078817144 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.08110398 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.079034444 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077912565 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075205798 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.076396684 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.077040068 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063948406 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076942854 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062010704 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.079404582 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074611134 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.075058622 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07635339 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.081134159 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086166606 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075825263 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07992947 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.076053615 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.074650501 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.078578676 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068676437 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078984752 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087623756 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090526915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076992758 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.07411012 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.088049266 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081239043 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.074519795 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.064945684 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078889063 seconds)
  done (took 10.015550541 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.102283694 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07884707 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.091198396 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099780919 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095726037 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.084285565 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087673608 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078848056 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.093632613 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.084552673 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.086483895 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.077013714 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.088045752 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086814337 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.078700676 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087462698 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0809126 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.092623398 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091379714 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.077065161 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.085745846 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089821333 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098522026 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.090503024 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088333599 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.089449648 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098621288 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.086359718 seconds)
  done (took 4.133564141 seconds)
done (took 40.719913685 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.721608934 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.862766794 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.69256664 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.0181247 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.88432089 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.709455461 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.778691167 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.688392497 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.963706198 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.729091385 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.967039845 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.801352608 seconds)
done (took 64.57329096 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.724537999 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.829847972 seconds)
    (2/2) benchmarking "String"...
    done (took 1.930263812 seconds)
  done (took 5.3773959 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.905610453 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.499338144 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.933524128 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.688450523 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.693579635 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.987479046 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.489559841 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.197550228 seconds)
  done (took 30.106577709 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.8389467 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.916459002 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.368269782 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.40184967 seconds)
  done (took 15.19227063 seconds)
done (took 62.112993844 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.721416833 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.700508055 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.720476472 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.673257482 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.746913025 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.707494601 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.11907753 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.744432527 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.687204158 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.674238529 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.68995971 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.12312051 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.701331618 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.900087434 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.687475365 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.698686889 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.698623885 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.150659909 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.843716419 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.708167396 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.700803741 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.7326591 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.693070106 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.697057982 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.701836986 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.688215081 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.091222542 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.695662257 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.310847581 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.691886222 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.719886949 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.129497599 seconds)
  done (took 201.16517284 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.692039891 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.769514822 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.829719932 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.706085871 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.223112775 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.87378165 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.792584966 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.270856603 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.693954708 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.704512849 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.913238694 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.694130679 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.947884273 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.643023383 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.722472874 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.70092813 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.844041663 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.955426369 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.72839479 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.861552318 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.717263727 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.804960003 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.761504391 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.905710987 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.722474302 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.699317807 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.716900124 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.842253593 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.886708516 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.818129666 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.700631121 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.722718654 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.914082993 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.562724848 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.699665135 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.711888489 seconds)
  done (took 167.370875789 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.88366519 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.69554298 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.694295199 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.694143044 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.708008901 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.692181243 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.819824818 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817848871 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.338232305 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.332908242 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742055652 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.690398504 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495867178 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.690960933 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763948015 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.702854434 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.691935743 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.709609621 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.722889032 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.695659799 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.695305328 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820329662 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.70417037 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.692421589 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.700800638 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.69570336 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.699245519 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.070598377 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.691729972 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.733166887 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.691197701 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.699044315 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.952011282 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.692731793 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.693324933 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.553765383 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.768853546 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776058725 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.692462638 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.697130637 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.694345867 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.911266289 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.689716584 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.694127498 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.695940939 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.697416216 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.837551194 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.693846038 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.818501905 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.69348856 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.177219052 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.693339154 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.695075472 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.493589837 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.272387346 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.692957583 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.695743746 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.694938047 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.69699932 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.702745497 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.475250698 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.766239677 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.696736829 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.698202172 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.700698352 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.695430567 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.858100884 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.695743683 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.667665887 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.749589913 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.936238426 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818327945 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697580838 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.76461548 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.787834945 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.693527292 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.696343765 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.696353257 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.697343382 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.777661357 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.692956512 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.830891039 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.693848945 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.703929313 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.69870178 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747979186 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.766145845 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.694158691 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539378372 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.695887335 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.697156134 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979661352 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760115408 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.693557952 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695806599 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.828067585 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.695156218 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.819077022 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.407790413 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.697073887 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.696458396 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.488389674 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.842934361 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.694627022 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.828543528 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.69537193 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.697362754 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.779781471 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.701084108 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.697973656 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.729407517 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.697989148 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.752299625 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.696947335 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.072632108 seconds)
  done (took 394.278842849 seconds)
done (took 766.371810519 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.302402659 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.265545921 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.362320877 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.281533551 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.259575267 seconds)
  done (took 13.092064537 seconds)
done (took 14.713583076 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.785773868 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.789624787 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.717254779 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.790225641 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.714749986 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.788799255 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.769022611 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.724038405 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.755763778 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.722748347 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.7574253 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.724390637 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.711117322 seconds)
  done (took 24.373129256 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.940520892 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.936308866 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.767471852 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.933364613 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.742996638 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.934441751 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.864788256 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.848830693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849557388 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.715159807 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.710131259 seconds)
  done (took 21.866346943 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.948031695 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.945094067 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.774576568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.935701409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.746071024 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.942009406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.865903519 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.856236408 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.854189468 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.715340945 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.711449112 seconds)
  done (took 21.917137719 seconds)
done (took 69.781354198 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.708799859 seconds)
  done (took 3.331698518 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.735466313 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.903150008 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.714540458 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.710888496 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.707982216 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.708860662 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.712663486 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.706096718 seconds)
  done (took 15.524945107 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.707213757 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.704581598 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.702648538 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.704827026 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.703935725 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.705965538 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.705186864 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.70700249 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.704208783 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.707912345 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.703957486 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.704840786 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.706828406 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.705651565 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.702698004 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.705475987 seconds)
  done (took 28.90714636 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.704160801 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.705998243 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.704029918 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.705940307 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.704402949 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.704144417 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.70299578 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.703916984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.703819655 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.703784948 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.704329536 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.704476942 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.705537021 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.706065007 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.70600433 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.70602966 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.70552946 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.706280525 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.711360702 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.706936192 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.706370327 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.705395994 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.706704437 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.708035709 seconds)
  done (took 42.560531887 seconds)
done (took 91.949430513 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.434761148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.42931039 seconds)
  done (took 9.49104691 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.710085947 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.709599566 seconds)
  done (took 5.051703372 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.709316994 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.71034351 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.709479671 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.708373722 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.709615757 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.709441677 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.708720516 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.709607067 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.70970923 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.709245362 seconds)
  done (took 18.721878959 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.708746184 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.710333008 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.706434068 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.709419068 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.709454923 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.708115446 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.709512914 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.710534912 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.709958641 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.70912754 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.710496892 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.70608015 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.710678486 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.708856399 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.711185382 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.70765368 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.708829881 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.709080867 seconds)
  done (took 32.39285026 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.713671423 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.711946598 seconds)
  done (took 5.055421551 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.70886994 seconds)
    (2/7) benchmarking "second"...
    done (took 1.710282377 seconds)
    (3/7) benchmarking "month"...
    done (took 1.709260459 seconds)
    (4/7) benchmarking "year"...
    done (took 1.710032458 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.709814339 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.709795488 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.709935457 seconds)
  done (took 13.599267855 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.713730539 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.856324896 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.918578458 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.349363756 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.715205055 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.717100839 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.631123118 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.716044367 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.717850905 seconds)
  done (took 18.966716561 seconds)
done (took 104.90692276 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.547185268 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.708350898 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.926261289 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.784142305 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.725851252 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.050187907 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.75130357 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.995345665 seconds)
done (took 42.120687605 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.719754128 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.438799046 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.465194772 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.732923648 seconds)
  done (took 15.268562405 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.693297234 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.999212739 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.708323856 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.525861156 seconds)
  done (took 21.561956327 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.074355273 seconds)
    (2/2) benchmarking "read"...
    done (took 2.050634803 seconds)
  done (took 5.761792747 seconds)
done (took 50.946305358 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714652161 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.711570558 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.714475029 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.714151791 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.711827157 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.714927944 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.711550028 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.711935038 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.71071164 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.715322506 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.713413647 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.715873988 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.715446785 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715097249 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712668438 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712204575 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713926935 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.712895487 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715044972 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714697555 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.715317901 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714129393 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.71288186 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.712376972 seconds)
  done (took 42.759287631 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.716204551 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.713469836 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.716226406 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.714939458 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.713057439 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.715068113 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.716501787 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.712633652 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.717964713 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.717285446 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714229712 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.713698058 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.71476873 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.714428701 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.717345206 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.713738853 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.716578932 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712902899 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716664043 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.713083796 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.716491217 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713900911 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.713436479 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716289181 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.71479591 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713864355 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.716112297 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.714752139 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.717028994 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.715774989 seconds)
  done (took 53.087642554 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.72167497 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.725171685 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.716886706 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.717195044 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.716684189 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.717522828 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.719783356 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.719096169 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.7168884 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.71636711 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.717776738 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.718160665 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.71783464 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.718500722 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.717682594 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.718619783 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.718956867 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.717928419 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.718205182 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.717668182 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.718475992 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.718336043 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.719407781 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.719630317 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.718142825 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.719337381 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.717646102 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.719115773 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.718092228 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.718398923 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.717648206 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.719193403 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.720213062 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.719556604 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.718075183 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.719565657 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.723682853 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.72754896 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.719248915 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.719343012 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.718479613 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.719315907 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.718281626 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.718578861 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.718846291 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.718979131 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.71787824 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.718148716 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.719066416 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.721239906 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.719461053 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.721061635 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.720716596 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.719186124 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.720725128 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.718403157 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.719797084 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.718404844 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.719605225 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.718372898 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.719199212 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.719483594 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.720581641 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.719351019 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.719059567 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.720236592 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.721189825 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.721260044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.719621093 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.720819963 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.72160761 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.720324873 seconds)
  done (took 125.424263625 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.720909707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.719415493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.716730375 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.717210031 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.717344869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.72058476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.715302236 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720587023 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717696811 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.721557109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71909449 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.717739446 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721728771 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.719747229 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72021331 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.719207276 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.720595559 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718294169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.720538854 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.720730262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721336563 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.717838638 seconds)
  done (took 39.462971703 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.718622185 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.721662944 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.717820581 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.721304746 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.71882144 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.720098136 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.723190024 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.721316339 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720418896 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71747353 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716601256 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721575423 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.717455948 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717081564 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718241305 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.7181503 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722180254 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.718813002 seconds)
  done (took 32.589742683 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.719270027 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.718824736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.723281574 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.719255588 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.719064244 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.723032099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718855039 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.72052819 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.723066896 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.718751058 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.722784092 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722278846 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.721319494 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720078651 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721956864 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.71963217 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.722868079 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719284065 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.722763588 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718896763 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.720282165 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.724295808 seconds)
  done (took 39.499575941 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72403945 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.722621051 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.720271317 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.718848713 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.71994344 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.722229797 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.723126045 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.720889278 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.723699497 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.722991217 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721198236 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.723005912 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.721688562 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.720872748 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.722812768 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721709537 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.723578693 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.730042796 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721866254 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.720624091 seconds)
  done (took 36.08785239 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725154176 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72536344 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.724903929 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72630603 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725548436 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.724776919 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727264119 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.725291582 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727724639 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.727609604 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.72666808 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.72673368 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726204713 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.727443611 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725595273 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730322176 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.727435798 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.725545448 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.728031571 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.727689516 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.728467778 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.727002524 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727321899 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.727368425 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.728273267 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.728604753 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729832614 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.727594719 seconds)
  done (took 49.998470383 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724033765 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.726642773 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.723607843 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.721924987 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.723341115 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.722988011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.722818113 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.722075206 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725247425 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.722889235 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.72670094 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.725658758 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.727152103 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.727006895 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.726905409 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.726860818 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728599168 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.724790947 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722199568 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724744221 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.726586052 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726895308 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.726413427 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.722388425 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723505512 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.727372186 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724485377 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.725555107 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.727816574 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.725197454 seconds)
  done (took 53.397233668 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.74479226 seconds)
    (2/2) benchmarking "in"...
    done (took 1.747628178 seconds)
  done (took 5.137691918 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.723162302 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727626377 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.729250307 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.72530242 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.72437999 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.727296488 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.725900368 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723500514 seconds)
  done (took 15.450985072 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.72667735 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.726275368 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.726667384 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.727383496 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.728730487 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.727610687 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.735015752 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.726674862 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.728841522 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.729838181 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.735248737 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.740954845 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.729789322 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.728593356 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.728412867 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.730749492 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.727256943 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.730505423 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.729457092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.727876462 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.731570827 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.73081122 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.731843965 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.725388875 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.730313404 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.740888861 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.732758751 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.727466646 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.729877216 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.731682053 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.728188589 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.725300118 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.729926325 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.729185925 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.728237336 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.730333073 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736328597 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730454514 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.736046925 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729702797 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.728359504 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.725242705 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.730420135 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.73007818 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.731193822 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.730513301 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.72974651 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.726383303 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.72926457 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.731413254 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.736262249 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.727322504 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.726316183 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733417051 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.73015488 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.736751787 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.732353988 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.733203639 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.740571278 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.741385074 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.742980096 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.739295913 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.732633494 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.734037446 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.739963158 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.756263649 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.73690087 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.727599961 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.728186454 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.729675023 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.737123634 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742868401 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.74138939 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.732196458 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.73120589 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.729752165 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730372633 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.731168443 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.739020449 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.736086163 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.732774807 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.731665513 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741959493 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.755620236 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.732486475 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.733201676 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.732818667 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.733664791 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.732410734 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.745986002 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.734588302 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.731093594 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.731275004 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.732010646 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.733819052 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.733487061 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.733312534 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.734419174 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.731222215 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.732251324 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.735011552 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736048915 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.74410917 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732993269 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732924727 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.73947815 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.732580007 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.732393825 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.740099454 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.731780564 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.735316608 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.733624268 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.740843111 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.729732987 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.735714271 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.743400907 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.734716206 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.735776043 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.735756941 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.733818881 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.745725555 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.761598263 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.734260096 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.734177019 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.736939775 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.748721943 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736444974 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.738412304 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.733674446 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.731319273 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.729764166 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.736571253 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.736696075 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.735611245 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.735823275 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737093585 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.734309124 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.7354398 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.736303147 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.737194729 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.736358432 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.735312526 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.737377276 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.738324299 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.737970188 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.737484624 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.741035513 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.732514801 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.737090485 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.735380974 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.731427155 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734794621 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.737843474 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.737770523 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.733758065 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.736314898 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.734651231 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.735270672 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.735266469 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.733439946 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.736543837 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.737742405 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74131555 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.738813251 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.74025155 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.736159199 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.732258338 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.735220556 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.735470925 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.736393788 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.735813943 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.736760045 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.737798873 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.748695484 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.736245299 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.738555737 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.738543496 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.737084623 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738877322 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.735974466 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.739957207 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.746042149 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.736423414 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.745481844 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.74125532 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.739315732 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.738364839 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.737083435 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.73644345 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.738543199 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.739557012 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.744433115 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.749093307 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.746801785 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.737469915 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.742201187 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.739030688 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.744344054 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.742494247 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.738534334 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.737938382 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740717793 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737698704 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.739740382 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.7404344 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.740608248 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.73814252 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.737976413 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.736583673 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.740187119 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.738275829 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.74049873 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739833706 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.736446595 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739969261 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740528707 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.738712612 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.73564912 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.737959889 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.740609977 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.737228429 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.741058829 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.747541588 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.734649815 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.739878509 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.739878772 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.740196062 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.738770187 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.740294566 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.74206498 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.738047151 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74643155 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.740090195 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.741706061 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.748093544 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.741639735 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.743209226 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.742066623 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.737049905 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.73683756 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.742962845 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.747726307 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.740945031 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.741398529 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.742773519 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.739708956 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.740601816 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.74892517 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.738682988 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.741001806 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.741467534 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.742818265 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.738088944 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.744450421 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.742909232 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.741123422 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742464024 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741274524 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.741846148 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.741662681 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.742422099 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.743302439 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.742010175 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.743166471 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.751755969 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.746975426 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.741184107 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.744027615 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.743960705 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.744768764 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.742393446 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.743403097 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.739709282 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755711898 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.750783081 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747488422 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.741530545 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.741433528 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748165843 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.740821983 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.747176365 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.740337331 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.741394965 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.740237151 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.74160523 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.739213656 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74348721 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.742946416 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745158918 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.743363129 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.745526941 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.742407666 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.742709752 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.742943636 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.74278543 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.742461729 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.740464596 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.740557796 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.743745742 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745598388 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.74022088 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.74109849 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749670994 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741693689 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.744172013 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.742817275 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.744389102 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.742163751 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.747304427 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.744876746 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.746301914 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.751619426 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.746432282 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.755458049 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.743958829 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754949903 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.744779217 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.74573447 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.753108278 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.739962194 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.7428249 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.743624121 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.746059725 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.752336832 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.74639371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.745532418 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.748894486 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744347178 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.74480287 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.744354469 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.744281221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744071292 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.74633745 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7518991 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.745537542 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.748143462 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746426146 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.741272702 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.744808929 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.744780324 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.742993791 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74814698 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.744432911 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.746242236 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.743492066 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.744411066 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.745306154 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.745984119 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.743189401 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.741129481 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.742740544 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.751190038 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.746919525 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750679658 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.743656809 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.75267397 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.74540474 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752529751 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.746096057 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.747034101 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.74530245 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.743907577 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.746287516 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.746278653 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.747110134 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.747857032 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.746064821 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.751071596 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.748727967 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.749077831 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.747420737 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.748801758 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.747467672 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.756568952 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778712549 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.749812892 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751402072 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.743717555 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.747821706 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.752954795 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.749039731 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.744154852 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.747454098 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756941636 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.752487146 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.745924729 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.747481585 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746359178 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748499645 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.745470246 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.745724855 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.749500797 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.747307727 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.745257664 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.748267573 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.750768679 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.745281069 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.74749489 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.746185557 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.74778084 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.757132336 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.748596604 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.748977915 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.749512464 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.747581507 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.747730224 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.748989889 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.748888298 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750513096 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.748526854 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.748089165 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755248744 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.756623975 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.750418041 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.745558057 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.749254377 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.748303225 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.748368325 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.749346261 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.74965854 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.748985423 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.751137006 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.749999461 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.748971581 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.746847428 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.74993169 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.751597646 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750433968 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.750627703 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.75655231 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748712624 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.745857087 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.749145742 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748497182 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.747318792 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.750956737 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.757734799 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.751729737 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.761777402 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.759049667 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.754732391 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.747288994 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754495554 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.760243226 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.748557043 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.748760622 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.748601938 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.751145203 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.749710836 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.753133691 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750531422 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.757465317 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.749148418 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.748886514 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759337505 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.751722834 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751222539 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.749006305 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.753283421 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.75072669 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.750610624 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.752100634 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.75068233 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759410883 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.751749172 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752108324 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75219034 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.747127924 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.750937565 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755652319 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.749913564 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.750648786 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.747611026 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.751142497 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.75172313 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74986466 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.747221178 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.752921932 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.750658083 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.756686744 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.759890498 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.747957498 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753657939 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.749874083 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.75303833 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.754499087 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.749080814 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.751156092 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.748958482 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.750050752 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.752979459 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.753416551 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.756107687 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.751744154 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.757295971 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.752805706 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.753891158 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754861109 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.763332795 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.761445596 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.747768766 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.751586732 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.75405159 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.752727819 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752868605 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.753483676 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.753020546 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.75539331 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.752329308 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.752738666 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.75088838 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.758620333 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771767801 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.752248224 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753324785 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.753098696 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.755983055 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.7515981 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.750063075 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.753397209 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.756336802 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.754998494 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.763809792 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.752877824 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.760381555 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752202379 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.755093385 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.759176663 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.760080554 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.763547421 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.757148357 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754817766 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.755258322 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.758971769 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.773419183 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.753495037 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763819904 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.787114978 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.754704744 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.753936779 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.756512338 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.753682697 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.75604266 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.757050576 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.756794083 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.755669028 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756467243 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.756491316 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.75630761 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763510334 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.756851361 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.754662897 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.754317045 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.755096572 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.755402279 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.752691472 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.755876166 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.754616233 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.756917451 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.756350118 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.757769557 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.755324689 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768179943 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.769040716 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.755663923 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.757733833 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.750646668 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.759960057 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.758362476 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766838205 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.763131508 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.755189502 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.757633588 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.758957305 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.756112867 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.752407108 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.755112334 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.754441355 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.754149378 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.752722794 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.771183704 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.767166743 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.760535884 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.755767414 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.755794873 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.756771032 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756977387 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.759034392 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756544249 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.758271819 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.758723308 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.763982375 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.75668536 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.757989352 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.761619574 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.765498877 seconds)
  done (took 1041.473298595 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.756287032 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754494845 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.753789801 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756121257 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755766512 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756552947 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754832789 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.752603713 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.754958766 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.754125131 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.752891004 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754065943 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755508359 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.755553441 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755616206 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.754962869 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75385322 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.75597917 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.75445433 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7531671 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.754313001 seconds)
  done (took 38.524599417 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.756803851 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.755314447 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755476934 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.756426382 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753382044 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.757013307 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.753062822 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75779758 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.756394732 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753867521 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.757159601 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755767402 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.755981968 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.755613051 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754023392 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.756625096 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.757149091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754688013 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.756565078 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.755768758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.758030886 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.755436352 seconds)
  done (took 40.302477986 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.760623399 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.760474463 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.758959043 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.755442985 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.758877628 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.756489392 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.761433548 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.758910778 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.760157747 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.758631345 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.757994507 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.761745384 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.768496517 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.767206981 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.761476731 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.759372389 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.903849587 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.762069284 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.761060313 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.762251831 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.756557874 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.765690089 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.758395754 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.756439979 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.756778383 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.761543947 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.759397835 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.759803091 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.761585937 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.760678183 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.765934589 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.758861388 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.760200844 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.764157137 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.759881749 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.758186498 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.764929321 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.763023562 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.75657365 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.758292487 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.772195942 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.783768889 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.762383642 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.767344106 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.759543985 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.764519102 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.76201841 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.772216173 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.756415612 seconds)
  done (took 88.139656377 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.75776947 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.762887913 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.756970982 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.758974184 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.758707902 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.760054956 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.759261092 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.760350761 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.756786281 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.756457821 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.759523546 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.757937867 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.758468331 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.761411078 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.762220562 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.759418733 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.757813867 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.757999576 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.758274442 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.757559831 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.757912525 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.760330187 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.759677847 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.758576412 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.761370615 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.758398237 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.756037437 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.759799549 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.757483711 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.757515236 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.760348062 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.758270544 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.758672659 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.75723254 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.757359722 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.759811801 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.759915957 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.755740615 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.758475754 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.756565313 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.758199018 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.762956377 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.760522254 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.758575367 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.758396042 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.757148027 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.757271895 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.755394304 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.754780286 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.756870302 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.759226614 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.754625811 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.758613194 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.749959736 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.756316253 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.755499553 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.75076765 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.750261158 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.756155326 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.75804957 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.754097285 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.759318311 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.757213071 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.75922525 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.756360112 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.758297951 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.759598738 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.757464205 seconds)
  done (took 121.21600304 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.758813049 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.763390918 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7606795 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759757484 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.761322486 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.760166174 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.760111343 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.766216398 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.762631943 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.762335894 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.760303248 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.76064913 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.760960959 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.75952708 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.761648392 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.757594658 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.756968386 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761202591 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.760803882 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759152585 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.764241415 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.764311091 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.763571321 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.761669523 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.7591383 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.761196517 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.76181749 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.762277712 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761654044 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760203573 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.762374597 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.762635429 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.76196461 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.760475218 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.759217713 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.75844016 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.759280469 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760636019 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.762216282 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761026107 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.761019966 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760047615 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757635966 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.761119586 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.76075513 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.758014417 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.760582364 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.755655041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.759159356 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761803958 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.756823813 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760341491 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763848563 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.761017443 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.764378598 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.758020151 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764525938 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763844344 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76519748 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.757826751 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762824958 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.761046057 seconds)
  done (took 110.857222136 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76227596 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.762888808 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.759720553 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.755666663 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.765286861 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.75890381 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.763197736 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.759417497 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760647941 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.762108993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758352061 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.755708246 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757406754 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760124325 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759014432 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760310771 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752975356 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760658334 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757725024 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.75570821 seconds)
  done (took 36.867412871 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.758763965 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.762443875 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.749971015 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.74640508 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.748601153 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.745209123 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.748081993 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751231071 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745397143 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744704054 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.745454035 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.747415912 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740976098 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.744661701 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.746418076 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.743011235 seconds)
  done (took 29.646080948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.745369862 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.743966856 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.747541527 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.754101025 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.745585764 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.744382902 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.747438039 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.746144239 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.743998968 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.750075854 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.748592652 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.746752335 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.746687635 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.754439406 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.746593215 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.747834348 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.742745312 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.750502405 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.7495812 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.753574918 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.747982249 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.745774675 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.750142818 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.748677396 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.748015092 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.746585229 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.751221833 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.749517984 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.745407747 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.748854085 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.745148554 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.747082295 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.744991778 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.748422126 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.752166584 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.74645791 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.751193913 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.75392037 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.752021222 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.748027637 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.747175752 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.74706265 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.74985568 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.75299781 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.746297323 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.749099802 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.74396072 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.750972975 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.750824398 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.746658895 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.750137298 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.751444167 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.751197826 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.750232367 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.75172613 seconds)
  done (took 97.834479433 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748779052 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.748822827 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.746930605 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.751658595 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.751458253 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.746485568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.7499955 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.746224457 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747236019 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.748681092 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.747632463 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.748760924 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745307257 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.747549961 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.747365748 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748303032 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.745411703 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.742453556 seconds)
  done (took 33.130950189 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.746095104 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.745593677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.750480646 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.747652454 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.747110607 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.744229835 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745584603 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.747290623 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746440021 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.74379436 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745755678 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.745600177 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745609731 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.743789266 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.743645365 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742476767 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.745238346 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744863704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.743499337 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743784912 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.748144117 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743793289 seconds)
  done (took 40.070135221 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.741283091 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.742372258 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.762149777 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.769128003 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.765525986 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.784575438 seconds)
  done (took 12.231530773 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.739621048 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743462715 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.746115806 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744910498 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747087308 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745604218 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743257465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749188585 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744168206 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74159732 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741787681 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745066223 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749325965 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742477229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744148492 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747389148 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.744004255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749358215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745595424 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746588701 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741224077 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746096583 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741617263 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.745999488 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74692371 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74638643 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750370304 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741195278 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745199535 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746438749 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748834588 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740813495 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743475947 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741687221 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744989118 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743742135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740296677 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744521879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741657537 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742616192 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.745038718 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74372042 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745619253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740466839 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743389841 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740129564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745322293 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740489157 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741685407 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747562942 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744897325 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742187008 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743996445 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745706974 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743722981 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743073874 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745176014 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743990666 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743305727 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745559277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741048868 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745527589 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741067642 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743277507 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745299428 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738095791 seconds)
  done (took 116.781963424 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740792345 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.74437538 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.738895283 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741135344 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739097438 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741434654 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736793254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735187987 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743925469 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744414353 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740890538 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742770817 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741875916 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743495717 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737805711 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741367913 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739447836 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740912344 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742327317 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742828927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739349412 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734975765 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742384632 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739870253 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737927176 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743552699 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738976096 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.738794558 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739288841 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740568012 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743975821 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737626746 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738813585 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.740906079 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739505898 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740671857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745565049 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736026012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738732937 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74116927 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741619524 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739263833 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744477667 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736733164 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742575662 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737485871 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739186416 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735011178 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743260673 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734274815 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737216092 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737024592 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740398176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739052929 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736270497 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738307014 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739628296 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737106023 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739502475 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741295238 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73796148 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.738093917 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741566652 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736351634 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.738862078 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736324296 seconds)
  done (took 116.494866121 seconds)
done (took 2418.103239855 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.735729866 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.83394353 seconds)
  done (took 15.230229486 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.912195474 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.864231662 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.746127796 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.789842585 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.740922366 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.743050414 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.757226982 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.745323426 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.744591576 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.747215895 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.746028751 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.930526342 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.794863382 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.744707043 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.744109912 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.839720973 seconds)
  done (took 50.414685049 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.752711967 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.748382277 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.76063628 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.754196502 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.753059361 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.765000929 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.780407588 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.754351414 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.811699732 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.760958086 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.879449018 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.757268951 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.746102548 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.796973977 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.759246401 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.759415685 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.839322538 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.821743757 seconds)
  done (took 33.662721265 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.824747251 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.75454777 seconds)
  done (took 10.249729776 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.778352049 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.79542734 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.791314326 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.744477669 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.749452562 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.760448983 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.743327162 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.743682987 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.765419159 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.7529471 seconds)
  done (took 69.293006614 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.750236259 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.748950162 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.746627863 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.74633634 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.744040247 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.739463994 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.745380047 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.738440843 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.410472739 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.776655583 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.754923817 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.752900214 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.747095854 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.748741164 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.744591715 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.767976464 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.857398908 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.748024241 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.740717959 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.755508965 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.747501196 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.814088426 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.759512386 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.752764146 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.775773194 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.414589561 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.750036473 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.753275588 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.848847147 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.740934565 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.748961617 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.745361326 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.747054893 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.144196522 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.022308548 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.749773433 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.758434456 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.758758388 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.741794776 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.885831383 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.749145209 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.752694876 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.509298429 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.997659556 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.838080838 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.791132889 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.054303337 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.763977058 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.748487328 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.777429078 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.753742378 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.749909855 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.763795068 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.238821013 seconds)
  done (took 125.576465343 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.751020283 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.089321393 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911334693 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.74618188 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028894184 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954900688 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.740120935 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793712419 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.74349664 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975932446 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.998188401 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.849554676 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.737217919 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.742645094 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.740009816 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.737917497 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.906115094 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.814075986 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.743649815 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.742800703 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.775112664 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987940742 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.867535238 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.744121476 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.771300127 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.955581581 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.864703742 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.851077909 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.530620954 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.739831264 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806894562 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.742518044 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.741817167 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.737718971 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.904286505 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.836567768 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.830826939 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.744080847 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.740928731 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.739353718 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.413617464 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.947394211 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.841697358 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.884438381 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.939096981 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.946489074 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.527466914 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.744096854 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.490874369 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.909009863 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.976290354 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.985532684 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.864689754 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.745773226 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.271693574 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.743368849 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.742487256 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.994726646 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.88762132 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.839339666 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.741866162 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.741763286 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.739539359 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996064426 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.742526147 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.840482232 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.741616617 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.740202639 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.844447281 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842577751 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.883174634 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960711193 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.774505919 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.700134097 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.277179522 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992347132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.806122728 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993760217 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.743259424 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.739613526 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.827249355 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.589057852 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.002704803 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.992069039 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.000412023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.778772032 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.470318247 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.744317165 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.97427157 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.969646648 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.008040401 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.94766384 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.98223823 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.077556087 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.746247877 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.744238178 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.969101879 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.877895173 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.744296732 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.09362112 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.978208713 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.289051519 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.76713029 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.055033929 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.877454795 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.74439227 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.391276717 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.745322511 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.983204957 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.791986192 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.745257564 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.744018662 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965429164 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.734990508 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744581186 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.387269221 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.804995578 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.749699878 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977486035 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.744529304 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012463419 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744172579 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986960491 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.753262878 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.774435791 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.978914653 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.94890962 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.741282714 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.990445553 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99145788 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.859789933 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.963838212 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.439422161 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.739593196 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033644793 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.745056235 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.749007347 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.914423217 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.743398591 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.891479401 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.746151805 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040169666 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768893152 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980002124 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.743113049 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.005232719 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.779299101 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.795007287 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.742029635 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.876740103 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.7461067 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.672274742 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.905470514 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.747913712 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.745144251 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.557057036 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.73996553 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.896624984 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.982030949 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.192401938 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821158609 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.415607954 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.747296411 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.830754582 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.771154081 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.138896096 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.746166003 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.997781769 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.745024217 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.745442283 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.745921116 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.988213432 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.929442942 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.742289041 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.744076933 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.66218982 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.744278056 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.748401822 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.932158635 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.198463927 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.740850975 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950285231 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.747889346 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.878397712 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.744533582 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.822548754 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.091294254 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.744433146 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.746007285 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.749982111 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.746809367 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.749859246 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.014026878 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.775965559 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.267223637 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.887218179 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023015573 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.058383063 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.996753996 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.7883159 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.751331428 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.001886654 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.748073206 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.808767836 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.74845459 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.769945063 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.981781015 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.749335389 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.957079895 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.026953878 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.593230063 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.797770716 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.755353191 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.748560847 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.744835995 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.893470752 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834116067 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.747892154 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.749448365 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.864079482 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.866266368 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954338005 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.745816287 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.819438539 seconds)
  done (took 875.872543261 seconds)
done (took 1181.959296409 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.748085145 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.746082682 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.740603811 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.746596117 seconds)
  done (took 28.65151389 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.755887157 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.754367258 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.755580497 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.756406576 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.753316242 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.751628303 seconds)
  done (took 12.197252389 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.815556945 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.747030209 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.755126105 seconds)
  done (took 20.986945587 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.824078738 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.137154723 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.865560594 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.178414671 seconds)
  done (took 9.674441589 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.754567124 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.756882484 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.754273559 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.756934126 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.756540879 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.756692537 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.753510269 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.75755084 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.754986311 seconds)
  done (took 17.475904326 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.793689868 seconds)
done (took 94.447012124 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 4.644083756 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.752544659 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.838472943 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.76520988 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.814828839 seconds)
    (6/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.835268543 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.857112275 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 5.528765688 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.75710717 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.251713009 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.148569838 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.761743438 seconds)
    (13/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.034440673 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.767940376 seconds)
    (15/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.70146446 seconds)
    (16/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.888365774 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.748814058 seconds)
    (18/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.445711627 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.840612158 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.065836667 seconds)
    (21/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.904653466 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.01127298 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.920628492 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.766430127 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.910932054 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.770435689 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.770007926 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.310973851 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.035163614 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.816139311 seconds)
    (31/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.736774987 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.618472833 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.827975573 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.735429094 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.032436793 seconds)
    (36/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.741999847 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.835362985 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.837678869 seconds)
    (39/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.840521558 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.738158572 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.226825169 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.760711195 seconds)
    (43/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.921231194 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.749981758 seconds)
    (45/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.838391167 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.984760209 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.132805734 seconds)
    (48/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.140526543 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.752145851 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.71507272 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.876955509 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.047250927 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.865872269 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.874605488 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.977906654 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 1.970332047 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.715045661 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.86568514 seconds)
    (59/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.764828558 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.997650145 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.760710874 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.752307414 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 5.579666495 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.770050466 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.117005121 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.889162246 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.008839104 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.872281 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.073639493 seconds)
    (70/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.643130237 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.911636984 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.911834327 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.772063568 seconds)
    (74/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.778544824 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.893552718 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.660714274 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.381658983 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.843005191 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.911114767 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.872364963 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.037554053 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.096232395 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.751897206 seconds)
    (84/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.97476542 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.738387935 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.473905692 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.054626298 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.828184764 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.757329045 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.302585141 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.752952611 seconds)
    (92/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.384992172 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.145760524 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.328676654 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.940815906 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.753741125 seconds)
    (97/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.27582947 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.093711877 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.740291206 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.967826349 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.177547901 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.856431542 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.929711048 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.178643148 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.017735576 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.763513716 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.714105419 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.837450951 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.779509806 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.02153063 seconds)
    (111/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.233982424 seconds)
    (112/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.753515991 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.773830875 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.752895646 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.751037264 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.514928115 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.846460801 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.751980135 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.081658869 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.103069124 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.845470086 seconds)
    (122/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.739730161 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.346905889 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.776566119 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.737486166 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.843567439 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.222184247 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.755014853 seconds)
    (129/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.9975957 seconds)
    (130/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.179292065 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.952276815 seconds)
    (132/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.850664324 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.988453898 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.781927252 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.664798304 seconds)
    (136/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.995485044 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.556121289 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.782903689 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.874979605 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.772219757 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.409981205 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.747551379 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.818720409 seconds)
    (144/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.455083057 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.567039713 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.90960397 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.821837466 seconds)
    (148/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.78788162 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.945398363 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.012765696 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.855337429 seconds)
    (152/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.755594314 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.522093302 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.744602319 seconds)
    (155/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.601188148 seconds)
    (156/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.834269596 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.884187211 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.00760532 seconds)
    (159/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.95710185 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.7534146 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.739670263 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.927448128 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.438373653 seconds)
    (164/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.785675881 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.898096269 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.742170563 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.879062402 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.794830654 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.788117024 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.890888231 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.810005431 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.842654368 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.680111193 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 5.464297982 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.320231899 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.85398884 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.743753466 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.880710031 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.758527314 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.684153855 seconds)
    (181/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.842270054 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.061773833 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.735556002 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.762721082 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.821925156 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.757580052 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.050200013 seconds)
    (188/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.948782877 seconds)
    (189/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.989899087 seconds)
    (190/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.936991292 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.914533928 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.756482395 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.252427101 seconds)
    (194/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.09423795 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.116636693 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.743219338 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.415183415 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.06931946 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.875084207 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.202242773 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.27032167 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.979753735 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.778657749 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.125675975 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.827391309 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.893359082 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.598161737 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.845253686 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.759251792 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.343051199 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.267148411 seconds)
    (212/309) benchmarking ("sort", BigInt, false)...
    done (took 6.756291784 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.791189409 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.999079367 seconds)
    (215/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.757279373 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.437580431 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.410313095 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.973090459 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.761449846 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.787234638 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.745228127 seconds)
    (222/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.530177135 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.995582909 seconds)
    (224/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.826513795 seconds)
    (225/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.16900367 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.805554486 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.785181235 seconds)
    (228/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.303534084 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.74229038 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.887155522 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.768800993 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.097812563 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.072561325 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.942427865 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.759790804 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.11695761 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.994168923 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.85698679 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.263038705 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.854033107 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.861491457 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.745291472 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.220650766 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.165572868 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.899724381 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.746073908 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.917457884 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.489167181 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.863372371 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.829972627 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.764624871 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.513069687 seconds)
    (253/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.708789277 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.05667676 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.883608721 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.73362689 seconds)
    (257/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.246049587 seconds)
    (258/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.830241926 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.167470794 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.759838583 seconds)
    (261/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.44641896 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.111259005 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.761333627 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.104489055 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.865700878 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.675322255 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.060071337 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.875906076 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.760866033 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.132451494 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.785048894 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.74830823 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.983288563 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.170009822 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.866217053 seconds)
    (276/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.906077613 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.929836037 seconds)
    (278/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.886675462 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.059011005 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.764865176 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.042726198 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.762265579 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.527412057 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.935365847 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.914316306 seconds)
    (286/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.964237512 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.764811604 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.788277637 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.520306784 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.935220183 seconds)
    (291/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.910936456 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.748415965 seconds)
    (293/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.18639444 seconds)
    (294/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.848176314 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.166034881 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.474079974 seconds)
    (297/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.827732932 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.792998945 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.759869346 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.386107876 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.802655931 seconds)
    (302/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.915038273 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.789777289 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.157931632 seconds)
    (305/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.768457721 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.977341537 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.780937187 seconds)
    (308/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.181399134 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.189503268 seconds)
  done (took 975.445740717 seconds)
done (took 977.18183052 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.798088164 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.78752 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.774116245 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.793748577 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.884540265 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.7978882 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.783240725 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.778850533 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.815739995 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.821000488 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.769216451 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.799998644 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.778067822 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.77195924 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.770131746 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.78460064 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.081678479 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.793303524 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.789584803 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.778032965 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.786758689 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.767928079 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.822027948 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.797890881 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.77701144 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.774622131 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.774958605 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.795565687 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.882256728 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.776941772 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.774465304 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.78247246 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.074431546 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.792228011 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.767812542 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.791937683 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.783857051 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.779567441 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.77844382 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.803579649 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.160646305 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.801149816 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.773970986 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.771771902 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.774302095 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.776610138 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.773731247 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.777649141 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.785151799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787767931 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.156048934 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.824473046 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.77747449 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.775369853 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.785521372 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.776355086 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.775031572 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.790062217 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.791832044 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790189549 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.060461217 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.800327763 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.77775481 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.790768452 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.77947362 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.190730324 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.797604746 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.776834021 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.165089719 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.808888713 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.191534068 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.81099357 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.773202887 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.789667305 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.8061487 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.078967143 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.791743786 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.774542575 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.78411138 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.77230034 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.781930203 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.785227931 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.776915365 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.774785229 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.789868217 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.801404097 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.784387437 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.776581219 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.781515621 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.794537351 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.784376953 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.785045991 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.777902908 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.771263052 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.785402021 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.778733432 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.777824363 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.778591023 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.780255188 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.785317997 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.160383898 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825953634 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.774492481 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.774280577 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.77561548 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.794190353 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.16168043 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.808029418 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.797163606 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.819967035 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.77647901 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.064002671 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.7985139 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.7913676 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.785561213 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.777990087 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.772610701 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.06048003 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.179284963 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.822234561 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.777542047 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.772953656 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.791586132 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.777276722 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.774272642 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.082972817 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.800634936 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791713028 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.899822431 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.789244361 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.807982819 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.773892603 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.779900364 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.809097596 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.79346296 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.808625401 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.776601266 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.79238927 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.792847286 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.776115537 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.787063092 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.786461233 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.778550318 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.783348548 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.771077405 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.809135359 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.788234614 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.790419582 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.799591881 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.898187897 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.773780151 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.062947166 seconds)
done (took 279.044108864 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.843852481 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.769226392 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.871157311 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.776274873 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.854832991 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.858056616 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.771873238 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.771335238 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.771629336 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.150792549 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.771133342 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.77301902 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.77634917 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.771826453 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.856543693 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.772248812 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.770294086 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.115785493 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.776485382 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.846025614 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.775026651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.771689438 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.775102012 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.179211453 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.770866008 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.767812431 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.845643616 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.775461975 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.111252968 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.771711553 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.772961669 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.11685924 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.864687044 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.794682743 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.784064772 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.782082281 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.855909197 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.7832772 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.856972434 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.856709354 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.872630425 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.815634588 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.771201289 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.775867995 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.777803436 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.778054818 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.771898402 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.805538855 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.780139675 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.773272764 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.114412981 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.787688676 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.78281516 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.774219167 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.772955407 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.79868605 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.7747824 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.780504774 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.86787182 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.778652897 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.837901061 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.203892677 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.151975857 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.77585821 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.77773391 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.77485352 seconds)
  done (took 178.04783978 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.84401646 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.853437964 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.841885622 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.779815216 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.827104224 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.84286795 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.779875055 seconds)
  done (took 14.461934325 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.783748973 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.776789268 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.829380902 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.828230392 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.777947363 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.930447207 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.778119739 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.787943964 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.774099726 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.827411921 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.778799302 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.78047149 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.785895611 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.774956252 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.833178836 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.786935413 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.895983679 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.779347062 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.780210251 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.93145189 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.773546677 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.784641657 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.812998409 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.787948673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.779419339 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.790789502 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.374876082 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.778799564 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.776173243 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.779812581 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.780357517 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.819563889 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.779916184 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.777177605 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.775286406 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.889831409 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.781283828 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.776106175 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.77972197 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.781393651 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.780007632 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.784679359 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.777223991 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.776776342 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.779454214 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.802878045 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.778930231 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.780810671 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.779963099 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.78160481 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.812927966 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.779267734 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.777746111 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.779514782 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.833448428 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.785701759 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.782791131 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.775636175 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.783758184 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.777305866 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.931068201 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.830222876 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.779154998 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.829468046 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.783474929 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.779733839 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.77968176 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.781878317 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.878053392 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.781523323 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.834307612 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.77802694 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.938780547 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.80335204 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.78389722 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.78670366 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.782962417 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.781419368 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.774971646 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.786045881 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.77817254 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.783897296 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.787820844 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.785776668 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.777506035 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894434374 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887114072 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.779179519 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.798097465 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.792500341 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.779516348 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.815837123 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.782280731 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.779798978 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.841951203 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.899483872 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.837346069 seconds)
  done (took 197.01418042 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.787978325 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.788430029 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.787580821 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.799030818 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.783050362 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.78292759 seconds)
  done (took 12.425812003 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.793377204 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.780246245 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.781616057 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.783882988 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.783415771 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.784786915 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.789112076 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784150044 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.786748205 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.782848116 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.785173227 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.785320188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.784986442 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.784790196 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.784547687 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.783119282 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.784798215 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.781959928 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.782941865 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783742949 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.93829419 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.782053849 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.789836038 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.783426973 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.788090225 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.784416781 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.792132367 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.785095867 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.789130658 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.790433721 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.788988432 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.785915734 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.783085737 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.795646975 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.788510789 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.785989145 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786019543 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.785029434 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.780956709 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.789967464 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.784290373 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.785350275 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.784993686 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.784595156 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.788463743 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.789000086 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.791697811 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.792451845 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.784398255 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.78510675 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.794180717 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.783915894 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.785809275 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.788299667 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.788059725 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.789921558 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.791926044 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.78686345 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.786914123 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.787101027 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.786090781 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.789148854 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.788896029 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.791447364 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.781926888 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.788767348 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.786434994 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.802063535 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.788451159 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.785922121 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.788931033 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.784186017 seconds)
  done (took 131.50082667 seconds)
done (took 535.156379245 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.975230563 seconds)
  done (took 8.676788107 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.86086953 seconds)
  done (took 8.606756767 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.065802585 seconds)
  done (took 9.77228999 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.812968293 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.795274363 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.790766485 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.781124106 seconds)
  done (took 28.900700816 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.881514293 seconds)
  done (took 8.583329302 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.804007124 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.781688591 seconds)
  done (took 15.323629957 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.942004352 seconds)
  done (took 8.65351287 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.842863046 seconds)
  done (took 8.570167324 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.793634575 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.815531895 seconds)
  done (took 15.323235965 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.764482817 seconds)
  done (took 8.466185664 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.406042571 seconds)
  done (took 11.203974747 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.792879108 seconds)
  done (took 8.596024186 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.825457116 seconds)
  done (took 8.524609387 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.806251949 seconds)
  done (took 9.504011346 seconds)
done (took 160.407001089 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.795119883 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.784237101 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.777381815 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.778624525 seconds)
  done (took 28.831031236 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.818654108 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.818045999 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.818651994 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.829867758 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.823363007 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.822852593 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.810181148 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.811408016 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.830012562 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.820707175 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.825401719 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.822155531 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.82046834 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.810327531 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.82312311 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.822694678 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.827697778 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.823169048 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.811684555 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.821625107 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.784355151 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.835782097 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.821792318 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.786300703 seconds)
  done (took 45.344525264 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.980523931 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.858915903 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.934510666 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.837956629 seconds)
  done (took 9.31251627 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.839647275 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.839356186 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.850699409 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.890799989 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.914574796 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.848149556 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.811080519 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.808330837 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.793950834 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.839517365 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.911582485 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.832577377 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.925506338 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.787579655 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.992556924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.783598669 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.786322979 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.840762172 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.891767535 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.898692248 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.786547603 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.839461835 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.844168075 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.834912299 seconds)
  done (took 46.093258736 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.784252049 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.7924153 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.790801536 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.786484623 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.788308203 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.790386929 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.791863495 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.785775755 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.809474812 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.786913731 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.785485001 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.788153369 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.785001291 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.78539793 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.787086883 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.801627815 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.802794444 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.785909158 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.79188807 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.792298974 seconds)
  done (took 37.517959383 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.783607551 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.632905631 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.133760383 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.03884142 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.782339277 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.78025047 seconds)
  done (took 30.854654027 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.800730218 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.792200749 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.786861387 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.84393645 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.924186597 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.792766846 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.78765555 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.799472915 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.829047467 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.848415418 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.803335575 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.812770786 seconds)
  done (took 23.525627846 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.78406368 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.796526727 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.786407587 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.812537884 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.796983092 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.792138003 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.79523339 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.782101298 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.799602803 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.801116028 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.792758173 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.80081442 seconds)
  done (took 43.247661287 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871039981 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.672437396 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444472219 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501011118 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319598301 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989180305 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.30835168 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958480727 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.788325312 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059049217 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.403285832 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034213672 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037236391 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78263537 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853173391 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.265034883 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08469426 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017927943 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808401063 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517103028 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902868116 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396194823 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.518555238 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907519293 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9916008 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.915457388 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.043575357 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.741043416 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925610028 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818148863 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793390385 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78629225 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057790775 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002638716 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914713857 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793713904 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.441837248 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.501255884 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.777188579 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.493776392 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.507168532 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920761603 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79459188 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78474841 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.71892766 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.203870911 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965927204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.791454599 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.487669614 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.785135468 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796907972 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875846717 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.791235283 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.59943168 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738881232 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064081361 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.784518509 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791256654 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361517909 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903651932 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305927051 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.723002666 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.880460451 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.541628823 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263119145 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.942202152 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.787388374 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789500654 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719307103 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.493725642 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909970629 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929848469 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.803125278 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439236432 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086683539 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.45640711 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869017524 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085233465 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455044812 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.721933262 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015205499 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.744394529 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721335566 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.627414269 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721755625 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061775446 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824750544 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.466387051 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829189379 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957423138 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80267558 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807924354 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798278609 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010264208 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.666850295 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78802171 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.336573323 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068195521 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808417627 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.965859264 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722336382 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.790996913 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045390167 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.996042384 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.914060255 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.26908485 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950359175 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790784068 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.875054949 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.592566198 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802101203 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.07237456 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856005815 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895523673 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915856985 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.736361873 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097472328 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813761362 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.961863113 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.407843847 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053950275 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.119284414 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037090354 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871334626 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793944015 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.791179906 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.575927683 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.46951191 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.010294688 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.792148945 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.169200924 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.801017443 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.792886882 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722729969 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.461592586 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.40285493 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.89941359 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013220629 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.631801369 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06388277 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721608708 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937675259 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.900942956 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.008714976 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.446326121 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.870832973 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047487173 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325113397 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.914630178 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805936356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807689966 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891391039 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810207496 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.089906136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.046466485 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.794381722 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.794069805 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.561709859 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858926263 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794103702 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.794469336 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.58699411 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085986128 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.820410875 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.795332554 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.724906701 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.803641327 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872951321 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.796197419 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.799052529 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.319674296 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.536710696 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.801278433 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.500315578 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032018236 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798243982 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.547463276 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977962035 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.873426887 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07693173 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860368054 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.729422563 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.49329483 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.492058443 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792144099 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.726093393 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.792620707 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799202005 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803800144 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.013703789 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081923516 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845344142 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.518711463 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.907110555 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799953429 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.795475932 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793405772 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.289539694 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903921269 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329345973 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803486474 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928708499 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.805241487 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.725418429 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.796373463 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797794412 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.792886463 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.746233336 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846397098 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.566149942 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127012193 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053463109 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.438827077 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810417102 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.534741358 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.922344698 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.814126045 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.354441747 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90817487 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.91128402 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864776983 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.804277976 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.555910911 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.573513322 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374732117 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112306923 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129833997 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249340185 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.066313092 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.106016517 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.968388788 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028952366 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.323006307 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852725126 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974165621 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741357244 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878210954 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.455360618 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15046493 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808200963 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021802232 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189436897 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.42370059 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955542913 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.002916284 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82856989 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.515687653 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814853413 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.316210198 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948869948 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.417216479 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018940998 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964434947 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.367902525 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.900996094 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.795717607 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270976018 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880866847 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.508840843 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.161223862 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.228217051 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.424458525 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165486482 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.802510491 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.243972193 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163429336 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.196312756 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.886752478 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731289391 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.804628806 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.807436863 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.796573419 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.771605073 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.750829457 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.085338707 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809822712 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035009401 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.957198347 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079467378 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.709852693 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.801482713 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798106427 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108918262 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436200588 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027639991 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.02611729 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.357470873 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803667893 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72967419 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732608283 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.49998404 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.806858176 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.773536409 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03416872 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.907407788 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.748267884 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.082367672 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101597166 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052300338 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.812069048 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086984693 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080183206 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.53240532 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825469876 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.89997218 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.387393168 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.50223953 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.02091561 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033169178 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599373584 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025920789 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453389756 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.777789825 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.801622798 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012792821 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.018311667 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.436361129 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052711864 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.525545897 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.805599853 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176885119 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867867405 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.424225597 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012499197 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.895833656 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806661998 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881227004 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806286914 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.810533557 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.810912697 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848546093 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.444337623 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936316892 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.815018088 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892019332 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927982167 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.388613355 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.807412696 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092451254 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166293664 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15562895 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870866852 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.800582367 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809982951 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73570018 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941663583 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.250452707 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076688107 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.932613338 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.941112171 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823752939 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.35096945 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.976777693 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10665507 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075118232 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.696264908 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801971642 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.887182381 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.026351497 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809505148 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.011392203 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040367907 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126959236 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273859292 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.0009344 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.070999636 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07780641 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172693505 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.80173994 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394092453 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.808993915 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.346627461 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.8460373 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.424122785 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086409202 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812154928 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023632039 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.824331487 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.000561434 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.254863481 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.508629295 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165745655 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.79982086 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.864455218 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093499569 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.213697771 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124206129 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884635671 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815884 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.502141787 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941594484 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.781901137 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.077371247 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.805567607 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015313571 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.514159628 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.816686043 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095280982 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121373075 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.801797625 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.815346283 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861711972 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.814269269 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028638743 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08246443 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058550814 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811044235 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.806562331 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.621625707 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087853952 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869129406 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734753293 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.809427234 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901098364 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.052439878 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826979175 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.320025264 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.507012359 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113649863 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.72347554 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824024755 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.136250834 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243601206 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138723889 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.328914427 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042510072 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362408959 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.54597911 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168555789 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.810055479 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.123790997 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170731935 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.810082132 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.217570281 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904243528 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.084599798 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129156496 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.818875739 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.55338493 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.846889667 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029105945 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404502996 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746249265 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.808968478 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.869525086 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.807967446 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935998056 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819819545 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.808371244 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.568714999 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.630454207 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300301206 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.812448403 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.800021275 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.320302717 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.291619783 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936452445 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969376181 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826179324 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.527743805 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.11456798 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070436966 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390634289 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.902337557 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.824018659 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816976176 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741615634 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.013160711 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.039580974 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117891963 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.238912285 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.936181004 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820366954 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.030741374 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023647037 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.403805652 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975469136 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273117614 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942326028 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.744224986 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.533162118 seconds)
  done (took 1642.245330612 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.822172509 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.837215919 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.832349681 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.826525524 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.839655794 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.837978448 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.880544489 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912130563 seconds)
  done (took 56.52906882 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.821238528 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.004430486 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.831649893 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.822839583 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.840332853 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.821250554 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.994604211 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.830630719 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.835687329 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.826729375 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.818068144 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.82900788 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.103594887 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.841181436 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.819064565 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.834151739 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.829330929 seconds)
  done (took 73.454564216 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.820430914 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.162796351 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.834563305 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.839085521 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.725527859 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.823939395 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.820747878 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.822416787 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.820252304 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.992977327 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.153362671 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.827036216 seconds)
  done (took 89.381651838 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.83614659 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.825363948 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.824612664 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.828785232 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.8281817 seconds)
  done (took 10.888978625 seconds)
done (took 2139.017928989 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.206746937 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.006102601 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.046150255 seconds)
  done (took 5.790764306 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.967438206 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.015911226 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.133578384 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.143854304 seconds)
  done (took 10.000956569 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.225560154 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.217837157 seconds)
  done (took 6.17953584 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.14669195 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.844356161 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.234145337 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.821245499 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.819988482 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.823198203 seconds)
  done (took 22.208123386 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.822748676 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.826851095 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.823261919 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.829405377 seconds)
  done (took 9.041437509 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.805543042 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.519481767 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.80030095 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.812816216 seconds)
  done (took 20.674676364 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.575983752 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.946098745 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.568330217 seconds)
  done (took 8.827230743 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.366208993 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.738456 seconds)
  done (took 8.841926908 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.979359611 seconds)
  done (took 3.717166776 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.851873321 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.094681361 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.330435747 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.340008287 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.400009384 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.657422016 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.162212519 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.053219149 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.267636435 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.279742087 seconds)
  done (took 24.175762411 seconds)
done (took 134.628137687 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.171108999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.844364575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.022020017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.185021593 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.05443075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.019339078 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.039916675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.17222317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.858091078 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.846352141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.178072963 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.05314341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.990451672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.838785855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.997142185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.840070276 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.04996675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.189907654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.861058168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.100981399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.046815781 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.828854097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.016565409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.839571942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.087386789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.96823479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.372292325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.841683071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.003450689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.381302047 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974071923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.240066709 seconds)
  done (took 166.650479597 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.822945439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.821040521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.815209483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.819939987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.282002532 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.818990048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.819532293 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.816494401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.234526843 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.227088347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.81801877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.261516428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.818908617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.813366499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.816437446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.817483758 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.379215259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.816339669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.814946919 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.815775226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.814879715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.09895309 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.815273904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.120765578 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.383300804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.819134496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.815844188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.812602776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.813395586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.8166644 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.815598005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.812123875 seconds)
  done (took 207.327453041 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.817800215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.818283278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.815428902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.81638698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.815315539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.810399717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.817092054 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.811806455 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.572649128 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.549057707 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.814758049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.813074848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.815845904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.813325828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.824060964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.81385323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.816971817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.819539734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.821424925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.82736336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.830208894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.688812325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.850706837 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.725578414 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.828033231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.818177981 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.813338524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.825488615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.829445973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.827330635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.830050173 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.811089445 seconds)
  done (took 219.240311646 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.072174825 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.818794306 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.82300889 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.751376146 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.821637965 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.822915526 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.815973808 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.076117593 seconds)
  done (took 18.755028271 seconds)
done (took 613.724489471 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.274642517 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.117626424 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.007286261 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.842066162 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.073422834 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.880373669 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.839368112 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.90926493 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.464155914 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.906999871 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.51176279 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.867509148 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.594573861 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.871845115 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.963467685 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.896040178 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.413955701 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.499583926 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.019217855 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.89903808 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.010176317 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.77798727 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.926493022 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.48075978 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.61692158 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.831376901 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.927155363 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.423859714 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.851269611 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.000211967 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.585464729 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.15212117 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.860408958 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.83874104 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.896360964 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.875856071 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.125532554 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.856549111 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.969434174 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.580530545 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.892635048 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.364278295 seconds)
  done (took 100.426947003 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.813417121 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.813231766 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.805910848 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.81066478 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.810183553 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.808339121 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.81096632 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.809769648 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.809980977 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.810255486 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.811356799 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.812351403 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.80903953 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.81728083 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.813787591 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.813087494 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.809017979 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.815137855 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.816108384 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.808363016 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.811285942 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.811063928 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.825704346 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.81601546 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.813486962 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.812837101 seconds)
  done (took 48.864081257 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.825517305 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.969838192 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.056047235 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.842636145 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.824317468 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.828198181 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.843505597 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.828080729 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.824524532 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.827303869 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.928989387 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.830628338 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.847084228 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.054003031 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.839942508 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.819655322 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.824577192 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.823991172 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.978526129 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.837452999 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.846558143 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.833351635 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.846518001 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.840760881 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.829144154 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.82795211 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.82794839 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.275202889 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.838168452 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.928748918 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.875228374 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.849463596 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.212329853 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.068377926 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.882198696 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.83372853 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.825791106 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.936302773 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.833796136 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.828237027 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.84861964 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.830047639 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.059781123 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.307359514 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.837557915 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.826386532 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.27950877 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.945341068 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.869012104 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.834712531 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.061648346 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.842339039 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.82940907 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.828702117 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.861667087 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.826801379 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.827777194 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.134939085 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.834228555 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.841095802 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.830213528 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.830046704 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.983554319 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.832703395 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.974047443 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.833043672 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.830981851 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.83138515 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.060808318 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.842751 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.313646242 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.837098579 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.82698002 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.930130341 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.976435116 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.305085635 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.836539161 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.97988961 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.227214978 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.846223359 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.832778329 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.263040426 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.852465072 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.83380829 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.829836407 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.829280527 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.825224305 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.87122417 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.841983857 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.249781352 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.319636214 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.145994897 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.849089883 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.838741858 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.828604309 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.130518083 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.832175597 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.829287019 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.060151088 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.321719425 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.840137848 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.832917786 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.304707747 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.841388766 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.844089871 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.835465387 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.067497914 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.842491867 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.873823028 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.827841809 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.833820383 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.832868664 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.844993435 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.836483848 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.829460222 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.297754332 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.955507628 seconds)
  done (took 226.617041482 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.822112452 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.835070413 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.821805786 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.838474564 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.823165585 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.827123616 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.824170077 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.823659037 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.827723397 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.823269026 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.82142148 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.821556123 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.82581872 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.83231895 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.359267777 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.84097143 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.441513306 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.835000478 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.836615991 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.838654471 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.520999328 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.842339323 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.833242274 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.846076976 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.833900378 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.834832677 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.836159753 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.846617559 seconds)
  done (took 166.855637845 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.841612994 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.02463857 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.861538078 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.880700665 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.851791814 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.837486093 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.864055446 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.862391643 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.847060705 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.840021252 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.838438697 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.902280347 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.853414627 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.97858476 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.870955442 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.874290778 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.944486604 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.844907063 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.840113908 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.840482584 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.86869263 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.837496041 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.901783436 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.965355101 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.854936882 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.958055375 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.842871151 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.841579818 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.840411324 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.956326144 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.852535899 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.901697161 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.869091066 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.85980916 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.963906268 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.956638872 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.944526633 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.866562508 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.847304973 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.840930221 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.840437274 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.829073545 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.958766275 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.859506627 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.843697107 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.94593834 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.859391565 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.843822633 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.852053847 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.840108719 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.856174628 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.858122374 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.906853422 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.975311345 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.876674814 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.867836905 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.865043821 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.128893083 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.851241836 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.941619159 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.831863554 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.958219999 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.858987586 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.829920232 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.843631979 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.848182322 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.872290026 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.87596657 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.948381624 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.847424368 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.941599619 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.874372683 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.85223924 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.842459512 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.842429736 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.959556355 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.957417876 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.8754487 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.880263878 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.874843036 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.839742354 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.843126684 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.835883955 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.861656333 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.848384022 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.959900359 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.959747101 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.849631659 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.846448906 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.845841526 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.846043774 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.867896453 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.968743439 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.875567047 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.937109528 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.909788752 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.918356703 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.858122755 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.858758509 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.850927087 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.908342026 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.860658088 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.855795713 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.180086008 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.91348481 seconds)
  done (took 199.742571493 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.313420731 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.898770674 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.902098647 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.176616852 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.185397838 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.777342856 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.889212123 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.895757577 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.917505537 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.087562127 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.962487832 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.913029344 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.881259924 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.868942504 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.895062617 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.916264485 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.905649739 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.207597028 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.00113392 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.048531914 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.873266226 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.208655249 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.16677101 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.301052496 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.925611368 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.22795474 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.555744774 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.045218942 seconds)
  done (took 60.710812373 seconds)
done (took 804.950387601 seconds)
SAVING RESULT...
DONE!
