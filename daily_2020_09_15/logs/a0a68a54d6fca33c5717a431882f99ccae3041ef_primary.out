cset: moving following pidspec: 15413
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.602702061 seconds)
loading group "shootout"... done (took 1.152985171 seconds)
loading group "string"... done (took 0.421146551 seconds)
loading group "linalg"... done (took 7.746239923 seconds)
loading group "parallel"... done (took 0.157748848 seconds)
loading group "find"... done (took 1.284158326 seconds)
loading group "tuple"... done (took 1.887965226 seconds)
loading group "union"... done (took 12.298106398 seconds)
loading group "dates"... done (took 1.310961738 seconds)
loading group "micro"... done (took 0.202133147 seconds)
loading group "simd"... done (took 4.319768698 seconds)
loading group "io"... done (took 1.027297745 seconds)
loading group "random"... done (took 8.704339204 seconds)
loading group "problem"... done (took 1.457489779 seconds)
loading group "array"... done (took 19.251574058 seconds)
loading group "misc"... done (took 1.475061595 seconds)
loading group "scalar"... done (took 39.186616623 seconds)
loading group "sort"... done (took 3.083814846 seconds)
loading group "sparse"... done (took 11.62994818 seconds)
loading group "collection"... done (took 17.119734433 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.492921063 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119916006 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1242068 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114573379 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.194142681 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122621444 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121462204 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082653246 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.806881821 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133174956 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110477185 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.400775597 seconds)
done (took 5.144710447 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.162092925 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083286074 seconds)
    (2/2) benchmarking "String"...
    done (took 0.07711672 seconds)
  done (took 1.257509087 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061817398 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128711008 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062892715 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063669885 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063246919 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063396066 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062392626 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062969524 seconds)
  done (took 1.605450707 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067424199 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064388397 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062911463 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.063998305 seconds)
  done (took 1.361378131 seconds)
done (took 5.563246291 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.232153329 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.097745991 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.277653122 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.377065954 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.446124429 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091411211 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071400637 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067090771 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.128411679 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323255366 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.097682653 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.176704247 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.087302753 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.171137831 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.980118195 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113855637 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082848165 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.116656869 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088725287 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127204581 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.372909799 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074987381 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069311202 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.06836506 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064869262 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.642040847 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667954707 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125935121 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081435653 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.095454035 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113190425 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.634891292 seconds)
  done (took 10.300449978 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.087892646 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.085384143 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06538775 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120905633 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.088439289 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066424339 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071984008 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064424508 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084928854 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12096452 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087835596 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.093609367 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063503383 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065697059 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.0711291 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.193212901 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075309132 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.076113523 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063169735 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076966304 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.102836884 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076149742 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074956911 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075231703 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126785532 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167217204 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092216003 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093615031 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061831595 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.074345381 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110806557 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.119946928 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066181287 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062091529 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.11686019 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092832313 seconds)
  done (took 4.383867089 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.923823442 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090224353 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.096663911 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.599440249 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063056319 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.14671841 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23395585 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070065891 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.370191233 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.137929581 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134690914 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.14218044 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.11248636 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069214563 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.148141579 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110060203 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.449026306 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065173802 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064015125 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063093268 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065507914 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064994161 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060693908 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066402199 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091931411 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.084491182 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.166045936 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.883006566 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.229836043 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065206008 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164539491 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.080130314 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.348936078 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.065652406 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079651014 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.40396187 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.118777937 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061270591 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158880747 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114216488 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062627182 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112351728 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07567693 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066052127 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066122427 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065510239 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06841126 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075281035 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098425286 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066726181 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061832424 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.15972452 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060621945 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063307746 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064272752 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145794454 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062261405 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080888563 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.135015702 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061483469 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066162376 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098939527 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065640149 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.084388898 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.093679344 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.327105201 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.066021734 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063732787 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.243253341 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07263264 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.061978018 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067681699 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063543091 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065047755 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064174604 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069927736 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067435163 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066806186 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105709596 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063464645 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062006796 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067098145 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065224645 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069690433 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094343797 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062891282 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.466428456 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092468436 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06438932 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.0716945 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102212056 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060654969 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061854068 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.068112936 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064589257 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064289372 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063167359 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063684083 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066805516 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093486381 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06673456 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110447131 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.16325367 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065498608 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063470392 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069095873 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06710203 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061204771 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066283032 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06408462 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066335751 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06519704 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061867467 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.104845832 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064783217 seconds)
  done (took 21.344397243 seconds)
done (took 38.052647171 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244145938 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075563957 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076327803 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076403719 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076126327 seconds)
  done (took 1.744914868 seconds)
done (took 2.93101107 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.104796936 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06091729 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096052326 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095242732 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.060792579 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061245567 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096295774 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061223493 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094414638 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095461198 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097485369 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096819582 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061373554 seconds)
  done (took 2.275010293 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065646363 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077191597 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07906604 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059378337 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06865052 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078475799 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059186763 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078785318 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083388499 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078026921 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078209719 seconds)
  done (took 1.986916283 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06504908 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077234624 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079863659 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059796232 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069640778 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.07841752 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.05903077 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077886958 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080434939 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077937272 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078076324 seconds)
  done (took 1.974702226 seconds)
done (took 7.41267362 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.062313156 seconds)
  done (took 1.218385358 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.484607294 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.103074532 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.06366484 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.082996507 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183781103 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.089423399 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.195638356 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068798482 seconds)
  done (took 7.598279247 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092605949 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070375304 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.064980839 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066194161 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065731956 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.065655752 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065794955 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065135415 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064766563 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065482482 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065003817 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065554284 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066412197 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065740694 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064404044 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066252237 seconds)
  done (took 2.34075713 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09454739 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093168377 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068748721 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070035981 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068590037 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068014195 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069984425 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069546824 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066406241 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.067825845 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069387715 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068144485 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.067851719 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059462749 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069830392 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.069990759 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066406758 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069509617 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070105441 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070881729 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069695395 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059332977 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067791669 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.06903011 seconds)
  done (took 2.967893251 seconds)
done (took 15.296335909 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171008727 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071212737 seconds)
  done (took 1.409009473 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.063584093 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.064692745 seconds)
  done (took 1.310649355 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.069390535 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.05728011 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.075970778 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.067341238 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058407639 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.05820238 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.07392866 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058599663 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058220127 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058931173 seconds)
  done (took 1.817578571 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.058605612 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.065016107 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06370013 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.065840397 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064142514 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059255256 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062226823 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059508604 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.065828614 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058662911 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.062921471 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078091702 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062418816 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.079442394 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.061931034 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.062738995 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06457161 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.061684926 seconds)
  done (took 2.341823166 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057371775 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058669264 seconds)
  done (took 1.305271144 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061488223 seconds)
    (2/7) benchmarking "second"...
    done (took 0.057733427 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062206568 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061181908 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059271553 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058457583 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059009758 seconds)
  done (took 1.600619744 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392427618 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117184092 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324645479 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065452939 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07307118 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.242762857 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060330862 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065299723 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065479104 seconds)
  done (took 2.630782765 seconds)
done (took 13.609963699 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075879208 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.166127132 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.082902036 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.401293633 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088302142 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063760249 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109107913 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.163331957 seconds)
done (took 2.357048743 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.232692486 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.266386103 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.871151631 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06755009 seconds)
  done (took 3.400682543 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.308316198 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07618243 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074951453 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06535399 seconds)
  done (took 1.72967534 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060881529 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067475179 seconds)
  done (took 1.326210444 seconds)
done (took 7.893547679 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059691404 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060250434 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.061900043 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060583772 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087758994 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060869847 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06033799 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060382967 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06049194 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060845974 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060304116 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.060165061 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060204523 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060429355 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060941027 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060958515 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060556305 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061061548 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060415099 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060503955 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060251596 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060397631 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061075378 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060368517 seconds)
  done (took 2.707914038 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.074340025 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061356665 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063230119 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063948006 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064282171 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06373895 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063374514 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062356413 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063732172 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062105271 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063534179 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064352763 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062116478 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063968473 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061933737 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064058914 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063661208 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06311205 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062018219 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064553523 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063220532 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062550568 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064019667 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063446456 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063824897 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063955478 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062499024 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063214756 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063854438 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064234195 seconds)
  done (took 3.12312859 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060097356 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055945533 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056646311 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065164366 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058222733 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058111064 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058121089 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056881861 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.05726166 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.05834479 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058422736 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057052749 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057744529 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056971561 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057075491 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058105736 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061295381 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074714622 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05727156 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057052353 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060836856 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057110448 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057074299 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056723393 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.05770906 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057195028 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056747161 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057287865 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056968392 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058286433 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057100142 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061081412 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061949114 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.066170633 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066240786 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061705877 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057244929 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060972728 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058347322 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.05699072 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057303321 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057218967 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057018087 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056740898 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066248122 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057118988 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05824526 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058143858 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057573922 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057145817 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056832886 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059394799 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062089947 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058437379 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057107115 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058513169 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057034922 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057799415 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.05739321 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056847755 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057044579 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060376436 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058529689 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057533918 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075104921 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058780823 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066367475 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059819746 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.058113486 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060515341 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057701174 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073640131 seconds)
  done (took 5.483789341 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077453825 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081593015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062612599 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062381253 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057539364 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057214562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065845427 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057843294 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062153693 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076343653 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05771724 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061721536 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061698338 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061666367 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057516127 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061593921 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065101401 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058673147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057812485 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061904917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057926189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064977534 seconds)
  done (took 2.615425871 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.129972464 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063213018 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098360391 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07155355 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065508073 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072097513 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06306326 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062931279 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063269399 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063632339 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063295613 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062745684 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065368872 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063506421 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063731992 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063103035 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063470491 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063120079 seconds)
  done (took 2.479137077 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.071763224 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063750101 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084826839 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062921518 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063291148 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062099153 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066001126 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066521285 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062401569 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06257304 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.066987836 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062283068 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062724247 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062908569 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062452157 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062813286 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062376731 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062969895 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066384818 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066061396 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06603055 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066721276 seconds)
  done (took 2.655144671 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069919912 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060838388 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073178965 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063065038 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057594359 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057811506 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062684545 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062246515 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062689129 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061258212 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061730645 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057451716 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063419938 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062015448 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063782238 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062303392 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061296367 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06184945 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061465796 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057834105 seconds)
  done (took 2.4622157 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080802106 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058847072 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060558182 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079555848 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060141481 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059755417 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077803721 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060061953 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060224319 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080208161 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060130901 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059941406 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07834775 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078372041 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059923876 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078335841 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078482774 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078037721 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060201995 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060040674 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081100503 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060198731 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078096859 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060453022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060211733 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060171671 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05980714 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078070451 seconds)
  done (took 3.1284245 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060197094 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059011348 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060169429 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060668419 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06077067 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060661691 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060737896 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060909277 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060657511 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061034368 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060884107 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060139049 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06026231 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060273658 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06095983 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060571392 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060328894 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060512653 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061149205 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060516271 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061005004 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060752741 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060308105 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060494893 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060955353 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060370349 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060693608 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06082095 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060992548 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060522533 seconds)
  done (took 3.042966298 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.068519703 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067467105 seconds)
  done (took 1.361083928 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.057883838 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072149971 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057111501 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068095058 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066136947 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061167923 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.065976757 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065566664 seconds)
  done (took 1.734011863 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062409392 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084815349 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059126073 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059530264 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062422275 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115502744 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.071062618 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071874523 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071856746 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061212358 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059207044 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070819978 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058356391 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072037231 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060837352 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067061103 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065537228 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070133222 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070869855 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057811806 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070216918 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059957302 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057784271 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060297757 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059186389 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065027522 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073214372 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070198577 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066422413 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056503593 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07650152 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.057873997 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059217178 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066933509 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062017485 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058011524 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092572378 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058294171 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063294606 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057598898 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069101559 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077592322 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07132274 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074678935 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059841996 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060138271 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058004478 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059710797 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061133918 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066792527 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057974855 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065206048 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057483535 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059188244 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067729658 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057994211 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063422241 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066504357 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070340122 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067644235 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069993713 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072294221 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.0664421 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06599305 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059452657 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076426129 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059527067 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070238293 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071343795 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059096956 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0704544 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057433006 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056810034 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057511488 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0893666 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060002273 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059490857 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058061802 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057619565 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059200086 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066838028 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062900168 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065050276 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061070504 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072677898 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06601825 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057744447 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06480336 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074520832 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061445827 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058136178 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073168163 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060965915 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057288355 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074436966 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066964297 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059067838 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.05870467 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061200025 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070288299 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058905473 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05686163 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06509775 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058727714 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.06038293 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062121254 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064876229 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057563883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067136045 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062173975 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059051818 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056382018 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061164758 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058008515 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055938133 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065867639 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057249645 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070904307 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063343255 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070745721 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071138799 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067165105 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072095229 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056923639 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056350217 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07380408 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066194875 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.058551841 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07397524 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.056808074 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.199096891 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058343522 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060084454 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068367815 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058623972 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061471398 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059416561 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064664361 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060406641 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060816452 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062968174 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06662795 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069923943 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059424824 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066608037 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058756326 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073147175 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067834905 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062948024 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062503078 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058996007 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070063707 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064136255 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067600183 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058294883 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.0585909 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058301642 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06911041 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067112186 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059644457 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06570006 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062577455 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059319186 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058715679 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059512256 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061302358 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061590532 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058977878 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067294562 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066480702 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074030896 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066173764 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066768554 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.05743582 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058415368 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060234789 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058266709 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062148181 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0671121 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072504514 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069074507 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077355628 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058222506 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067085291 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059475496 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073611884 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070344406 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059298802 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063018896 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057551574 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059527728 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066891126 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069145333 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071595462 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071945291 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062779676 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062536712 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058200574 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072116624 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058958783 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066542895 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067233341 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062729824 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.05811472 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059623316 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066794561 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062474144 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058248623 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072798904 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064556288 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057856442 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071457831 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058284427 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068275415 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057675076 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061827844 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063101239 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059905035 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067193917 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072540468 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057564332 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058518549 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072809601 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.06008299 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059876993 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065916423 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072313503 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062491572 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065238742 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067678928 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06712332 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062380225 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06667948 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058834445 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066674274 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060855135 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069241748 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057731491 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074914698 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056443564 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071376076 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058290442 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068155229 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058416477 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066204864 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058412578 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073412117 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059239353 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057936738 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068308474 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056314272 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066051931 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.056914014 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062116581 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063314465 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065906492 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.058671444 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065900871 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.058440931 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065049234 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061097435 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.064892646 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065489774 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061511377 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.056755294 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.064711578 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.203577905 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067146604 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061171641 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060927029 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.05969181 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068191567 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060858259 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060054739 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066709415 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063065494 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063923017 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060143871 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.059918194 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060190263 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066475333 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067473418 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075996405 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066601242 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065329497 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067164713 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058035912 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072970074 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.05874613 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065450765 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057384291 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065356206 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066908935 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.0582455 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075931059 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059812349 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065374485 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070654454 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066508264 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06196302 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075127867 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06150194 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066991428 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065477488 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063147064 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063631571 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06028988 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066150555 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067496533 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068524518 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058893567 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065462438 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066457615 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060137602 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066223363 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059646912 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065907512 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059623457 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057441581 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062284095 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069051279 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064408975 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062880011 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058687657 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056865375 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058020192 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.064644997 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062624702 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066242037 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072298709 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057226991 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059254655 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058149473 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063800291 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07544506 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067442168 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065585746 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062343655 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.05743816 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059401953 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060010125 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058661438 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061559938 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057570485 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057864757 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068280638 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059749465 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062575513 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058682412 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059488017 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066940357 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062817975 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058546017 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064520385 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057692496 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062598084 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057356691 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059832741 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062903394 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057864275 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061658405 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.068014793 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073438029 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06407401 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06669966 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059164113 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065616861 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072326553 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065385347 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058826342 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06657522 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057371855 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075115969 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066867821 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06609111 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067013846 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058749095 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073123861 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061911425 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066910995 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072150126 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058847221 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.06420838 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057115954 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072024991 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.061910805 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056888404 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064634607 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064459308 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06252573 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.067881997 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.057469801 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064506237 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061632665 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060098011 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.058610514 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.058737647 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065041834 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072187271 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058318126 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06075691 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.2042634 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067215645 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063929971 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070959404 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06688249 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060175059 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06036639 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061730576 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059692027 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069860494 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059291782 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062736675 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062707416 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.05806188 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064126586 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073668912 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067245268 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067708591 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057783822 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057336924 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075047213 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061718867 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.06131212 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065922256 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067171562 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070465137 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067249634 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074545427 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058708116 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063738535 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069821691 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059251908 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057815216 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061918859 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060577353 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067072735 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067652716 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065550766 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060719027 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064951983 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070982726 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059460551 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063417498 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06308396 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059239102 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068269804 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065744244 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066132637 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060050248 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057954575 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061234427 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065878723 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065135232 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066248696 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059031337 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.064824248 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.07158095 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065432314 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061318654 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057423917 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061459593 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066913495 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062951787 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057535728 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062869295 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061396056 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064692345 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066796474 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062346034 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057843509 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073930087 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066009497 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067131345 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060708149 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060037291 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059082137 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05799999 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068739794 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057849209 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059804358 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062636972 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060385044 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074873832 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065905537 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073247498 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058775706 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062732598 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057951333 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067561437 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062629088 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058595676 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068134194 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057451002 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072370279 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069811926 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065817202 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058067264 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062854822 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066013367 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072262664 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067684933 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067158147 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061978075 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067745019 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060319568 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068367869 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057922237 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057409671 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067753631 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066251436 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069858567 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057579812 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067253124 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059749776 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06562209 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065577889 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0596309 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059404648 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059328512 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066869355 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061988272 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06611299 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062065461 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073263884 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.057893046 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067292446 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065442973 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067155785 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069985758 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069006489 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064908094 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.057493222 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063845663 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.064529846 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.058227093 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062271683 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.198908697 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079598885 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061365305 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061416709 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07268618 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065746987 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059257191 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065430023 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063949513 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068383594 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.05925785 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068232268 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062546894 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059867315 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062563582 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062622904 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057479477 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058178513 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058349223 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068321681 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062875646 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058481487 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076307231 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060084496 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066351973 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069390588 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06471413 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.05985764 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058025296 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059608632 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070988597 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072793198 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06150628 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06631405 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059960089 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067559838 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057125915 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066278005 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066391609 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083122553 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058054672 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059076506 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072283184 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072645225 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062653438 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066856725 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067914489 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06027719 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078864489 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066399051 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059137188 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068505308 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060429645 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057858633 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.05719262 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.06006046 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069023372 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057937163 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.06109336 seconds)
  done (took 40.001576529 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093351348 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058673113 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058883792 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058090668 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068802808 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059196753 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058306702 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059266343 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058953679 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060771993 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058207186 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058113829 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068773776 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073703173 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068184137 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062386049 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057845483 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058665318 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05767691 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058957709 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068046839 seconds)
  done (took 2.667961321 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.062836118 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07161266 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069046556 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074156501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066082308 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062489609 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068959827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062487033 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069567658 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067408092 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069570937 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062449313 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067409863 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067111668 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0674773 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062190014 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06921641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06550605 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062081307 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06915288 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062036999 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069299186 seconds)
  done (took 2.790175232 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058219399 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05868624 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066663763 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057614153 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057482562 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061356998 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057598113 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061686627 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061765553 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062159557 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065758237 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058281247 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057549216 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063050999 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057211474 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058422914 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.09696863 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058564816 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058424113 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057383725 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062629315 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065860434 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057571175 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058001535 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061522594 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.060624718 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057725109 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06005007 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058898552 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061661746 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058890841 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057204909 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066447122 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065453106 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061677552 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062106975 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059274045 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058364669 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057612615 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057573204 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065415243 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.058948587 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058359409 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059353263 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066251112 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057750834 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057761195 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066275526 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057960686 seconds)
  done (took 4.318713891 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.067012217 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107051924 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063691633 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088974408 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070319013 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.0644422 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063439045 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089419953 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059132098 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059690626 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071462535 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071787169 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060660406 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064648914 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.063129926 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060427389 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061556113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059724643 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063265523 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060334557 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063169334 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064271413 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.069769952 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071331278 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06159387 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059531143 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060247309 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062026962 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070523562 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.063815348 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062258156 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063256999 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.070886436 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063806757 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060203548 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060530672 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.071529892 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060923041 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060657865 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059232516 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060303162 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062016687 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064824363 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.071884518 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061190126 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06529472 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061283231 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059139428 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.070631169 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060297052 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064572106 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072675682 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062019339 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061313535 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062499925 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071180159 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061449231 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059668397 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061505046 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.070474612 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059196344 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061724557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.0720805 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06003311 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064337705 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.071381149 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065107363 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061894204 seconds)
  done (took 5.914059785 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065886062 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087677854 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068970727 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069375139 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068575829 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068854653 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06856047 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068830246 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068134486 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069067301 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068760552 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104761795 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065180126 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072823323 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067948837 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068389129 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068162382 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068261188 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068488447 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067898722 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068264846 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06879071 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068224931 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068630951 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070851482 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06438975 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067859 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068152314 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068609884 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068236436 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.070675192 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068115028 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068187213 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069286137 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.070674375 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067959916 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058529763 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067927642 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068770476 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068128554 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064389165 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068311187 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067983348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064394678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068152419 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068369898 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068884736 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070988109 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075277445 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069121794 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.06828621 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068765324 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06820201 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068217688 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068819936 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.075510523 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068884283 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068567717 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068442698 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068835041 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068927591 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075436665 seconds)
  done (took 5.663958312 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070143024 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063945001 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076897999 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060472802 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058046104 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067158067 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058131173 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057973911 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065117859 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.064629724 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066713613 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067175635 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069499119 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066349923 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067193162 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068957428 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066934391 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06698589 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064673989 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06717243 seconds)
  done (took 2.666902546 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.068754431 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074188493 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063740627 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067236875 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063472286 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066998793 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062577857 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064142598 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064599639 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063701746 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068095821 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068015819 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064022662 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066993879 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067996707 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066543197 seconds)
  done (took 2.399537883 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063174236 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065473527 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065387006 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059677587 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06281439 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058362241 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.058638217 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057559138 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.05811575 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.071803262 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058889733 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070715163 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059120568 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057897497 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058581153 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063881384 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058004486 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059141165 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059113126 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063174832 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065562997 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060335043 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062532262 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058695807 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063770621 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065655448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060344097 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062908028 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058989203 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059532796 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064266233 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065237646 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058650274 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059271553 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058209331 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058806463 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059081143 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059328323 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064434228 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059338511 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057495074 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063744992 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059223114 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059645735 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058476782 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059419875 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058208276 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064364633 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059285686 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06413446 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.05907775 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060861205 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059310634 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065750179 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061539111 seconds)
  done (took 4.705270934 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071023717 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062398779 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059409184 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057671869 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06270124 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06354744 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062904792 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062810584 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063628989 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057677973 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063397057 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062535049 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063479709 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063102786 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063311472 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062743711 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057454219 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063263284 seconds)
  done (took 2.476882943 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067896585 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062794374 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067476893 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062617459 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062777452 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062806279 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057855467 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057992158 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058209974 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062748048 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062765532 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062119087 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058094232 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061943834 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06243096 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062302243 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062282651 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057992507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062115948 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057950225 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061827588 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057722584 seconds)
  done (took 2.697797852 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083414035 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079997901 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119488221 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076351884 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.0843196 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068724799 seconds)
  done (took 1.857595421 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08655424 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096982208 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062695181 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06303965 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071703299 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065734399 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066104288 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066212661 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071443295 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06989923 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066259966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071552109 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071346918 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067580585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071153229 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073599209 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066008573 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066135796 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062605294 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07369208 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065797308 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071877829 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065846993 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065489106 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06621954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067497683 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074197759 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070318447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067985223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072187964 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074010263 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065679959 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071624764 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070402608 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062551744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071486079 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066510925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074166138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075356643 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067650628 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06252836 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071416477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071413062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067668336 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074457399 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066511412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067543307 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066059584 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066223905 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076310852 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071600232 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067760403 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071519318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074128954 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074357606 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075972151 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069885564 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067909717 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071657178 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070110479 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067817772 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071792945 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067566369 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069899917 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074060335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067647746 seconds)
  done (took 5.97259698 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091783153 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061967117 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064670291 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068750404 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06788787 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065851677 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065980851 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06583713 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066301193 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063497209 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098443855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066214219 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06752563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067991519 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066435536 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066321592 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065941877 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067602284 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06325612 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075732957 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065643663 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067759104 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067584852 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067974861 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069759853 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0735913 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065841195 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06569401 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065754636 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065684263 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067399708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066623265 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06791732 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063091057 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067584172 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065719154 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065623403 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06771692 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06633074 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071335722 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06789507 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074197387 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065872684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065723799 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069872509 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065624998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066335013 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063169833 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065922232 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062887471 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070178174 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069958975 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07007799 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067855985 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066061241 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065926839 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066586882 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066296952 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066228027 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074008025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06788901 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065844074 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076283447 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066029667 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06609303 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0676023 seconds)
  done (took 5.866003762 seconds)
done (took 121.995590154 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203300801 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179595823 seconds)
  done (took 1.718586561 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069432921 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093330016 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072208061 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131453412 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067008192 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10251914 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099426262 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070241897 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067174514 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068619556 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068439336 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070784455 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133920577 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066640621 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066474036 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070446509 seconds)
  done (took 2.67147757 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100037264 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174487871 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109832191 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066200592 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102473501 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073174262 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06645899 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077126313 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069781608 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069519651 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07293036 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071514326 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069429241 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071521911 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070075455 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07255972 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069595752 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072581286 seconds)
  done (took 2.837971609 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088399716 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082182421 seconds)
  done (took 1.53347897 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148608438 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100196125 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.13777272 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.306490893 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131296355 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.123442907 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.124169769 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12321595 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10865199 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.116935568 seconds)
  done (took 2.775963795 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096741961 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164150369 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298449542 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114869764 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072713354 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094516245 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117579301 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078698433 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076658738 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.075901439 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07832531 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073438679 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093699585 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072859077 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073012179 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073030914 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096922822 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072578828 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071571543 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072371815 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097797306 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067117404 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072649689 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07177608 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073857352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074267563 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068300787 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066700868 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07198392 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071525952 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074372913 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091463473 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07441531 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.094431467 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071021779 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.09659087 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07177071 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070466086 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071304441 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070283303 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.073167505 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073761198 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076170646 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073236744 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068438736 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071055249 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068299253 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067156254 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075187769 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067728067 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075403098 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.0748609 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.09538678 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067927464 seconds)
  done (took 5.88872186 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100954071 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.099417954 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066773959 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108247725 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101537044 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067207197 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099952583 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095766678 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103654114 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066962816 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065863637 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065921285 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073875071 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077859294 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10953594 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100254303 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067830543 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066326706 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102900106 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102765535 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066160442 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096018721 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095134453 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10501295 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066072776 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066728922 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065752393 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065617285 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070797057 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.072304784 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066323529 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073330052 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080669998 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070313829 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06482704 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064941176 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065635905 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072759827 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073610444 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073222741 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072229885 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065556455 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065818021 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065553943 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066084831 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064892095 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071535276 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072880385 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.071803377 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06527592 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065837723 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064982294 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065421936 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072475736 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07148465 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.0734667 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072854408 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064981736 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065212828 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067485961 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073770822 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074355449 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073402189 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06676449 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074039485 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065203206 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074597825 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076979929 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065859698 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065517461 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065089341 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065620235 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065625795 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071550903 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071411163 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066415634 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065187579 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065492864 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074032155 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072046866 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064948453 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070866404 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064982607 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065902661 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066199244 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066034872 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.071131431 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07300814 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066122643 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065256952 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065507665 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065263996 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064757279 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071490057 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072755524 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.072629925 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.071879509 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065522388 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071851797 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071581443 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066256164 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.071157548 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06512729 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064860834 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065002331 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070740288 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.069748188 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07281591 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064487743 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064484272 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.070463492 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0730021 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065287241 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.070242368 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206011122 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.071516723 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066265808 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078531346 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067140847 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075393566 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066159589 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074578194 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066647989 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072364982 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06608189 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065044078 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066095108 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072824676 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066311839 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066082519 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066543013 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065488885 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072527645 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075900364 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067096714 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072648074 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.072250169 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066506547 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072803001 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066097884 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073617545 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066449344 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065964749 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065499085 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075088089 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066192782 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065859803 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06537857 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074947014 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066067958 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07436712 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07233833 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06558645 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077906734 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074986861 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072026061 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075467761 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066625257 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065823513 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065605657 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06604306 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071284614 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073001518 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066292395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066132457 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07214251 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074291162 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065517399 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07189834 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071830093 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072002251 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066079717 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065723481 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075392271 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075020575 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072744396 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071767554 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072623631 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066288614 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071924976 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072611474 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065720426 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077394458 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066514024 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075969873 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072977632 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071574839 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072941762 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074196105 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.074864173 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07527483 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076576862 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0656583 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065790682 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.072392099 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066116461 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065541492 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071918556 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066456057 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066147021 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.077784264 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064336171 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072330627 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064338111 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073630078 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06541472 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06630283 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076911128 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066342606 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066545468 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07246156 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065965562 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072236659 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075537209 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071612752 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065593836 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065790189 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072440517 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.072931796 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065211844 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06505652 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064843226 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.06991512 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.069746526 seconds)
  done (took 17.523941384 seconds)
done (took 36.323916825 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.192937195 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153236787 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187000426 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.108671145 seconds)
  done (took 2.101671681 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.086922392 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.091994126 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.07497643 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06247701 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078012463 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062593963 seconds)
  done (took 1.861598368 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.249114235 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17684569 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165312015 seconds)
  done (took 1.9888341 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208220352 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188539915 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464612254 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284611977 seconds)
  done (took 2.642068182 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.12368813 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075355389 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.060393531 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070748947 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.100996149 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.129379597 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.083386234 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104051685 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071813156 seconds)
  done (took 2.27887666 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.124029412 seconds)
done (took 12.42636425 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095230398 seconds)
    (2/309) benchmarking ("sort", Float32, false)...
    done (took 0.131748699 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06608805 seconds)
    (4/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.223404422 seconds)
    (5/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.215518478 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112353293 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.178069625 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073265655 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09441999 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117045481 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20814602 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086253334 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089131455 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091368184 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109441223 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073364138 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073931369 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192511357 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06391889 seconds)
    (20/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166354712 seconds)
    (21/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072612739 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.212849197 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.175455019 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.279025787 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064101584 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071896164 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071066098 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06792852 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 0.130558608 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070558097 seconds)
    (31/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075311645 seconds)
    (32/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071748455 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073306387 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071160705 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.141058846 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061753514 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.223860394 seconds)
    (38/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.062452147 seconds)
    (39/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.179146682 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073531079 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070136051 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073746171 seconds)
    (43/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129373319 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062247418 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079341022 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.166648899 seconds)
    (47/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073433055 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14273627 seconds)
    (49/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063741025 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073908098 seconds)
    (51/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066711415 seconds)
    (52/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061952979 seconds)
    (53/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.239681664 seconds)
    (54/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063763679 seconds)
    (55/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.186957353 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.13752593 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 0.143342972 seconds)
    (58/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.137824704 seconds)
    (59/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.082439659 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.188597561 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070969066 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063387345 seconds)
    (63/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.170543436 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.087887846 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 0.063749209 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.207513563 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06381939 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085116639 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118616562 seconds)
    (70/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.07136147 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073818372 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062554618 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071283044 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150062517 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069507948 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071804252 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084356446 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062906677 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.211583311 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061471728 seconds)
    (81/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.069154244 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072226196 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198623714 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.213920077 seconds)
    (85/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.082753806 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152142839 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068761282 seconds)
    (88/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164085971 seconds)
    (89/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.217530327 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069815854 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076660686 seconds)
    (92/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.166524826 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126546933 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063246316 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087380933 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078066495 seconds)
    (97/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075614564 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.204659435 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176808753 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086080698 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062443099 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065090097 seconds)
    (103/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065627451 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186537995 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.21849143 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17644752 seconds)
    (107/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064213063 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126270232 seconds)
    (109/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071734523 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070579942 seconds)
    (111/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063436011 seconds)
    (112/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067618801 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.153498584 seconds)
    (114/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.212830213 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063166011 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086548744 seconds)
    (117/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.195809441 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063936369 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071518174 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.179738187 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069829208 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193204068 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063207252 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112854902 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.145148744 seconds)
    (126/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142411482 seconds)
    (127/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.212690806 seconds)
    (128/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.144138743 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063588655 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090933644 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062972689 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.082540076 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126880835 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07139492 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063212574 seconds)
    (136/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.07087648 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072046446 seconds)
    (138/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076408537 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.074729951 seconds)
    (140/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062597511 seconds)
    (141/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065201239 seconds)
    (142/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063923605 seconds)
    (143/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140321239 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062987045 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062029087 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.082427754 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072504503 seconds)
    (148/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06361618 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145423959 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112777246 seconds)
    (151/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072744584 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063878237 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065250874 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062192315 seconds)
    (155/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07018304 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117514522 seconds)
    (157/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074030601 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07107979 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086760242 seconds)
    (160/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.064591102 seconds)
    (161/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.137156302 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074111304 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112153192 seconds)
    (164/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.081344351 seconds)
    (165/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067758568 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062652888 seconds)
    (167/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062864451 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070471101 seconds)
    (169/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063447044 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.093226979 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.083971852 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153494374 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176298214 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062632898 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06393371 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.133729239 seconds)
    (177/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091650624 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.083521633 seconds)
    (179/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243692357 seconds)
    (180/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061349106 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120504552 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06208366 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148882936 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077624976 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.191591637 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144538051 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06286726 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.073238157 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141137382 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062669755 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077227023 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063299918 seconds)
    (193/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.136558331 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061969558 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086885277 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.31181832 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069755608 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07269207 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06472233 seconds)
    (200/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065023735 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064421796 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 0.169848998 seconds)
    (203/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.0649844 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062848485 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063088339 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063631497 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143097557 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064664433 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.0646503 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062936795 seconds)
    (211/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06222482 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083355585 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063482 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065736063 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070567156 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088073499 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156695647 seconds)
    (218/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.145570398 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07031226 seconds)
    (220/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062326733 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070061887 seconds)
    (222/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090095488 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063217936 seconds)
    (224/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.150110537 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070167926 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088461844 seconds)
    (227/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.070365396 seconds)
    (228/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064743497 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062819197 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074835267 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075242878 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065760835 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064830824 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141546144 seconds)
    (235/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070583828 seconds)
    (236/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.062676919 seconds)
    (237/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.075756651 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064345508 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07566639 seconds)
    (240/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06420499 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063169107 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071063785 seconds)
    (243/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.143891642 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070055308 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.074278728 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070955445 seconds)
    (247/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062906593 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062979209 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071194706 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14899085 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063513398 seconds)
    (252/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06259569 seconds)
    (253/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063906575 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127890015 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155772819 seconds)
    (256/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062464805 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064224733 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06416896 seconds)
    (259/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062880419 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066007075 seconds)
    (261/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064952953 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06251428 seconds)
    (263/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063667563 seconds)
    (264/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061865586 seconds)
    (265/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063469111 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061746232 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166608829 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070846677 seconds)
    (269/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.194359175 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117836571 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06163787 seconds)
    (272/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.061922066 seconds)
    (273/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.062010413 seconds)
    (274/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065094255 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064300217 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069719514 seconds)
    (277/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.073145489 seconds)
    (278/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.063714297 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063884367 seconds)
    (280/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063114505 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117318149 seconds)
    (282/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063675793 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062367329 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062921276 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143699683 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083427919 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06285166 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063344396 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.0625273 seconds)
    (290/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063714116 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086351035 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163664648 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.062314737 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073939327 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074563323 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062597546 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064073192 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.084219781 seconds)
    (299/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.061733447 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065712981 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071116506 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.063586691 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062402655 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064366661 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163552892 seconds)
    (306/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062058359 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062802494 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062672833 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064999569 seconds)
  done (took 31.994622797 seconds)
done (took 33.412121037 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079044082 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085307419 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070355393 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.080940996 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077013133 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092751798 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070821888 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075500041 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07725139 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075909212 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.075698555 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069683387 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072480932 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072105641 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070288852 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084777113 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077758939 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07105171 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07126943 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062244101 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071659941 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063370249 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062867997 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070137437 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074845028 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070224534 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072360763 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072333274 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063603932 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063488042 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067928742 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071743214 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065327449 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075000201 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071263816 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071621526 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072818942 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075804372 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062242697 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063219795 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073736021 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063261018 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070904826 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.06911315 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068007719 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070085738 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070991916 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073819798 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084971793 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067590819 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073625523 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073666689 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073730021 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068819302 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068009283 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070864598 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069716629 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085092918 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071414301 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067872369 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073129383 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071958262 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070080179 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071894302 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071166547 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074076518 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074798759 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06989424 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073870873 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070635101 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062713775 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070952574 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067942588 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063480788 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073886696 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076483602 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061552988 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06728736 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07063857 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071364783 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06235958 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067253052 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06276081 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067712274 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067097801 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069514134 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067919156 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070372581 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061946537 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071072378 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070178411 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071578782 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061834768 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.0753032 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062488014 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069726341 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063374026 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0630385 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062111692 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068821036 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062758933 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06724997 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071292746 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062037338 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067936651 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075757926 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06297217 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070663584 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062392865 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062166613 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073412038 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073798228 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063105046 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067528213 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062123542 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068727649 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062548312 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062746542 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063074741 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062904059 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06751218 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063757853 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067870644 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068763154 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075365478 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063105091 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067860121 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067228716 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063022189 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069212596 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063233523 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063400578 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061767753 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076495743 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067204667 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062710196 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06757318 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066907649 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070072649 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060600923 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070470577 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067753576 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.066198253 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068178948 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060819293 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073692266 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066526299 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.207109952 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063008215 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06380225 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062527696 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063792998 seconds)
done (took 12.221114304 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062666106 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.088919968 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071126755 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.078887729 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075401441 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064636609 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067106345 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079728561 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066609725 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082315711 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085528809 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083589714 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089056885 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06287572 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063865022 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064436565 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062325441 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070399595 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077776629 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085462957 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.092273843 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063298101 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072038546 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078955215 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.073802028 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079657134 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064786786 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064619309 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065893167 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079998298 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08739007 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06323993 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06479451 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.076915404 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077007821 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069762393 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064372424 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067939995 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06430534 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063262453 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065446699 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077418504 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069935119 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.067579963 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064649221 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064467353 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064040427 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.066664684 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076798242 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.066901933 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071393802 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.07502041 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06570991 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063483995 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062270918 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067585085 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063298822 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064111689 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063984387 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063279309 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06390362 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065984005 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064703541 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064245068 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067560666 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.065948531 seconds)
  done (took 6.131703274 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079092272 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090904133 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080027378 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079966334 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063253583 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064315845 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064546522 seconds)
  done (took 2.043280006 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062757315 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075883031 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079420991 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079049861 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072583475 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081052316 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064768831 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093770239 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063011918 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075635871 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107259537 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079661648 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066789719 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075025758 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064215505 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070900583 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064813862 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072353507 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071338422 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079662844 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068126176 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091468073 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077792749 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064967946 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.083165384 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068097721 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062888576 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064419967 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064657655 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064902262 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064951909 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.101191056 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.067992879 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07781871 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064990619 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063623108 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069425145 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06716043 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066508725 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071243976 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.068578586 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064673406 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062795805 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064637966 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066816912 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067717686 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062750571 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064880262 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064680074 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074473716 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062919846 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068206234 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066997093 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069292165 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070151421 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068600552 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072102027 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065872294 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075357612 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071004536 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064577869 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071722503 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.071573884 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.100234754 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.071573756 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068551925 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067413756 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068558121 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064251596 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065865817 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065390518 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.071692295 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063283936 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066080212 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067030173 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065757265 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067439947 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080178799 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.07996233 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076172788 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066379238 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065003049 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067975424 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079952335 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068064707 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06497572 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067181306 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063209099 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069858428 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065928678 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070014128 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065173299 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071740171 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068123189 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067441658 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07188415 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064369106 seconds)
  done (took 8.360701718 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064615516 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064923868 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066067809 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065175821 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06544005 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065505478 seconds)
  done (took 1.945061751 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.084233448 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064507027 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079078563 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065324745 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099187691 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071152097 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071585896 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072490504 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076985802 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076265111 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070704306 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073325978 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.070477677 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066150735 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070054785 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065911159 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.07076508 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067240064 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075999646 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066175273 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.076898681 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066401401 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065985191 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07497799 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066945938 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064829569 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064768863 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07592442 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077450257 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07237622 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066063062 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066905978 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071791767 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071772375 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070694521 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07198958 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064427276 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069201182 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066667195 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066679297 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072687339 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066306088 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066589097 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.06916552 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072227305 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071813537 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069553896 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068312857 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.070157644 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.069413085 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069251999 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064811791 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067246232 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069210464 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072074457 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071716976 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069601052 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070543684 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066014554 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072148623 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064346039 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067291489 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072088539 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067095385 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067536001 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069423997 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072111099 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066245602 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066253998 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064384723 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069657148 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064179847 seconds)
  done (took 6.570032165 seconds)
done (took 26.559330492 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.94786767 seconds)
  done (took 2.44803102 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.545056628 seconds)
  done (took 2.08160063 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.665211096 seconds)
  done (took 8.199849634 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.273132911 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.300689495 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.698271408 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.125226138 seconds)
  done (took 2.969212523 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710641702 seconds)
  done (took 2.256712155 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.225707982 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.217164748 seconds)
  done (took 2.001578424 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.33796022 seconds)
  done (took 1.876415934 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.095724738 seconds)
  done (took 2.628739403 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.20879422 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155904337 seconds)
  done (took 1.911672019 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.463823495 seconds)
  done (took 2.003466279 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.146981878 seconds)
  done (took 5.692644504 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222756177 seconds)
  done (took 1.803157313 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.226968002 seconds)
  done (took 1.77202975 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.696860388 seconds)
  done (took 3.234909962 seconds)
done (took 42.427670192 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078430708 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081023188 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081865717 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078345341 seconds)
  done (took 1.838866808 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.068980054 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066305601 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.0711791 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.0708219 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068856796 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070502714 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069744445 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067094806 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069117697 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067318025 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06626634 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067201798 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07016243 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067203305 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069663037 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.070896055 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066995061 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067293797 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.06996943 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067198139 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069955009 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067134185 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065796047 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067697808 seconds)
  done (took 3.186371364 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074036874 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.06804551 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072688399 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069420698 seconds)
  done (took 1.834787094 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07101842 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.079079492 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.080701864 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087709917 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074027995 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073446527 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.079612838 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081356626 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063377256 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.082844005 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065905967 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064518477 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064288618 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083596156 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080403528 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060749372 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062108816 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073301424 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073065658 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075077737 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065840715 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063033169 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07385255 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072776068 seconds)
  done (took 3.303446876 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0747833 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061266653 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076028567 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088712651 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091299755 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063431273 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076855026 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091334506 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123775805 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063699505 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069598785 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063540303 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104792387 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063488674 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077969008 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104697139 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107797755 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067188907 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095313894 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.0631702 seconds)
  done (took 3.188073373 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072631599 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066439842 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067962777 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063378211 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075206205 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070851053 seconds)
  done (took 1.977231477 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064199471 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065802057 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065262862 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064446099 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069598682 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065455603 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063987411 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065428491 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065364184 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064925658 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064233596 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063519514 seconds)
  done (took 2.336422384 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.154456456 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067313187 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067949348 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066124196 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068996344 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064091698 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077857851 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065997955 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082223381 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064700515 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064220061 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066616235 seconds)
  done (took 2.464556158 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089526517 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088948963 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122983518 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106037502 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087250761 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.087265624 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.139578997 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128202185 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105948837 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067016118 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080224838 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099475581 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096530995 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132689706 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10459836 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069851337 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095540388 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078280399 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099458473 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106783609 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104137196 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107263747 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086133248 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096150568 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09924117 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106405543 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069093576 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06812433 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129662753 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094383653 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086550954 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089163594 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102609478 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.066912782 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083184977 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095700734 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080696659 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097638594 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085308727 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092038089 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074424149 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.118919535 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09625665 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102838276 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114882515 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089895488 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100650798 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096113212 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08016125 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111470363 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092361919 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088367341 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073986892 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.147790457 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087600811 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.101021816 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10451257 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080848646 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084340356 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090168448 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.11485361 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.090752949 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101120582 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.242642206 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.083494359 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089381445 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130236249 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082679371 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.10041616 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119936151 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087018015 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073970517 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.08784115 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067332644 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093955261 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097774787 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089789561 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104918571 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077003295 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115377691 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10381962 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070600292 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.107456813 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088846687 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146646091 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093991835 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098048795 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088911867 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.143353836 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083099911 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077528789 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09112392 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125156914 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08728596 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092862318 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120957299 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086958907 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080654384 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07281705 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082431757 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091057097 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105405371 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095093869 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086183088 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080539685 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086885947 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072680605 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079402084 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09370488 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084038016 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113151278 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100207657 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109008671 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076416339 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105025117 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090391455 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126400468 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114441214 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081868548 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105945206 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13058524 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.105329043 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082715487 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097492787 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109359053 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100433258 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085460623 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126749233 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106115377 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079806918 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085264897 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.239206532 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.10262242 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147555331 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088081381 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103723545 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132013756 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.103622364 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090105713 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081556472 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08876553 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105415456 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13352886 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090772844 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068534496 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090936431 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124377769 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074699867 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092808812 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086824409 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082080778 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078991187 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066402398 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097802788 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.128262473 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110646172 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096375834 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.09173609 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067227968 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096942227 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094305377 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139649785 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113059748 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095434639 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089322873 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097674631 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077676587 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.126223774 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.125393788 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089406433 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089532115 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119763832 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.086549793 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.098596524 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103735491 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102857741 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.095782457 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133698105 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119266983 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.113638763 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102531738 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120955921 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079297911 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105548411 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072651741 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100089318 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.073906278 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09915121 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076036242 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106989423 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076427189 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097324475 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.066630356 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07261572 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.254734196 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085797 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083187863 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.127788271 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.120031126 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080333919 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.091420314 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097783822 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094594265 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104045379 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084407405 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088135884 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075585785 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078569302 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088763954 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092662816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101341741 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076025599 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072792743 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134761766 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101498158 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088308296 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088479309 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.115313624 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08225233 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081117658 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102743931 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131477334 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.114858984 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076645902 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.086561209 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067742249 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.08241366 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.07413775 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106279061 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072124853 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109285492 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066342296 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.125385628 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084976071 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098665928 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090934344 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120781843 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083849921 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120536833 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084925396 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105389028 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092321798 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088108717 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103537659 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089431893 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095815761 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101224237 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083757859 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08809306 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121231457 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105725843 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114023652 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10477286 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132560502 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105743293 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072938673 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100842685 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089245671 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146550848 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097030492 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081921735 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084205459 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099163598 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079597191 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.28680082 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082989154 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.078040799 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108248219 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.085620147 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08569101 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072138259 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10018977 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084390107 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107363678 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.094389473 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.0910141 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103449198 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103698511 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083754867 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08485813 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120876748 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.125823229 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099235894 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084159773 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085608748 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096884247 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091400685 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.106730973 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078778999 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073417002 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066363217 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.06975022 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.114202327 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100772814 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090983707 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090358136 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100073219 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069583293 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085103485 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088365506 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079956637 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085422931 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109932994 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098470405 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.123350656 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098309883 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090879156 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134162302 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125544912 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087726661 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090917264 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094583767 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074456064 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14474563 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112061771 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075123038 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080226865 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075491861 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083695718 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069088514 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103427047 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104450676 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074887339 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097332227 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092174089 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.115434892 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090589356 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075098716 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078715599 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072794284 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.072581716 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.09537638 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.074865568 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07490776 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118198078 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09789427 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.252666358 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079341013 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074370701 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128350058 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067920709 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129585028 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081624381 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107016058 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.078268753 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077217645 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087753922 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100550849 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105551136 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110092517 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069033249 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10039025 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146304508 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075361331 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073773635 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072893824 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108751102 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084683984 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141063123 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087901929 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086838739 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074848019 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120607345 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100960902 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081108684 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120490758 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078166659 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.069716349 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080098075 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105755217 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070356238 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073047203 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110032886 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.620591245 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088849895 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075289104 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082386548 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118026805 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080634863 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106451511 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.114732711 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104037591 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.177827116 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072082593 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088945183 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102477044 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095944939 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089210524 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077880524 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086333745 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086845125 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079009287 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104614167 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078747419 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085085828 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078452846 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.101870599 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.127122671 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08512903 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099180325 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084294042 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084453564 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095377116 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102877479 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096607215 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.081039255 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.237847313 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105443593 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082595652 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077878211 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097504161 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075503001 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07662722 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111028115 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.082664924 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091831952 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101748055 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.08308065 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107022021 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114429485 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111313564 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096184234 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076736577 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083728869 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085965853 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072065284 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077539272 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073599096 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068092802 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105216643 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083622732 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079634538 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.09777721 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104031861 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097743274 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106219757 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08808072 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094284433 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099650505 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.121894059 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14734105 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096415883 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.114177378 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125686487 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.073974116 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.071960059 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076947518 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12836461 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.078965037 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0900697 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.231139257 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075361237 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0791774 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089007184 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105229861 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080760839 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079192724 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096943688 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108999649 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082626663 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079930273 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09208308 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103538927 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127596053 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086608107 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073845418 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10635057 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100298545 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121349651 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.07136153 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080422196 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126772951 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085709542 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098547927 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077893978 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115261881 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125727001 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0722032 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084446536 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066662017 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.237640908 seconds)
  done (took 49.120831947 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.147965729 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.145058316 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078925905 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.093688485 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.187131571 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.203229161 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.114437263 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.089832088 seconds)
  done (took 2.72457241 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064490478 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078032889 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09783518 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079377134 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062644332 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064903856 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.191058774 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080336424 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065316037 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104066173 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073652799 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066820771 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.34814194 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064157282 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065161444 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072742872 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065952039 seconds)
  done (took 3.309722356 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.344537315 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613809478 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.310238368 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072575585 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.910753643 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084316193 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.137113826 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132704522 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077270796 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546415204 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.360436668 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130830427 seconds)
  done (took 18.39569364 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071358859 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072380751 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.075806036 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.075851653 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072006862 seconds)
  done (took 2.038905527 seconds)
done (took 97.30980862 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077325198 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.16448779 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06663196 seconds)
  done (took 1.933247107 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.076997345 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076265684 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077376118 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.075487624 seconds)
  done (took 1.983312744 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069701833 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071695747 seconds)
  done (took 1.811068905 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228751003 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159956043 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089211134 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.077357371 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076779277 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075625067 seconds)
  done (took 1.907250064 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067377787 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067812301 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070691786 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069719196 seconds)
  done (took 1.941683326 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064202755 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062420533 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066661741 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069353894 seconds)
  done (took 1.931597815 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.07817396 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07911966 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074219551 seconds)
  done (took 1.905418504 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105981702 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09401566 seconds)
  done (took 1.872023213 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075037026 seconds)
  done (took 1.751787725 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.082607485 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.089782699 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138858979 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.104403896 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140728264 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.12584033 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075081175 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076121148 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071882229 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070185323 seconds)
  done (took 2.64848686 seconds)
done (took 21.913451638 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074546893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.360196207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357660491 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085434567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667857748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35473419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967093009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088192624 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096299882 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06662189 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082899909 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646607989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959001844 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323326188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944469864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324312313 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647749866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066628324 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066173196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066601755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951972591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066104705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066403726 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066710193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646804615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370893913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067641328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320241615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06610916 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068592483 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35385677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067665097 seconds)
  done (took 16.012136806 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065728837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116213842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071289036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082450112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068716466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06793683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069578743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067232769 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106539482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066468969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083678185 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066589127 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070560018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0687558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086712973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06773039 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068648698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068066057 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070160195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068401164 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085421336 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067400367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068100455 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068321671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067805769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080396227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068617048 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067207763 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067551476 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070032596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070530421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069232296 seconds)
  done (took 4.04288985 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117838809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123314278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07180005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106928337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116598729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06863428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148716025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089155054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112133559 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067566097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08434712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067558515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102063919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06908697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088457627 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067746445 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068987624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068386491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067070817 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068443291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085838073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067738607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067941881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067969603 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071769366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082069527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068927444 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068278883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068005773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06996524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071504056 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068761869 seconds)
  done (took 4.328663749 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.064855605 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067782431 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077281298 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078713998 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06457572 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.06638411 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067817281 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065663859 seconds)
  done (took 2.250406201 seconds)
done (took 28.325202932 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074491409 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066111093 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069677145 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084968071 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072071955 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068108884 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062755882 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07192911 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.06905079 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069143561 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071044153 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06464687 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067724354 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06315591 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070425496 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064522629 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070967381 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068720186 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068980566 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070597276 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066340471 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069940088 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073393521 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069270854 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069448882 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.06935647 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073553641 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070575662 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065523407 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067398363 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066728902 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07591033 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071064513 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071382717 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065126901 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065062412 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069218167 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067257767 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071159886 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073368799 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06699515 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073138898 seconds)
  done (took 4.584230936 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079664797 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08598806 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081085693 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080062019 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099435826 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08062077 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084574363 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077196351 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075939425 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08438967 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072604947 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077340663 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077369978 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070805465 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076295445 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073256569 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077940063 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072674952 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077648897 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076890562 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085488919 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070653152 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076747911 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078354896 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07277119 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078554134 seconds)
  done (took 3.748649163 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068364474 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082742224 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087278923 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153078927 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108638348 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079790618 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079691456 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093672558 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097302991 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066358748 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069734184 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092427787 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092875539 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073277873 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105067066 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08278472 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.077150295 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067603066 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072833996 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099125724 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088378698 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08448801 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097411463 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084474812 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065359451 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074707156 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072054712 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080378994 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07317668 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077368786 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070027133 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069312186 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066852378 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077343314 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069553759 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063904205 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086711375 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077450885 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079364389 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10707406 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075177566 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066828215 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093642733 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127056757 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065218591 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068303714 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069091155 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077278492 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066772565 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094130897 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083111365 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065131462 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.083098317 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067249465 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066676847 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080930791 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066852331 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06764076 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077273586 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071118182 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085074075 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070610214 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085108659 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.0654892 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076268754 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066684923 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067013728 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064346757 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099245629 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072615634 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114690319 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066439515 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063924077 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07736654 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076421213 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071889398 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065131064 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083327743 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077384354 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069036798 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077479584 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068540878 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068788608 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099769127 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064291144 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063988931 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063595203 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068001724 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069083611 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066102343 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07878511 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064709451 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068589221 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080196772 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06552223 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066044126 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068452386 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067105714 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065206743 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075789103 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069047762 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066854144 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077193331 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066476626 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068720373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079140914 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074748789 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065038819 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066881892 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067990782 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067101229 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069620181 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069003036 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067250206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071443791 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072872822 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071459259 seconds)
  done (took 10.675722029 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.1532858 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.147268772 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066938247 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143985385 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074245162 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070264145 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144354886 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085004049 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06664906 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067690201 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066404807 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.093379065 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088934316 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.101963381 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071209281 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067109266 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089609003 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097378016 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146419884 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142147144 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088823752 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073174697 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068846677 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067923394 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067475996 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074848218 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084696698 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074181937 seconds)
  done (took 4.328061647 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071177048 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.088664704 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070827641 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077247462 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08370052 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066242857 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068165747 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066880577 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080072567 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.073029743 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065985428 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070314576 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07016462 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068813022 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066511779 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072268697 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072919067 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065558666 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069591377 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070842965 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075814013 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090809887 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071020418 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066017291 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068584953 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065824777 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073050594 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.0760414 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066099154 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079117255 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063529096 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069916795 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079603642 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066691809 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065609159 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066699461 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066330444 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066502167 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066368799 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064410149 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064023038 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07129036 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064701585 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073003211 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079635997 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073585973 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067601402 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068224528 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068453515 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062835701 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069150555 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069151127 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.0686795 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073818907 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069533402 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067953909 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069462651 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090707687 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072033466 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065436075 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065166607 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064732881 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067764666 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074357107 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082311176 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067477959 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064534317 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066123046 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070990235 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079650576 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065590947 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07081613 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06312933 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066530355 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068472335 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068441445 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067729855 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064436872 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065653408 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066056487 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066445681 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065626733 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065510381 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068469956 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063853494 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064606168 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06641844 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.06680333 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072719854 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065214309 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068663016 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067075254 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064987341 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068719651 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071327878 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068849251 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080489116 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075043826 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066533125 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064108035 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079761886 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067698945 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065513947 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072983773 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069765768 seconds)
  done (took 9.080761856 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.084811052 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06627395 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084370292 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090623148 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076153204 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071475143 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07953508 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067274664 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082157715 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065934423 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075091562 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065031554 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079807682 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076051842 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067673758 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075785218 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.06879262 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085291965 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080319406 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064917903 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074749132 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077499324 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078249561 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082756664 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082246746 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082900319 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077493569 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068584792 seconds)
  done (took 3.881196019 seconds)
done (took 37.988685696 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.769513962 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.947007466 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.768121191 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.961413999 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.85666454 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.998364433 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.812157759 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.765216754 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.942089374 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.804827078 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.076395984 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.185267818 seconds)
done (took 66.653866168 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.855406678 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.927945823 seconds)
    (2/2) benchmarking "String"...
    done (took 1.987452823 seconds)
  done (took 5.619745074 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.920877209 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.413702909 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.035257738 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.767993969 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.772740237 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.195680764 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.545621485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.206853649 seconds)
  done (took 30.641459762 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.879747242 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.991681678 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.438781811 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.477112617 seconds)
  done (took 15.537866679 seconds)
done (took 63.376416941 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.806547881 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.767520211 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.767021982 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.798615517 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.777790592 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.770475217 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.771886519 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.771710077 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.77612046 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.889707472 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.76833547 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.785064003 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.769349364 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.76865766 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.440036399 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.829988942 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.779945596 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.780630695 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.777646398 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.783654958 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.768783848 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.775781407 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.235821138 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.952233583 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.376234066 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.153270881 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.257217825 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.170458625 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.782190304 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.768801779 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.84970075 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.102703506 seconds)
  done (took 204.278899113 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.768386812 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.587295653 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.69265808 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.776917035 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.052629619 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.946868516 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.864357507 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.170357285 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.774803399 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.784475826 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.893770096 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.773528501 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.928095956 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.71164776 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.804595091 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.863423827 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.923867085 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.951272585 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.812162961 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.916119154 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.777460741 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.74576751 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.679771255 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.888925282 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.809115429 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.860530773 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.796317045 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.788036767 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.958738231 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.884715395 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.780461301 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.790787612 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.93150251 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.638863275 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.780876099 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.796702054 seconds)
  done (took 168.612144952 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.970713012 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.776596704 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.770538123 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.826903754 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.892833899 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.772863373 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.409985646 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.780221763 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.475884017 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.773509855 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.769486779 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.769745342 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.770513946 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.783967284 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.848351677 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.773197513 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.78456656 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.773618205 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.795860951 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.770913638 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.770368285 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.770595689 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.770666729 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.773418244 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.771584461 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.770874527 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.178742692 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.01243402 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.773531191 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.773212408 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.858870096 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.782282143 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.261227149 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.776924701 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.862872576 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.82624414 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.88455864 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.772272697 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.989144029 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.844564954 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.772670869 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.773018473 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.836976164 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.78385165 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.773425078 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.773175324 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.777648496 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.837703907 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.017028044 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.774451988 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.896623975 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.257645917 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.772960506 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.77294096 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.772801115 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.348130663 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.773050028 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.773598307 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.773185083 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.779193181 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.778689209 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.774562726 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.773940167 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.1595829 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.84405455 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.885110208 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.239893697 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.773395877 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.912726509 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.959754079 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.773359165 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.773371637 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.774096157 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.775240125 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.774137658 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.775519881 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.893664437 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.783274152 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.879188604 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.854450937 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.774577728 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.894795942 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.780493396 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.782019274 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.601544707 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.842558427 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.809752258 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.59541843 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.773711372 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.145457814 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.535719718 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.774782776 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.774543415 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.774478127 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.788416357 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.773858733 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.774595588 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.777451172 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.854920356 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.774798716 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.894072281 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.514362359 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.456870112 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.989652519 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.775462894 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.782319498 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.869505285 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.775504211 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.952766432 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.776324129 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.841441051 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.781726973 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.777344291 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.919375951 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.777216531 seconds)
  done (took 401.959435588 seconds)
done (took 778.589627108 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.368928018 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.343665368 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.456170307 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.36171239 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.33073039 seconds)
  done (took 13.573972425 seconds)
done (took 15.28656163 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.789710663 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.781734465 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.839230965 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.865479498 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.797529415 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.793853816 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.856591075 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.799297688 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.826760982 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.829116224 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.860171396 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.862955003 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.80120768 seconds)
  done (took 25.416817985 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.78604072 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.918172144 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.99677664 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.818651373 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.786312439 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.999041527 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.844953637 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.910891021 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.920773836 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.005343871 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.006757299 seconds)
  done (took 22.708391466 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.785760235 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.927745811 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.013862046 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.821742093 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.787335258 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.997506389 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.850456498 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.913276759 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.923014154 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.005794019 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.005081086 seconds)
  done (took 22.753928505 seconds)
done (took 72.593776479 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.781390939 seconds)
  done (took 3.495807064 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.797735655 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.924170038 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.781889041 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.781093888 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.780991821 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.780862967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.780423166 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.780879924 seconds)
  done (took 16.124071969 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.782042149 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.781779061 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.783351219 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.782328899 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.781737157 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.783022926 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.782705332 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.781087792 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.781320807 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.781653071 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.78123431 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.782189811 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.782738411 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.782725224 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.782543031 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.781994247 seconds)
  done (took 30.230845277 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.785845374 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.782694622 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.784890613 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.783084973 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.783513316 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.782745572 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.784647264 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.783579262 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.782975592 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.783333146 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.782630283 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.7840963 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.784265671 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.78359296 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.783764985 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.784254949 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.782896103 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.785008163 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.789667236 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.783796594 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.784795501 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.784414413 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.783935307 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.785335933 seconds)
  done (took 44.537723613 seconds)
done (took 96.113004096 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.522242825 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.519766752 seconds)
  done (took 9.759457979 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.784613383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.784189809 seconds)
  done (took 5.290101285 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.785188225 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.785554962 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.783874373 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.783613852 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.784231448 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.784815462 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.784394857 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.783849982 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.784868394 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.784649253 seconds)
  done (took 19.562668182 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.785609871 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.784940608 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.785162625 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.784599057 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.785256926 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.785326322 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.784886795 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.78753022 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.785231375 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.785756561 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.786179573 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.785908589 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.785337674 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.786508186 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.785989874 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.785581918 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.786340544 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.78697048 seconds)
  done (took 33.862037688 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.785176361 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.785898169 seconds)
  done (took 5.289852666 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.787091965 seconds)
    (2/7) benchmarking "second"...
    done (took 1.786315144 seconds)
    (3/7) benchmarking "month"...
    done (took 1.789149011 seconds)
    (4/7) benchmarking "year"...
    done (took 1.786814166 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.786686221 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.786750935 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.786905973 seconds)
  done (took 14.228957721 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.787208971 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936796766 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.988335477 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.60736437 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.787930989 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.788542019 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.038506346 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.789783038 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.791172247 seconds)
  done (took 20.235965519 seconds)
done (took 109.947314014 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.580322532 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.787078069 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.021802638 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.854702279 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.813075161 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.131128159 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.793018784 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.434222468 seconds)
done (took 42.138557211 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.8503318 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.783693364 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.829446656 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.830219676 seconds)
  done (took 22.164358509 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.786364023 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.129056809 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.81320062 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.665738133 seconds)
  done (took 22.12865641 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.167247698 seconds)
    (2/2) benchmarking "read"...
    done (took 2.140079042 seconds)
  done (took 6.032204618 seconds)
done (took 58.898045924 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788391894 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.788348829 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.788269911 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.787873267 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.787933849 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.788750248 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.787811141 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.787801573 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.788862072 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.790177704 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.787832406 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.788999892 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787603804 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788592936 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789073752 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788217722 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.788216829 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.788943138 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788842252 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788474362 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.788187327 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789142968 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.787799907 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.789488848 seconds)
  done (took 44.646896458 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.789682696 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.791672521 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.789247133 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788868773 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.789328128 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.789732408 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.78987589 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.789892056 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.789581292 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.789384812 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788895265 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.790182739 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.790155973 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.790733042 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789770948 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.790946235 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.792136653 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791027524 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793382334 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.791113373 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.790988228 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791075767 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.791711531 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790336842 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.791115039 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790591739 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.791256006 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.791464556 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79070955 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.790790954 seconds)
  done (took 55.439523298 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.790918891 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.791357425 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.791947607 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.793018604 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.792392949 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.791536255 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.790834043 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.792080532 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.792453995 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.791739769 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.79245784 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.792033146 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.791794338 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.792300717 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.791563547 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.792623664 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.791949606 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.792998484 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.79293602 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.794115463 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.795448277 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.791904291 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.793024831 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.792815365 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.793645605 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.792993839 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.792372269 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.792313845 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.792955177 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.793351459 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.793660132 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.792660431 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.793891275 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.794254329 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.793133997 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.793829888 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.793235324 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.794626066 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.793490519 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.793787942 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.793906259 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.794024454 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.793655222 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.793532806 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.794272129 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.793941344 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.793273859 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.795070841 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.79425221 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.794840782 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.793773097 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.795607536 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.796444178 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.794112892 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.796184341 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.793754215 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.794808737 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.79534235 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.794789107 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.79423713 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.794284453 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.793911594 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.79483111 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.795405115 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.7949154 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.794888946 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.795030004 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.794858931 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.795510842 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.796025839 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.795383483 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.795031823 seconds)
  done (took 130.868529914 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.795874383 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.795790219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.794137395 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.79455854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795505 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.795984341 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.793975835 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795195807 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794382177 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.796673937 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795391614 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.795477184 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79512125 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796742367 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796226638 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.795305098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.79567041 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79538079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.796581229 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796061557 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79590117 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.796485158 seconds)
  done (took 41.231187557 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795702706 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.797591663 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.796449171 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796717351 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796508105 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796909801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.798712705 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796386466 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797685467 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795833751 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796947323 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798118274 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799001851 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797323855 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796235118 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797521522 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797478399 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.797369261 seconds)
  done (took 34.079088853 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.797189199 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.797789867 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.797451555 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.796863451 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.798228981 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.797404009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79870282 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.79802509 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.797261828 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.797786035 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.798541842 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797267815 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.79821551 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797283499 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797676203 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.797701409 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.797851298 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797722117 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798696432 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79679382 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.798135463 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798576399 seconds)
  done (took 41.281615462 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79908034 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.79812096 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.798393418 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.799876766 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.798298439 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797736814 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.797743657 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.79710976 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.798013808 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.798420039 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799063147 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.798556019 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.798940509 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798960233 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.79951543 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797859025 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.799929892 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.800846851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797693473 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.798220633 seconds)
  done (took 37.705014659 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799127265 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799667818 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798757918 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799046594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799891642 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.801826181 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800447706 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799763558 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800146646 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801704857 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.801851124 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.800537991 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800892716 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.800212241 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800299785 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800497588 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801213641 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800078374 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79929393 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799673958 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801604995 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80125834 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800661978 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.799783399 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799773958 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799165301 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799631437 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801762389 seconds)
  done (took 52.141811705 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799998593 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799908514 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.800891518 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.802814224 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.801326104 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.800020786 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.800642209 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.801699628 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.800945092 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801373603 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.801118112 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.800465603 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800333235 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.800320389 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802225338 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.801721551 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80163934 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.803005983 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802620356 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800987469 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.803192558 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802043644 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.802464897 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801662425 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801930289 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.802617666 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803534316 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.802581804 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800798093 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802666633 seconds)
  done (took 55.781549505 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.825312123 seconds)
    (2/2) benchmarking "in"...
    done (took 1.821514476 seconds)
  done (took 5.381157353 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.80322317 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802450725 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.803664435 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.803631614 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.802817516 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.803162899 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.802799791 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803043112 seconds)
  done (took 16.161729298 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.803558666 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.804711425 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.8033103 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.802921954 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.80262591 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812657145 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.803537986 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.80408043 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.805104412 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.803681746 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.807925495 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.806957699 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.810935471 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.808122652 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.804092162 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.804431114 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805806093 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806493146 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.805925226 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.804625625 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807131592 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805123298 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.804161337 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.805599458 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.804546558 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.806123518 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.814242254 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.806768312 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805191001 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.805852525 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.812593669 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.805903187 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.804691799 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807156718 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.806900248 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.805163975 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.81212525 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.805344299 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.806154891 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.805290743 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.80914762 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807967699 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.808401102 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.813285828 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.806004313 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.804936483 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.805332543 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.805438574 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.805217419 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.810099895 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.81284689 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805707416 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.806554689 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.805910442 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.80830769 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.806140911 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.806729408 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.809130689 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811819904 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.814255774 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.8099661 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.824810767 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.814552463 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.806321631 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.806461525 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816258738 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.829632587 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.808229394 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.807684219 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.806670732 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816904933 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.808194785 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.80685284 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.808438805 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819485734 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.81385503 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.805561283 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.807371276 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.807776549 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.807587145 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808495632 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.808691093 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807550486 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.808680172 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817322515 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.830699108 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.807706629 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.808206299 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.809574357 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.809419903 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.814918719 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.811909938 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.808358836 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.81021774 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.808120293 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.810512123 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.808838892 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.808645998 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.808009666 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.820115 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.809398695 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.810057114 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811295344 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.816584442 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.81014555 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.809746394 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810291917 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.808261468 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.81595777 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.80964996 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.808822631 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.809316662 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.809669344 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.813047182 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.809623594 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812269331 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.816660452 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.818496136 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.811744535 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.813037814 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.81364303 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.812839604 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818894498 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.83352379 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.81098273 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.813996358 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.815471903 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.821150103 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.814419744 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.810742977 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.81345107 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.809700612 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.810752955 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.812100543 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.810322269 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.810661711 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.811224365 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.810388953 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.81085977 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.810613153 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.813890353 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.811256525 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.813335996 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.811752063 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.815584125 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.811062933 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.814286245 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.81989875 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.813075124 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.812534102 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.811518662 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.814774149 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.813523462 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.812778456 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.813344929 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.812056787 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.812469074 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.813223633 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.8134648 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.812455248 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.812088387 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.812559427 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.816418888 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.811782159 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.812681484 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.8127767 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812789997 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.812425178 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.813363899 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.812738794 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.814740382 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813552913 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.816902363 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.813046914 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.813169714 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.811384873 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.813234719 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.812481753 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.817199647 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.823562374 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.816422496 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.822263662 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.813373753 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.821673926 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.814043197 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.814696289 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.814227713 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.815296123 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.812730349 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.815176019 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.815455442 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.817056953 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8341785 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.82323675 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.815730986 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.815509348 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.819011869 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.818859541 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.819579932 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.814262513 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814877047 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.816003919 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.815485081 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.814658759 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.815097347 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.818320311 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.818615794 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.814347615 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.819609878 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.815559193 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.816030331 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.815318428 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.815635648 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.816073143 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.816210612 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.814848415 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.815251893 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.815388883 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.823577423 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81833684 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.8165542 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.815633587 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81991601 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.818787234 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.815814715 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816259852 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.819495066 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.81616839 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.816279318 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823330684 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.816771942 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.815589388 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.815609364 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.816874681 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.818206093 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.81646939 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.819553617 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.82469585 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.820025061 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.818007852 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.8228277 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.816646132 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.818067674 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.817836881 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817869118 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.817252526 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.817739544 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.816975762 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.817612398 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.825792562 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.818317583 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.817942692 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.817121461 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.819262397 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.818534167 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.820226087 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.819210551 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820403762 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.825437685 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.824193977 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.81844261 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.821853637 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.819263867 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.820155277 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821522606 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.818881466 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831353304 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.82796999 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.818046791 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.817802504 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.818911641 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.821142866 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.82211313 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.819231821 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827775646 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.81908639 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.819869445 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.822818921 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.818977737 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.81820848 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82602483 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820014714 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.820866345 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820078463 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.820005236 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.819578426 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.8195634 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82113717 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.820266628 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.822419219 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.823635294 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.819602333 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.819791244 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.820355618 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.828814185 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.821105719 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.819504278 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828072146 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821793868 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.81935907 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.820632258 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.821070054 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819585874 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.820783028 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.819930837 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.823809014 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.821037115 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.825013756 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.829556454 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.824354478 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.831042579 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.822205545 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831553016 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.822231754 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.821486102 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.820792857 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.823067784 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.827399826 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.820461152 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.819268101 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.828974119 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.823343364 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.823347486 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.824835575 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.821261186 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.820744801 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.822177126 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.822585356 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.82608342 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.824449113 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.821583691 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.822807373 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.82271639 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.822243162 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.825219352 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.823639415 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.822533086 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.822731715 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.825542161 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.822018417 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.822564971 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.821599085 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.822018633 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.822866154 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.822674616 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830597305 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.823553796 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.822364513 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825852893 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.822889831 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.831013158 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.823047263 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.822760206 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.823597684 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.824405626 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.825773815 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.823169839 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.822657644 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.822935617 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.822945775 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.823796433 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.834887496 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.83171997 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.827948319 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.82519553 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.82413559 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.82407851 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834148907 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.844914604 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82443932 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.824799922 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.830264453 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.831538718 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.827240395 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829254854 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828264405 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.832042118 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.824584981 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.824407945 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.827000217 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.836919421 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82406294 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.824824205 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.824741472 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.829252593 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.826527576 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.82513083 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.827466189 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827650112 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.825001774 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.837104042 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.825813055 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.826732218 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825187435 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.8253364 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.826109737 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.825882275 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.825889602 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.826611907 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.82519686 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.826247703 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.827463184 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.829140342 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.824925796 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828832491 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.833584694 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826404635 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.82513874 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.827610179 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.825446282 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.828164086 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82574796 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.824460847 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.828317082 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.826792226 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.826688646 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830059577 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.834470699 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827869699 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.827637546 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.828708495 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.830439625 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.826191833 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.82707994 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.827652253 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.836026739 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830617937 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.837158802 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.835517527 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.827579505 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.827844232 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834278153 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.835070312 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.827579233 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.826833843 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.827213555 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.830159254 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.831675159 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.828143883 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.828659713 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.827602598 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.831091915 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.828921194 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.828343691 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.82818236 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.828187644 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.830081536 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.830579011 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.832464636 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.828606392 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.829415202 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.827568662 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.82957332 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.831022852 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.829799974 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828894358 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.829304702 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.830889444 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.830094712 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.83285769 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.829568673 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.829774639 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.831421686 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.828637184 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.829972384 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.829234182 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.829112758 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.830253849 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.832204356 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.837153853 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.830135326 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.830414625 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.830052783 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.834125354 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.829781673 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.829520484 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82997143 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.831336255 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.840257192 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.831516964 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.830126433 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.829705958 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.831135628 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.836062032 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.832218648 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.833611979 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833456976 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.831288257 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.830152838 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833945612 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.838604014 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.834871726 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.833914927 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.838890866 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.834997362 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.832123822 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.831310992 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.831284452 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.830731019 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.831546026 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.834688059 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832139015 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.83461421 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.832614583 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.833079702 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.832577908 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.833572522 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.832426248 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.831629861 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.834158813 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840064761 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.841611891 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.832853611 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.833247814 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.832166777 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.834599269 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.842730392 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.832370799 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.832155635 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.832896209 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.832072049 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.833504845 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.839267296 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.839986495 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.836983661 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.833649714 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.837424584 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.851178576 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.836439174 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842036117 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864939281 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.83408332 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.833546551 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83267398 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.834097136 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.832796648 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.837193668 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.834238987 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.840686589 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.835293198 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.833776005 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.842920148 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.835363944 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.834760083 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.834378848 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.834701104 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.839609067 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.83448022 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.841260417 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.834097234 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.834765934 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.8350396 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.83540592 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.833818271 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.834628213 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.83382268 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.836325965 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.833711283 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.835072467 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.843849932 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.834655884 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.835547368 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.847941778 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.84505332 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.835076631 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.835366302 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.835009765 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.839725722 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.839830703 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.835739777 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838696791 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.843180375 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.83867492 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.843167863 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.836155658 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.835312621 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836513095 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.836226144 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836283257 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.847294182 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.846438553 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.836140512 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.835498324 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.842842927 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.838118311 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.844335871 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.843058411 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836435175 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.8380247 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836421132 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.836720328 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.836281623 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.837344613 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.839357526 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.844831232 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.836270378 seconds)
  done (took 1087.925758362 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836901656 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836367366 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837078323 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.836979497 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837260716 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836888396 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835817505 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.836473247 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.83625609 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.835693257 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.836443316 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836118274 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836521498 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.837196202 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836427872 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.836790263 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837182409 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.837378181 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836934724 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837616353 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.83927685 seconds)
  done (took 40.341792504 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.836967394 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.837785992 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.838636787 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.837969722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838355593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.837917117 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.838156713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838219943 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838388298 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838956545 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.838313352 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83934303 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.83869643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.83923526 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840639853 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838620165 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.837990854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839724181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.839040573 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.840181493 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839315484 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.840569435 seconds)
  done (took 42.22271059 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.839124663 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.83849621 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.839858083 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.839664929 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.839860832 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.840820294 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.839949195 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.84239372 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.839634365 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.840061604 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.847025606 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.847205266 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.839809959 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.842557278 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.839810954 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.840667775 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.988133023 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.839135489 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.839857645 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.839455383 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.839341671 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.846977094 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.840956413 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.840540377 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.839490317 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.839498567 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.840295429 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.840230371 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.839700966 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.84025203 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.843582495 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.839639502 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.841096267 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.844138864 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.840141636 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.841040333 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.844857461 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.840790882 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.840561066 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.840641936 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.849810145 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.862946057 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.841369707 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.84109384 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.849047915 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.841990256 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.842184157 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843731212 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.848308654 seconds)
  done (took 92.181946436 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.841283187 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.841198083 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.844330493 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842330394 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.842647505 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.841814326 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.842332768 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843046562 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.841913913 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.842897552 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.842996514 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.842188576 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.841595079 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.841727104 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.841590495 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84206667 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.84257753 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.842907085 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.842488022 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.842853277 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.842227993 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.843392028 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.842210582 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.842878539 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.842635069 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.842911564 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.842339237 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.842943231 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.842807095 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.843152612 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.842354171 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843016213 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.843449859 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.843131191 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.842445196 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.84304272 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.843537474 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.843177961 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.843285548 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.843919705 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.843788826 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.844011246 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.84316859 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.84283503 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.844217283 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.843177765 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.844097656 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.844624344 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.844187536 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.844817259 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.844682048 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.844341011 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.845607565 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.84355826 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.844473124 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.845779468 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.847301059 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.845380559 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.845990649 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.845466877 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.845203414 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.846729438 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.846648258 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.844211503 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.844916522 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.845757048 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.84537862 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.846174414 seconds)
  done (took 127.138121264 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845631353 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.844912115 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845251779 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846101104 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845040761 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.845076434 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844738236 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.843899753 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.84456631 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844489956 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845683613 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.845956261 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.845092509 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.845515477 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845964891 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.845526813 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.845943861 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845639837 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845796747 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849977413 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.846701929 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845105379 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.845474669 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.846872483 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846450259 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.846282987 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.846122041 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845804655 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845986475 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.846588492 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846607938 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.846964268 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846780318 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845956251 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.848307003 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.849506906 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851479696 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847129425 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.847537883 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.847965345 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.847438046 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846243133 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846415586 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.846002528 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.848256451 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847853099 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.846847337 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.846997098 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.848900575 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847787542 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.848690021 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.847979532 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850479385 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.847752936 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.84660485 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.847433749 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848725875 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.847213045 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847804585 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.847496547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.848622448 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.848071071 seconds)
  done (took 116.280181718 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848154178 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.848632104 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.849589341 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.849532454 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849532188 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.853343722 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849899532 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.850055034 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.85009236 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.850220391 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850484263 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851103765 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851404804 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849742962 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.850712773 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851607083 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851076486 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850766799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849220683 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850377386 seconds)
  done (took 38.786059975 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.853292461 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.851582199 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.851320732 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849764468 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.850878048 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.851238511 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.852047076 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850435109 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851274993 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850538619 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.851140476 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.851618263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850552189 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849723366 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.85066983 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.851966643 seconds)
  done (took 31.398341385 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.85261153 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.851093403 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.850291151 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.850408332 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.852232083 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.852011955 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.852781255 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.852643491 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.852065652 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.852180493 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.852805055 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.853034148 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.852227084 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.850407309 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.852633537 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.853160843 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.856493742 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.852219959 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.852421002 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.849950553 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.852909795 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.851597495 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.853565858 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.852943295 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.852727727 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.8532836 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.852257583 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.85388271 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.853375899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.853051444 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.852985571 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.853012959 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.85506176 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.853003332 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.852216934 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.853981115 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.853027445 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.853183787 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.853926624 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.854338168 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.853832752 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.855177418 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.853573997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.854009737 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.853929793 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.855084817 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.853251267 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.853630665 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.855827073 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.854284293 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.854306264 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.85325162 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.854709273 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.855247473 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.853960977 seconds)
  done (took 103.706829026 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854717922 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.853462499 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.854647783 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.854231528 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.855801429 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.855103344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.854752674 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.85506082 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856319322 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.85671551 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855160105 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.854045771 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855262944 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854046729 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.855377051 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855047533 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.854389768 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.854684956 seconds)
  done (took 35.174121726 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.855502959 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.854657094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.854317637 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.853857768 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.854249517 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.855836951 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.858029994 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.85570056 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854894255 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.855738335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855455982 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.855543154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857322367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.855607878 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.855564775 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855780962 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.856033134 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856669905 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.855866119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.856086282 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.856297712 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856544116 seconds)
  done (took 42.611844276 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.853996639 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.853572846 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.869230034 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.874607147 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.874916024 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.888621446 seconds)
  done (took 13.001685471 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856780318 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856526357 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857534277 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857240801 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856794757 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856054806 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856386669 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856089747 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857539023 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857034001 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856188959 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856390634 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855365615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856133881 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855704988 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855753137 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856629315 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856302064 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856502408 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856589199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856304295 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856639813 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857123751 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856692772 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857296588 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857404068 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856425758 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857407376 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857734273 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858023734 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856426619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857560145 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856795535 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857550638 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857321257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856530115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857720285 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858507539 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858083117 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85777629 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.858029832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857459596 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857437386 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858225755 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857348658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857891654 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85744568 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858335328 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857435642 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858685527 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857851361 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859243401 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859340018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858621899 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859286624 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8594849 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858794627 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861028803 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858457436 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859136992 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859316051 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85913956 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859957774 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859728025 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859919084 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860562503 seconds)
  done (took 124.392985694 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860706716 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.86030765 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860002687 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860695212 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860961654 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860119825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861898572 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859492096 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859827202 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860008309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859133051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860057917 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86037325 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860670665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859059957 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860099503 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860447505 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860542421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861028755 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859991936 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860300835 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861085783 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861049809 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860772418 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861413093 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860817548 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860401237 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860698534 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862035627 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861385721 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86077556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861246448 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861233005 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.861500425 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861243701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862059866 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861528789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861583505 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862167911 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861374621 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862164165 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862194201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8616302 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862502171 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863635357 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862316766 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862793647 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86290776 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863283747 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863179723 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865513165 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86337183 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863822973 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862949315 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86431481 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861823906 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862690489 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862617961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862455913 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863219683 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862251126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861746208 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863855284 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86323914 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862858505 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863654759 seconds)
  done (took 124.662284888 seconds)
done (took 2536.273593801 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.871889141 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.924292964 seconds)
  done (took 15.58908194 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.026673757 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.976564618 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.863378985 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.887962298 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.864654611 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.881962644 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.879429992 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.86406333 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.864071644 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.864449627 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.864797889 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.048680567 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.87718851 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.864160909 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.864266589 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.959178635 seconds)
  done (took 52.26461861 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.869379167 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.869175219 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.879020694 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.870229133 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.868963972 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.881614224 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.8997275 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.874133438 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.906181516 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.884527847 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.939835685 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.879804672 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.872738733 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.919887725 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.885337533 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.884734752 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.964507799 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.946928832 seconds)
  done (took 35.892534802 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.94800953 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.875440726 seconds)
  done (took 10.62382948 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.894650679 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.885667982 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.902831063 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.891362776 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.873039785 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.885518905 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.867668511 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.906308027 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.880887016 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.897002181 seconds)
  done (took 70.702023927 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.872737268 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.870508828 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.870674042 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.866772095 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.864955183 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.870880485 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.867163397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.86910048 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.559603769 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.907377009 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.879721141 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.877413629 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.868839986 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.86850116 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.867349878 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.89302145 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.987613111 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.866612969 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.865639079 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.874640528 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.868765402 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.925592525 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.882562886 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.870990788 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.902307587 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.560528057 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.881551936 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.873924184 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.999746974 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.866012479 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.86948276 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.080862998 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.874779538 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.332445124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.152947359 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.873422573 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.882353338 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.876717239 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.867930594 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.993123928 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.869933699 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.875560897 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.812230189 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.124013967 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.962964588 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.916557488 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.21780717 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.873105587 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.870505001 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.903731249 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.87367216 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.870886868 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.887051721 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.385751085 seconds)
  done (took 132.947815176 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.86840719 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.220371741 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033724243 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.868199737 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.154755984 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072880356 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.869413228 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913070668 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.871787868 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.099442941 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.124340362 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974223345 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.86915794 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.868195525 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.869693255 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.868840654 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010876101 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.940375183 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.872061661 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.867094285 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89550418 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10868445 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.989316904 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.873089199 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.89454677 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075376685 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.993704807 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.973185657 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.651225343 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.868228066 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.93177204 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.870546902 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.872353005 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868317704 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.021974835 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966661125 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950366275 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.871319399 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869117611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.869513327 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.52622264 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067692473 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.964494035 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.994596096 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125062395 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.077678008 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.647896435 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.869196779 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.601529936 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032991682 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.098970788 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.103051647 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.987881237 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.877865571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.39504974 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.868651089 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.869553934 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115843036 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094249544 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.970612836 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872882096 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870483185 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.86999832 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.108949012 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.873269567 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.965521396 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.87299744 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.871493782 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.965458668 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.968936969 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.102523742 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086125247 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.90099996 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.194090161 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.365415637 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.115556503 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.935803163 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12003972 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.873336421 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.871426165 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948849465 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.706474029 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.123234009 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.114960577 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.115582049 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.905847571 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.616785978 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.872073608 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.097397791 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.093858884 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.121717544 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.115772258 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.112353686 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.187532399 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.871325204 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.871350672 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.157947133 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.991171813 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.878920331 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.216174072 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10161716 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.413925352 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.898307026 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.176127608 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00000807 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879963117 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.496359193 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.873035406 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.093533488 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.912038811 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.873763792 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873281782 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.091602522 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.846185903 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87278748 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.53084429 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.933985525 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876786358 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104423583 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.878005544 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.133743378 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875920179 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101622744 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.350272758 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90292967 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.100155443 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.120172221 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.880114505 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116208517 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.110014953 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.98693456 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098751971 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.579143906 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872958435 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.158908844 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876686074 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.873488028 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.043313623 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.875400878 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016808613 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.880955269 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.156185693 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897531906 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10557086 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.882131068 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.128696721 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.905892455 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924532992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.878425332 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000783349 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87590476 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.694931269 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.033763565 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878066464 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.875929316 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.670782842 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.875247261 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022800733 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.0979795 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896873389 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946634945 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.541024407 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876071245 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955666823 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.899053598 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.264787383 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.876099954 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.126283447 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.883039963 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.875871246 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.876913626 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.106690846 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.062474563 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.878534723 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.87759467 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.774202781 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.8759254 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.875613855 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.056413197 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.262150829 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.875428824 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074256659 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.880354714 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00337277 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.883725169 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.938460629 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.2163976 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87652155 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.876714016 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.877699371 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.876688995 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.878160183 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.136374005 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.901411392 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.395079463 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.012045833 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.143143639 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.185998532 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.117854476 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.919507248 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.88064487 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130984055 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.879523504 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.938433812 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.880010091 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89717301 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107826837 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879881531 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.083384774 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.146634803 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.7222011 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924786401 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.881629145 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879905204 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.880085365 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016830134 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963983121 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.880229626 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.878524821 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.992240304 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.003366693 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.092636488 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.880767447 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.990329909 seconds)
  done (took 903.937599849 seconds)
done (took 1223.754529914 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.878325452 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.883305738 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.882754831 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.883131433 seconds)
  done (took 29.336615415 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.879370636 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.880154046 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.881035236 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.88016596 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.881575274 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.879876556 seconds)
  done (took 13.092081639 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.948575929 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.883530607 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.883587226 seconds)
  done (took 21.52618306 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.95615687 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.293625827 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.020505073 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.312560897 seconds)
  done (took 10.393957314 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.881300572 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.882066848 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.880540189 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.882633635 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.881719615 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.880667014 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.881421751 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.882431172 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.882286523 seconds)
  done (took 18.748235371 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.544857353 seconds)
done (took 99.453630926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.952708897 seconds)
    (2/309) benchmarking ("sort", Float32, false)...
    done (took 5.545473211 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.979197287 seconds)
    (4/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.635835549 seconds)
    (5/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.160214778 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.735108484 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.921492297 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.897456414 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.879870416 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.583389225 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.965069195 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.653532538 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.962574385 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.882376642 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.449698965 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.042818594 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.341025882 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.321513098 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.887429192 seconds)
    (20/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.052686752 seconds)
    (21/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.453127993 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.26341045 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.991061066 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.914627359 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.882028701 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.711057321 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.904990875 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.897262992 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 5.587063677 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.020550961 seconds)
    (31/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.013120654 seconds)
    (32/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.512064076 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.070794327 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.449653872 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.091732169 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.130809211 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.116450299 seconds)
    (38/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.045697989 seconds)
    (39/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.060649708 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.114160498 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.049528723 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.069464616 seconds)
    (43/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.890627499 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.972832894 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.886454266 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.021045168 seconds)
    (47/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.980535071 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.929770321 seconds)
    (49/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.321216179 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.955392258 seconds)
    (51/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.985325189 seconds)
    (52/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.633924558 seconds)
    (53/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.675574493 seconds)
    (54/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.663664628 seconds)
    (55/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.088082873 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.03909941 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 2.112286464 seconds)
    (58/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.384594467 seconds)
    (59/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.310630758 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.067057182 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.912139134 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.546639575 seconds)
    (63/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.066545272 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.537876818 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 5.522204278 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.771453507 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.358621858 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.144042714 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.343584512 seconds)
    (70/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.047296613 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.137222871 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.038182936 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.910350302 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.135929603 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.190566745 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.89231651 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.876241286 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.996445915 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.888230388 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.983731184 seconds)
    (81/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.035325435 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.905931786 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.887148502 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.887079217 seconds)
    (85/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.609727807 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.992017871 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.903113224 seconds)
    (88/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.088104979 seconds)
    (89/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.261861134 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.965891392 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.886137728 seconds)
    (92/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.416803455 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.993926774 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.889075807 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.220678017 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.66964717 seconds)
    (97/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.913941631 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.886323644 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.896194566 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.270474891 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.092871897 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.887787784 seconds)
    (103/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.746733275 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.276229087 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.887964043 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.427154094 seconds)
    (107/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.244325995 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.114469897 seconds)
    (109/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.90989742 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.133564096 seconds)
    (111/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.060354872 seconds)
    (112/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.026641856 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.071053609 seconds)
    (114/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.271350946 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.189680535 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.907942837 seconds)
    (117/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.190376427 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.896652284 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.993010591 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.187705226 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.914280535 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.195406065 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.287936311 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.013262141 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.13404228 seconds)
    (126/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.157559924 seconds)
    (127/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.253334899 seconds)
    (128/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.080809533 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.897872195 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.966907623 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.109315306 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.20142372 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.020739458 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.911849571 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.797037461 seconds)
    (136/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.996886032 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.892868087 seconds)
    (138/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.361800565 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.443597515 seconds)
    (140/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.899269671 seconds)
    (141/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.464496859 seconds)
    (142/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.350943413 seconds)
    (143/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.144692558 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.222234133 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.059728442 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.762365018 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.911645407 seconds)
    (148/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.29513481 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.890531269 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.018176104 seconds)
    (151/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.918058474 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.992243324 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.892983481 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.959855111 seconds)
    (155/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.914485178 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.712876048 seconds)
    (157/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.238011913 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.027237945 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.65300981 seconds)
    (160/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.216006862 seconds)
    (161/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.047787157 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.900098154 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.101192639 seconds)
    (164/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.185492161 seconds)
    (165/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.979989428 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.071430744 seconds)
    (167/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.528461657 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.914128283 seconds)
    (169/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.891110284 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.964884216 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.80128058 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.159739444 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.894059342 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.990105811 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.556959069 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.100980366 seconds)
    (177/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.926639042 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.99144447 seconds)
    (179/309) benchmarking ("sort", BigInt, false)...
    done (took 6.895518367 seconds)
    (180/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.918203273 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.015279427 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.272764834 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.993125153 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.205882298 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.116753761 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.894971387 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.895000214 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.638121129 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.899234186 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.294920437 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.183170526 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.893939683 seconds)
    (193/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.911492226 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 4.166829251 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.91324352 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.894290116 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.959203171 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.027880051 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.099555097 seconds)
    (200/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.972350056 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.284914283 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 4.853697273 seconds)
    (203/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.327533416 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.155954029 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.209940836 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.204985024 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.900310626 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.184248193 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.205648113 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.206925273 seconds)
    (211/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.982182343 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.774646438 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.176512372 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.896283597 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.927984003 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.491407181 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.00241586 seconds)
    (218/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.178041261 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.961865271 seconds)
    (220/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.989907343 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.906723833 seconds)
    (222/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.91857883 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.238399422 seconds)
    (224/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.360494048 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.127624633 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.494434842 seconds)
    (227/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.298033563 seconds)
    (228/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.310055669 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.28048842 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.509225699 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.204398716 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.954802322 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.288800697 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.997842683 seconds)
    (235/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.905711757 seconds)
    (236/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.415815958 seconds)
    (237/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.779793989 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.321083161 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.958855461 seconds)
    (240/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.024618368 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.687189894 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.026821085 seconds)
    (243/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.001319942 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.919261788 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.363782717 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.930117452 seconds)
    (247/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.288375823 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.202922355 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.023945189 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.895994632 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.250055575 seconds)
    (252/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.203900896 seconds)
    (253/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.011164708 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.034857277 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.9711067 seconds)
    (256/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.983043745 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.110087567 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.163570376 seconds)
    (259/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.591004879 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.961352503 seconds)
    (261/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.962341816 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.136673006 seconds)
    (263/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.385447964 seconds)
    (264/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.994867653 seconds)
    (265/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.045630187 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.01718534 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.900723689 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.922976092 seconds)
    (269/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.226276104 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.903102125 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.053175053 seconds)
    (272/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.975642884 seconds)
    (273/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.353814004 seconds)
    (274/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.977532434 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.990084625 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.916922175 seconds)
    (277/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.027100594 seconds)
    (278/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.985909565 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.901664502 seconds)
    (280/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.117080753 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.798131803 seconds)
    (282/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.086104028 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.084160723 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.215790899 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.905528802 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.791262804 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.085653542 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.899920212 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.003017582 seconds)
    (290/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.103130177 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.223945187 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.897602119 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.163297391 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.548761408 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.868211663 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.054652508 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.120648518 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.778737258 seconds)
    (299/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.989358167 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.960062025 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.927876811 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.990171989 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.261394668 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.235299195 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.156104713 seconds)
    (306/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.044637199 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.209866645 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.113595424 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.900680036 seconds)
  done (took 1018.765441603 seconds)
done (took 1020.644862495 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.926399721 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919272343 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.902025934 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.924724827 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.015749019 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.946687544 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.91653858 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.907763602 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.953479203 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.953513572 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.900348193 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.943885451 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.90338415 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.904019967 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.903196765 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918239927 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.209006442 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.930321504 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.921715478 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.917322294 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.920812298 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.902165057 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.954937273 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.944255305 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.907790677 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.910362419 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.90743351 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.923204993 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.016514464 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.906699782 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.909351404 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.915738144 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.208840893 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.929776405 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.904201016 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.925389058 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.915589181 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.915386075 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.908588985 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.937350128 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.35234067 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.909148318 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.905799215 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.905243866 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.905379402 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.91214451 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.904709955 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.9138343 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9193973 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919901006 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.351669825 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.925880818 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.909850381 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.906367614 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.91946626 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.905148384 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.910064585 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.92200957 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.925673927 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.922609881 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.199792056 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.939434106 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.909229534 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.923980324 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.914832848 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.389840108 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.910685944 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.913207755 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.354476859 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.920246907 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.38454214 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.922478813 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.909912728 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.922046238 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.939599895 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.211858914 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.93131057 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.907656673 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.916489755 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.904158179 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.922194668 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.921905773 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.912456534 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.910121099 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.922713379 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.949818606 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.920361788 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.908344332 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.919560793 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.926763721 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.915891952 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.919679792 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.911912251 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.90682256 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.91893487 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.913182191 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.913895914 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.910272028 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.914147077 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.921789851 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.352023588 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.930555884 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.906341438 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.905637017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.908558675 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.922960146 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.353079462 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.913859627 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.93164008 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.958153783 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.910671387 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.206377618 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.937357461 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924675899 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.92158974 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.911901666 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.907362543 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.203248892 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.377825926 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.93093308 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.910907442 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.908191541 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.926294628 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.911737346 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.909022936 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.213586237 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.942081616 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925380935 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.032070111 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.924273562 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.942661134 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.908036092 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.913452655 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.954567324 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.925945913 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.9430171 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.914071159 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.92648678 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.927092753 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.908323353 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.921245367 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.92494279 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.912739246 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.919619839 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.908468866 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.956862812 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.925483937 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.925188749 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.932280443 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.033274471 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.908647566 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.203630124 seconds)
done (took 299.934341077 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.985473822 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.906152171 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.024721209 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.909822376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.994986354 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.981046937 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.909814829 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.910408981 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.909409505 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.410299764 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.910037433 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.914188523 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.906562315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.914797109 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.977454672 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.909658359 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.909520419 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.191698637 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.91056593 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.988906952 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.908507727 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.909683628 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.909298586 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.41041011 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.907158348 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.907692568 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.988580758 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.910060634 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.198976546 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.910459718 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.908897178 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.204541079 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.990049013 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.923091381 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.918031591 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.917736858 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.997121913 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.91951241 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.977229067 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.976601522 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.026499824 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.943813872 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.90970593 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.910713114 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.914214193 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.911884873 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.909845855 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.944165317 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.912147554 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.916949894 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.192993789 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.919378728 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.916950564 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.912436661 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.912695308 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.926667185 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.911630639 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.912001396 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.989475062 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.912093467 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.978226962 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.411952929 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.413436342 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.91313793 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.910692432 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.912482915 seconds)
  done (took 187.356849471 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.975650646 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.98524363 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.97697456 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.91714446 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.960824615 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.978793059 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.91985212 seconds)
  done (took 15.556658768 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.918448439 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.912707562 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.963569843 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.963181072 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.912848804 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.089532132 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.924114427 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.919443493 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.937890685 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.913193752 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.578386735 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.963885732 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.920518646 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.912731377 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.924020476 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.971006518 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.915989367 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.913673441 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.022333807 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.063323331 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.919156419 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.920698247 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.939726757 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.925050945 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.915078096 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.914560895 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.913766006 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.920986415 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.914321898 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.913302102 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.915062442 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.965676906 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.913969716 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.91357985 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.914510553 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.914533467 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.913932037 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.914946252 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.914992377 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.913285595 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.915126916 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.914439053 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.914966528 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.915769176 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.915311425 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.939798146 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.914676706 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.915516966 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.91559647 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.91565728 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.94271723 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.915702266 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.915238891 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.920668743 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.960692328 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.924619877 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.91596491 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.916277306 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.916589933 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.91710239 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.915926289 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.067176104 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.967304847 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.916157649 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.967176139 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.068391139 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.916687076 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.916694269 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.917635704 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.00930683 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.916616331 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.966858665 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.916734744 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.031148323 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.917755257 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.094723019 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.939741881 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.919431443 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.919137044 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.915695966 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.92350841 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.917348813 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.918527339 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.923490332 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.922389006 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.917069111 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.917699862 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.918028828 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.92375287 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.919718044 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.968189855 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.917366716 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.916883904 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.057733619 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.917199027 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.025916917 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.943635036 seconds)
  done (took 210.449264706 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.923786157 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.923877808 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.918012805 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.932922727 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.91872139 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.919338829 seconds)
  done (took 13.382743242 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.921523123 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.922284922 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.9185374 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.919101843 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.917958202 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.919065403 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.91894315 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920065029 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.923492768 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.920919724 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.919202239 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.919486323 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.919589486 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.91853928 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.919258599 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.919504819 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.920564555 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.918691012 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.918298819 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.918244506 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.051634619 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.918726724 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.91894321 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.921715225 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.923497446 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.918890151 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.931424017 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.919236415 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.919474728 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.927969276 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.923255874 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.92091788 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.921403316 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.925353369 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.925146786 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.922224615 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.923515246 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.919495518 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.919789757 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.920242151 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.91961552 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.919581923 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.920078795 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.920003317 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.921512751 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.926035695 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.926361904 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.93131461 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.920592649 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.920621982 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.920085163 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.919856482 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.920702717 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.920464403 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.924387132 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.926149768 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.924302794 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.920498434 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.920802555 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.922634025 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.925333571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.921312369 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.924517907 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.925087776 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.929274237 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.920801295 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.924343139 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.925476136 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921800258 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.921055438 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.922071735 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.921645195 seconds)
  done (took 141.345263556 seconds)
done (took 569.945233658 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.611869328 seconds)
  done (took 9.461419109 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.084414961 seconds)
  done (took 8.938901802 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.668149745 seconds)
  done (took 10.518962672 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.929618436 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.926117711 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.92842591 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.923330153 seconds)
  done (took 29.566244371 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.164014311 seconds)
  done (took 9.01411861 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.934597597 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.92016135 seconds)
  done (took 15.778521102 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.056941646 seconds)
  done (took 8.906742426 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.979038938 seconds)
  done (took 8.848396934 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.941825239 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.946076526 seconds)
  done (took 15.758404156 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.925175672 seconds)
  done (took 8.77496359 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.853693927 seconds)
  done (took 9.793644635 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.932074706 seconds)
  done (took 8.80153409 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.930323624 seconds)
  done (took 8.780476816 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.947743102 seconds)
  done (took 8.797642805 seconds)
done (took 163.590965896 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.929655574 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.92173572 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.920541119 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.921427826 seconds)
  done (took 29.544579487 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.958704952 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.95802391 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.966288189 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.957459837 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.948965511 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.949221784 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.959147839 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.959945696 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.948953886 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.957472695 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.957945219 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.956008323 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.958554911 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.966619245 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.967128502 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.957710588 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.958514739 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.959795014 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.948713465 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.96865454 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.956683276 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.97654412 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.925146964 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.924784351 seconds)
  done (took 48.799075663 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.111191711 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.990086643 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.078425694 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.968792534 seconds)
  done (took 10.00069244 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.923826361 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.988829158 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.975768474 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.977972804 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.009633859 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.028387024 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.978325633 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.13895445 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.040537104 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.051849099 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.932726305 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.94629581 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.950344084 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.976096616 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.028541867 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.925925177 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.925351546 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.041136271 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.987820587 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.136923126 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.925977296 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.978902227 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.011744824 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.977705697 seconds)
  done (took 49.712784902 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.926263286 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.935036253 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.934109967 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.932433739 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.927663473 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.927550149 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.93358696 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.929271087 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.948883746 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.928777935 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.926868642 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.92726535 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.93416812 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.927425826 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.927335827 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.941236016 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.941820856 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.927055717 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.931381056 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.936457543 seconds)
  done (took 40.498962095 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.925998683 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.77265232 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.269536723 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.177426587 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.924418329 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.924870093 seconds)
  done (took 31.850268791 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.93898082 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.931802538 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.926823165 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.982852081 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.067691304 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.93729233 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.927121997 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.9386385 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971792777 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.994786946 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.94586912 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.954255678 seconds)
  done (took 25.373501627 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.926364608 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.930018286 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.929654382 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.941927155 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.938190789 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.936539535 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.93503767 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.928289414 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.942599589 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.948550009 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.93714541 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.938561985 seconds)
  done (took 45.09760828 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.141859727 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.153093474 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.1467122 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.418831492 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.926156897 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.826105679 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.640086281 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.620415956 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.22395771 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.906813215 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.892770428 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.832647926 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.171033971 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.928932513 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.182242871 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.856366936 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.929829814 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199411136 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931558346 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.932220119 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.213247237 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.987415386 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.14313461 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.976198894 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.142879106 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.289483089 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.177956561 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.192250223 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.261816082 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.989707177 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.009599176 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.977187273 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.938377595 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.940232497 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.93085606 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.942316066 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2007248 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931852055 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.935343036 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.930783868 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.856611358 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.224843078 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.045713822 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.348635097 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.062170077 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.171146702 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.934676536 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.999220961 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.991800517 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.163571971 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.034096304 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.143951749 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.856205523 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.277681045 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.055539185 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.932816361 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.934532206 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.630407607 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.171508099 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.011070343 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.220344287 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.042612047 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.933985468 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.018725754 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.930669395 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.044180534 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.119859437 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936598424 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.931822473 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.938274276 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.030186353 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.146382499 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.932126176 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932569126 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.948934092 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93461492 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.283287698 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.388972654 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.919154945 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.487795092 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.30179322 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.898402034 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.30619124 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.975238745 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.212475037 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.147804018 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.011951458 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.176345535 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.796251886 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.937079171 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.737420483 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.011588268 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.996930659 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.9327832 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.001362835 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.205072619 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.04839179 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.933200191 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.859219708 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.943767482 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.136582716 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.300869583 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.987259043 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.932510413 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.933542638 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.934998543 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.934386828 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.949516827 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.945394303 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.851367802 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.215685763 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.047291587 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.186356726 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.923306591 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.619057826 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.199392093 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059724355 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.527672524 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.069358788 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.91109674 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077981195 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.942190711 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.936768611 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.123987625 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.346337193 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.004537828 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.17736144 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.97678201 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.962689263 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.940189326 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.016193253 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.160899358 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.935292392 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.184544562 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.182114583 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.593530069 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.982230143 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.007383459 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.943518399 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.148219876 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.016869249 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.468494341 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.155629155 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.401583889 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.923197216 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.532907347 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.16785373 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317253759 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.950793022 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.00760535 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.968622238 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.638795472 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.861594535 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.940731423 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.272047115 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.083490986 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.969499029 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.937007547 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.93724903 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.944125429 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.019947245 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.011143785 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.010867863 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.864208003 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.93799975 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938228656 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.936486826 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.476763192 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.595683412 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.227253796 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.936463037 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.010698891 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.937989248 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.540792237 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.944871883 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.119805696 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.940015208 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.670667028 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.966783998 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.171654339 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.331889257 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.060170072 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.937981587 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.939905145 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.639610965 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.946963733 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.637243261 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.221749353 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.935893997 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.383380953 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.000437951 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.018783359 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.95308989 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.939127049 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.939792264 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.940177652 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.141047907 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.455411103 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.242978541 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.283804513 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.021463574 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.208576179 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.129718453 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.301766689 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.618773954 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.448354805 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.164970018 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.939972968 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940357562 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.517647829 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.946686356 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.156475932 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.141500249 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.212944222 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.23877058 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.348937732 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.944664629 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.954977239 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.181531659 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.939776068 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.37690465 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.989024143 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.265060927 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.749737305 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.202222706 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.005097476 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.951103568 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.583754 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066201962 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.894506845 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.070000063 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.865798005 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.609863618 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233981158 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.213903585 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.921417329 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.277498054 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.235855921 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.172742282 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.571906679 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.936119694 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.997701934 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.022102008 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.941732093 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.371105459 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.982112449 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.998660188 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.947878317 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.943645065 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.943513732 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.6242347 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.019202074 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.072949008 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.678365862 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.335547071 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.851550507 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.21297756 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.997766976 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.391433009 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984381734 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.155236359 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.947347201 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.390680432 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.990140687 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.216580704 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.902410869 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.156857892 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.148271269 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.968810715 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.952696142 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.868676332 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.806135789 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.949960333 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.019596288 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.824557731 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.945626966 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.231013226 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.443886044 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979021458 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.945846527 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.241601048 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.317494147 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.119589431 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.951383204 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.156969742 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.071116639 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.863191725 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.430721902 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.532088108 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.644346532 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.95587633 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.147264312 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.266946367 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.120761876 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.981990811 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.014624652 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.208038128 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.929304437 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.943813246 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.465002829 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.041540922 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.185627617 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.2574783 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.340631674 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.331289126 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.185722066 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.950881069 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.162019621 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.312315596 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.191888423 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.877947298 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.036790938 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.15905357 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.22379305 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.830222268 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.655968239 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.18753055 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.950949222 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.871794702 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.154862365 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.446639788 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.312442018 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.488814857 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.024855203 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.973420759 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.430125166 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.964077901 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.880599327 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.946793782 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.895722517 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.161377709 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.017917424 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.986099405 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.503319388 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.181403521 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.342148557 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.080084029 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.985315699 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.872110169 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.622742052 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.899236197 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.99477888 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.995225108 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.021199094 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.953076977 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.152734787 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.38777161 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.005899778 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.488334819 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.155468592 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255240176 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.217743358 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.253958049 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.910549704 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222820955 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.899594483 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.352304826 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.036566329 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.028613372 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.949742873 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.953850725 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223085224 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.244839547 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.422826754 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.98706421 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.272906772 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.052531407 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.953599095 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.956589142 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.376390961 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.186744101 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.165257515 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.028396422 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.155248978 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.024591404 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.466265278 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.956791044 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.954726113 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.087735723 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.928763954 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.70935364 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.244752632 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.699482181 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.154377385 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.472557608 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.819169439 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.033142319 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.998154653 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.952494775 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.955074771 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.957141783 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.192935572 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.229163867 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.715116997 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.957152024 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.952378121 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.814825565 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.628098111 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.190878196 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.963869891 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.01998978 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.955545844 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.069319924 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.95266759 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.219550476 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.006541498 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.953683618 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.954066283 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.166535188 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.468189832 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.97019674 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.656887747 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.156639073 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.958211875 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.440183127 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.39894022 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.103345478 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.997485449 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.032279116 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.203147566 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.481700519 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.036484687 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.951791452 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.181609183 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.956071491 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225838646 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228973304 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.956752064 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.171202771 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.324374052 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24288763 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.965058767 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.827843492 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.960894585 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.221283976 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.008080183 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.955123208 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.963776934 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.954122903 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.623082228 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.4274641 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.115859433 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.250563739 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.774001707 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.715106911 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.958350818 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.959464976 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.67345536 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.690691564 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.170602113 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.241828042 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.903989736 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.158341206 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.660214376 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.940970976 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.229387988 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.882332397 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.959789679 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.360986402 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.228759683 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.891393278 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.962183606 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.531157251 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.955391595 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.04134041 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.957747784 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.08467366 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.226408566 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.309536175 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.071950687 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.597783466 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.614504351 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.899781392 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.0113371 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.764374485 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.51835982 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.674481384 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982154717 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.973513423 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.883394271 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.961453756 seconds)
  done (took 1669.726085306 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.978290767 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.988150154 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.035854587 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.968794106 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.059402006 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.044635822 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.994029775 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.968784938 seconds)
  done (took 57.922706685 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.97324247 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.973371518 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.962823634 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.958016303 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.961820018 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.958172425 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.119430065 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.968987077 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.961659777 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.962516869 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.9597571 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.956833198 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.242167172 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.979632408 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.959011306 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.961742318 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.966642803 seconds)
  done (took 75.766766225 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.961419622 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.191331458 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.012782727 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.962444749 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.938126258 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.975132143 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.051330308 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.975050516 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.96475207 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.197136604 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.253962016 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.978091002 seconds)
  done (took 91.348280337 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.963562534 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.96035609 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.95916226 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.959538864 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.960240509 seconds)
  done (took 11.693466401 seconds)
done (took 2189.253664596 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.297199865 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.016918927 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.056415702 seconds)
  done (took 5.960141692 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.106460996 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.152218448 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.263389061 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.025219958 seconds)
  done (took 10.439599637 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.212763953 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.346956919 seconds)
  done (took 6.445405534 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.317826903 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.978721637 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.324005148 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.96240266 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.965656524 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.96769878 seconds)
  done (took 22.787419657 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.964237998 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.9617627 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.961875969 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.961756283 seconds)
  done (took 9.737131148 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.959373935 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.701198902 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.959450091 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.974209393 seconds)
  done (took 21.481954209 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.101795441 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.073554554 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.100017811 seconds)
  done (took 8.165873083 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.180700616 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.176183749 seconds)
  done (took 7.244022004 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.103425299 seconds)
  done (took 3.991290164 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.990832671 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.232359525 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.458342264 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.920468496 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.619324961 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.035723323 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.334447135 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.216432212 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.395039726 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.421710053 seconds)
  done (took 26.513324257 seconds)
done (took 138.572597833 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.510066486 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.993394952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.165822201 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.38564063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.198060759 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.164769523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.182778199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.36792067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.054624869 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.020774211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.356480897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.195256757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.124451711 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.992203674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.132091273 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.990772506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.191427618 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.380833055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.047817651 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.289634566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.187453473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.020738177 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.212618885 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.010434702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.195932577 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.115442162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.553209674 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.993290607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.185112232 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.552726047 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.120619987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.428317072 seconds)
  done (took 172.213865707 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.96611569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.965873619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.968512607 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.968062177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.264492207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.96707887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.96711238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.96781198 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.255686267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.23608666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.966504336 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.260927242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.968811853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.967676891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.969401127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.966525037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.401232632 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.966916258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.967360728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.967812504 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.967701252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.091256723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967338983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.100746231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.379495597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.967621399 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.967340984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.967746876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.968842902 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.967669278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.970563276 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.96904477 seconds)
  done (took 211.110686711 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.968162794 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.969541316 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.968543429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.968626832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.969160296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.969699298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.968995431 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.967566357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.718770969 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.70520168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.968365057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.969646749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.971778015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.969586218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.973302304 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.97030953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.974232781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.970854381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.969462764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.972363673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.971001936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.735367525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967055867 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.756542356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.972053521 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.973883989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.969852211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.969397229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.967757682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.969836058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.971591486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.970711818 seconds)
  done (took 223.975996968 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.214329159 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.971488018 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.973160644 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.024264055 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.97342894 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.971164652 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.976301927 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.216180653 seconds)
  done (took 20.217552426 seconds)
done (took 629.428332107 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.328426182 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.723112578 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.109955008 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.995963937 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.219224689 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.038868619 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.989038036 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.056023357 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.827211031 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.069152478 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.37870751 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.999031221 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.746873002 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.017667431 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.115699727 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.048728229 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.33083602 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.644552172 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.135903967 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.631000994 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.149809101 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.938759211 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.072383636 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.873720615 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.400953049 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.960864346 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.030334743 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.332587168 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.997162837 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.150916344 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.580060189 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.269930048 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.010731247 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.992804503 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.044417302 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.022558317 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.213262543 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.004222352 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.109872991 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.730983175 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.629187294 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.718156422 seconds)
  done (took 104.53780579 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.982891153 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.977370867 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.97790301 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.978481368 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.986736042 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.977712831 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.978557594 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.978862425 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.978010516 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.979244805 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.978910815 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.987828768 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.978963109 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.987691033 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.979461607 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.978683603 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.978051492 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.988442807 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.978579026 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.97906155 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.97915387 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.979722204 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.975686216 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.980199533 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.979034481 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.978796888 seconds)
  done (took 53.398816543 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.975654994 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.143120004 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.224143041 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.996343414 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.974603564 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.978183756 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.004834527 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.982642966 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.976755226 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.977319124 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.075900823 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.981127509 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.988678171 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.220855967 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.992218046 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.975528837 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.976484821 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.981349323 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.151531327 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.992313635 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.006697257 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.983560282 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.005616372 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.991633295 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.977583149 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.976542396 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.979603925 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.400849479 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.989172832 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.078252711 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.049004293 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.011523401 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.361485724 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.230755101 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.032397767 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.985653227 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.97735924 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.081041091 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.982861099 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.976630147 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.005330697 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.985092828 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.224607298 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.503110949 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.99189142 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.977750693 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.404418633 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.092424537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.018357139 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.991447522 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.230261218 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.995850977 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.97958199 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.979142055 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.014360053 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.994425327 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.977873104 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.265911671 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.994812628 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.006394143 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.985923427 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.982057383 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.159464704 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.988042291 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.147709024 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.988574469 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.984074006 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.979138458 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.225091626 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.996382278 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.514596993 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.993738506 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.978627052 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.078769402 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.153338461 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.430046492 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.99248587 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.160115814 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.376834052 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.016763563 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.99071834 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.385755272 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.020281544 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.989213312 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.978952331 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.979831949 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.980056527 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.026448186 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.006492852 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.433531423 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.51369997 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.282698306 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.019991983 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.99329721 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.981849756 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.265890938 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.991095058 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.9791678 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.215490214 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.527692858 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.995972173 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.987235324 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.495447336 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.000765684 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.010246221 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.991018851 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.236937019 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.997655656 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.028229835 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.981129203 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.985999648 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.983223422 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.009774811 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.990784113 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.98069846 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.485877069 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.099236374 seconds)
  done (took 245.142697695 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.983331983 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.978886313 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.979552455 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.979892551 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.979986705 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.980980083 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.979189446 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.979015675 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.981708729 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.979565099 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.984928899 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.978907727 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.982662757 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.981231587 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.019035756 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.984482901 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.465877914 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.981798261 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.979811312 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.981965212 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.539084727 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.986253357 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.979980093 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.982838751 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.982336373 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.983529371 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.982201007 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.016436161 seconds)
  done (took 170.505096461 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.983795947 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.03657419 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.996237928 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.030542426 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.999905183 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.984867863 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.078585013 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.000828643 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.987808893 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.984023737 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.982861198 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.01420698 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.99244683 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.078716353 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.014600778 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.088826641 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.08555765 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.991290396 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.983785784 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.008576795 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.031017651 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.998956015 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.014387366 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.046021568 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.016930348 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.038844433 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.996645762 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.984758401 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.983094673 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.119736042 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.001263814 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.0153873 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.017946104 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.004011133 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.112015714 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.097430286 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.08796748 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.088567154 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.991043377 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.98935536 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.984889423 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.985874079 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.040738632 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.000831905 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.989313611 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.100133354 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.002820446 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.985580829 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.985340044 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.990030982 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.999404213 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.003001649 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.020928256 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.108846916 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.035195439 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.011609299 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.081253753 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.106904988 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.98731852 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.087624182 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.993849176 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.099308387 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.004570989 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.986840034 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.996794011 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.990814755 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.035027226 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.098291595 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.089882296 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.996887754 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.081819265 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.043715538 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.003578405 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.986978586 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.988080988 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.041804171 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.097120764 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.04364664 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.050393949 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.026613045 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.995455368 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.985466749 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.988641934 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.013295507 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.995515116 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.099961261 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.099704639 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.997431614 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.988118258 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.987998506 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.988759964 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.0111698 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.050927223 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.03012422 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.093779783 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.028580347 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.026320428 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.996113649 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.002055327 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.994011963 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.021362848 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.99708909 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.000818048 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.27796219 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.018631566 seconds)
  done (took 214.727379736 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.384223948 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.036730627 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.068967133 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.247836334 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.377895223 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.877002627 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.036136325 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.037873475 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.058749289 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.163829617 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.115219889 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.081748017 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.025157481 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.00953556 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.031367748 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.065839423 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.06635215 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.33109152 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.244012207 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.491937372 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.029120069 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.303634352 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.374250102 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.397124572 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.080194335 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.408782954 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.615587677 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.128180797 seconds)
  done (took 66.006229046 seconds)
done (took 856.216579119 seconds)
SAVING RESULT...
DONE!
