cset: moving following pidspec: 17130
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.872119216 seconds)
loading group "string"... done (took 0.568668037 seconds)
loading group "linalg"... done (took 8.928974682 seconds)
loading group "parallel"... done (took 0.170637283 seconds)
loading group "find"... done (took 1.418302583 seconds)
loading group "tuple"... done (took 2.098337741 seconds)
loading group "dates"... done (took 1.384717475 seconds)
loading group "micro"... done (took 0.219671558 seconds)
loading group "io"... done (took 0.60836964 seconds)
loading group "scalar"... done (took 43.170433888 seconds)
loading group "sparse"... done (took 13.526257066 seconds)
loading group "broadcast"... done (took 1.096809434 seconds)
loading group "union"... done (took 12.250380416 seconds)
loading group "simd"... done (took 2.534298562 seconds)
loading group "random"... done (took 10.313496336 seconds)
loading group "problem"... done (took 1833.690637306 seconds)
loading group "array"... done (took 25.72735083 seconds)
loading group "misc"... done (took 1.118866416 seconds)
loading group "sort"... done (took 3.783541085 seconds)
loading group "collection"... done (took 19.09391926 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.674041255 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137468079 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.166660214 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.347759216 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191243736 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156981208 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162063284 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.560488432 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.991410881 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.215191136 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143661359 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.548383196 seconds)
done (took 6.004788434 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.291929363 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.440287271 seconds)
    (2/2) benchmarking "String"...
    done (took 0.129655856 seconds)
  done (took 1.232140457 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076836655 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.176672302 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094613408 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110250117 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112066397 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109936245 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095875167 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110442064 seconds)
  done (took 1.463024467 seconds)
done (took 3.728592886 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.49272718 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.945443596 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.574222008 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.135914833 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157974702 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.147578952 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.302951892 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.164747935 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122365996 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087568043 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171064108 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.428348743 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.48335729 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.036023511 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085856884 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127274704 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.086169746 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.782894737 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.089297179 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.138579322 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526526849 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.113016674 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120104555 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139858941 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189513054 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130784552 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163701397 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.096182495 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.756793156 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104764334 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185521944 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099113019 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162262354 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.243531687 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.095694091 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09353015 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.762132414 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.178063559 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112300354 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103964672 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.755110061 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083770119 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195991152 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099136117 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111651366 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193998561 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118443667 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079862574 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10231617 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.091850214 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169180267 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.547382017 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10692037 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149301908 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108721013 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.75984607 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098091113 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.160046663 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14201956 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099733449 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095582325 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109266148 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.165677795 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111001585 seconds)
  done (took 20.356433113 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119610042 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141842096 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094194215 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140189282 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141274914 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096952993 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084199797 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095140935 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109879172 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186489994 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138504777 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14462036 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092042458 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08327453 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118167456 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24959539 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106055447 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122363524 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081989453 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10631296 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13986723 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096771774 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109575686 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110272256 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169262624 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205630889 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112303264 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123776728 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093170349 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099352367 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143573549 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.16057597 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077442002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094452052 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.183946569 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120307607 seconds)
  done (took 5.166468793 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.20221301 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117262613 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19519302 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179740624 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147438092 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.135082124 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168901945 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12070197 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.270433818 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.198814292 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179708164 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115092616 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113191115 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078925048 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098049289 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078823432 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.700670664 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182707289 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151603881 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126522677 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103249865 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083993564 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.766400389 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104060706 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082485607 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103347813 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073293411 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.177664441 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10350765 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.311688918 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120776331 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089104089 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135357261 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21104066 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118787149 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142666504 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101914351 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083656716 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232474589 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093475674 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094902999 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111418367 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134430616 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134540277 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10052269 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094918032 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.132175962 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241978981 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083430946 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121082733 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082091723 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.121206408 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.203191446 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.100323107 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101328807 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.358226524 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119519743 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086743437 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099811567 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.313900781 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13622519 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084226759 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078819874 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103818523 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095271106 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.758397262 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094354799 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.361156919 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098538976 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157991594 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100326921 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10602158 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086930314 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102787467 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103152701 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09995596 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080103146 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.0967707 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080718495 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0966426 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084534381 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115929201 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102317468 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080353722 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161384452 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101625401 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118578512 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124648125 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085626002 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096560146 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114802327 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097570033 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082855896 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147574476 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104964769 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1144295 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100317236 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129206401 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09914846 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.205141191 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084010884 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124859179 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100205715 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113890192 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12144849 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098072426 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08426646 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097075001 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080905989 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162671542 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083178307 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080366686 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101895279 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111415393 seconds)
  done (took 25.074009664 seconds)
done (took 51.254897034 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.462005172 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.0964812 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113457571 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.114494371 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112829053 seconds)
  done (took 1.635777084 seconds)
done (took 2.34245069 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.355807306 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.183374713 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102765747 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.198219254 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090004238 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.205550615 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.171724572 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11966978 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198970811 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.10188145 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177618815 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101145692 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08920471 seconds)
  done (took 2.832220102 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096844705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119213481 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082067717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109700803 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075997496 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108957683 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092774567 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.128289957 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093305239 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103015537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076617335 seconds)
  done (took 1.788944727 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093490989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114309304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082030254 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107468753 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076511979 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0909022 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108227528 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116800301 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091587658 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103812094 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077660533 seconds)
  done (took 1.767417388 seconds)
done (took 7.084660771 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.053983375 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.637586807 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120511628 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167829587 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344754172 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213172223 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.539881806 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132926571 seconds)
  done (took 12.104344977 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.132559855 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101713883 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084553537 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099286387 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080034784 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100901672 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083872764 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097603584 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081926796 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.0999664 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084446519 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096888445 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083896616 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097008179 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081680841 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096741683 seconds)
  done (took 2.270753448 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119242719 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118424933 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103537328 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108233568 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08564916 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103082625 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088617595 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103052276 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084033514 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101163673 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107973915 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090494576 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104744928 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083412668 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104730294 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091521605 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100708696 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103932653 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088659397 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104465977 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091170039 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102113197 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105918577 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091055348 seconds)
  done (took 3.201057624 seconds)
done (took 18.280424377 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172919273 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086145152 seconds)
  done (took 0.968056695 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104283978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.12075457 seconds)
  done (took 0.939811895 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111618108 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098004005 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137066948 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115079773 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083188538 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097619727 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115582193 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098941271 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081787188 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098660012 seconds)
  done (took 1.752438004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089664145 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103802397 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.09115072 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120941531 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109631209 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085158418 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102925868 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087355152 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105111692 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081303633 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107539976 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118642696 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089312876 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121318231 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087053332 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105557295 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109224028 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087026065 seconds)
  done (took 2.518693857 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084113251 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.086267765 seconds)
  done (took 0.889227663 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087656758 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099121804 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086879505 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103427246 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083269933 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098027508 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081472946 seconds)
  done (took 1.358984594 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.51547711 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261929805 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337864319 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100183319 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.154312618 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.376146555 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137510762 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114680996 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115203782 seconds)
  done (took 2.873287823 seconds)
done (took 12.015640845 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095763645 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.195456103 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.552131275 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120146003 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080094703 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159573165 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.271427294 seconds)
done (took 2.193156854 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356749966 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.126651783 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08966934 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080345112 seconds)
  done (took 1.371360318 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082299517 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103560669 seconds)
  done (took 0.909369895 seconds)
done (took 3.007941181 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081544747 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.133787047 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079389307 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095450019 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079961007 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095399412 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07794545 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079903442 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097532687 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077744332 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096203821 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079509573 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095370813 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077896699 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077478166 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095962559 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077355299 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094760457 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080251003 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094253185 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079927314 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093282991 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078041269 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.196023047 seconds)
  done (took 2.974605501 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102856334 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097634511 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086619065 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102523205 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085621085 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103013721 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102161058 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081312346 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102873948 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083405854 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10103453 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084961014 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09869308 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084579557 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099269043 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101783041 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086581732 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097513695 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082982576 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101267831 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086473952 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097493005 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084972289 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10308029 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100644891 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085188112 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100246824 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081358718 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102877819 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084805121 seconds)
  done (took 3.541387359 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089822568 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076995249 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095524119 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089036967 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.094691329 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081688992 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094690323 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078330254 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096006992 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077678883 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096283347 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.07796525 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094553768 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079520457 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079451747 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101415436 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11367025 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078301855 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077735003 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097236879 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083894316 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094532544 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08113171 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094690857 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077715012 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094426715 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078662138 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077767877 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095799222 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077229703 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099778011 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084414087 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094146394 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09207898 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101333648 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077522308 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103924876 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077520048 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096808397 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07789588 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094185531 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078202123 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078008367 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106822872 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081331131 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096516506 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078180214 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097053157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079051771 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098556422 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077272135 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094247143 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080918544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096233839 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084670799 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077545775 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097256133 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078034635 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096369842 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078205538 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094761992 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0787709 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101685827 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079881347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119016766 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090126513 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095058124 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080657071 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098827166 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086871422 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097334768 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098299366 seconds)
  done (took 7.131420141 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084288704 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105993789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08086496 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096866546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077614285 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078852653 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103213011 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095258696 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081065577 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115051303 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080097455 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096600859 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080473706 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099457019 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079583252 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097387639 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089496132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094021713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079564377 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098601887 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079823019 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102088788 seconds)
  done (took 2.728269809 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227814343 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106270746 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144762343 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116845853 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099599855 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113350416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102811456 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08807095 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103125628 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089770357 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106723027 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0867247 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116034405 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106411983 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089320652 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107489285 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103335756 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091144673 seconds)
  done (took 2.732551818 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095568224 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.0989317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107234172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099223817 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082469022 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101633241 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088398292 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116251639 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101392179 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083250765 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110505021 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084119516 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100915677 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082322162 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101138637 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081768061 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101785227 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081979654 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109686648 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105644033 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089611331 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109668992 seconds)
  done (took 2.868784661 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098725882 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100776693 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113708031 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103412633 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077067389 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097848337 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089142215 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099250002 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107747659 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084177609 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098573621 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080532573 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105799285 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081988803 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104879017 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082630455 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101417527 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082425914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101096416 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077826234 seconds)
  done (took 2.624319941 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126550555 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115803135 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098792859 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127494246 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115956352 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098753199 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127281917 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115500404 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099577838 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130382435 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099582944 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117096715 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127602411 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106414495 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116585525 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12699585 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110574907 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128386725 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116089023 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100410979 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12999252 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116002884 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111900245 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117069402 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098646106 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121000449 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116314589 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107003224 seconds)
  done (took 3.964678446 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082362317 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081316216 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097141207 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078841504 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096234834 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078883935 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096306484 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079545457 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081394931 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097217813 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081902561 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098797552 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082301902 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097948028 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081202797 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098698684 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081960978 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078939364 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096769353 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079133322 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098337277 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082101518 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097898872 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079525328 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078638132 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098747788 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078618039 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096092492 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082118963 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096970835 seconds)
  done (took 3.378935165 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090913504 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105949237 seconds)
  done (took 0.938784693 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080208818 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116303807 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079369217 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103657768 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088648887 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099645263 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092806924 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104873724 seconds)
  done (took 1.506699424 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.107482166 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120665396 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088786902 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112119512 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.101934686 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11929351 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168308176 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088712835 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107150793 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083334568 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120970393 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082493994 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110825391 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105519844 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09195124 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114629007 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080952653 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110107869 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09077234 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10246799 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088161069 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116944217 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093522221 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.1088818 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085112101 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112043943 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11433002 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.095731351 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105785814 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09578397 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.10729447 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076756148 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105239906 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088673084 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09825525 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.101869691 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119166058 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088135083 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110643238 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08836234 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111939001 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094953477 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093746011 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106661521 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096216426 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105939829 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091859568 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095377651 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08344629 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104259463 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078838621 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104365864 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078061237 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110428456 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092794182 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119828937 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085935575 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105632218 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087048618 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10404875 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090661518 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105786309 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1107363 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087061231 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110306789 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101162143 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109066273 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078866276 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094492813 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081394279 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109822796 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109342016 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112347797 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089009011 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106565898 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080476807 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106659807 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089030748 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108155967 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111162023 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088103853 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10811738 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093890787 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103547269 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087206899 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107688754 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085493843 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103335234 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084201976 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12084067 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086665703 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098987209 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083606603 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111615858 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088275296 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104786516 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084423447 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110575499 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077971442 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106165883 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089236157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107792972 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095796681 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108685865 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106974453 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092315313 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112915113 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088933904 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104700194 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080202231 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10679398 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085585811 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109580361 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077440689 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106674309 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087804738 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106552614 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.0938113 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102804307 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.088872797 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11159839 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095458929 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103429525 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07997279 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105470623 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088218536 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110233703 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094548053 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103319096 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079102588 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096324311 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092968104 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105373939 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090176185 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106481185 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088580134 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095747979 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081821947 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106188245 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093353683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105236031 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.1075337 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09461464 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10765308 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087188843 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111120872 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086181876 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101306557 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094150791 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106107748 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07832201 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11138947 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087867543 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103719181 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088975756 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111033711 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088649913 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106732199 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085828693 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106592297 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089132302 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101023697 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089143232 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103714412 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096455487 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106154127 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078938865 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099011183 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089681488 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10275712 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087831498 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101583912 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08841812 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107521574 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082183629 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104971469 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088129718 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118325599 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096141913 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108176966 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109433197 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095589055 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106025158 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091310432 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104585067 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090273841 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106606598 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093671251 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108553541 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08998099 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105598442 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080345457 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10820785 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094167737 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101824782 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081625744 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101953198 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089504313 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113545634 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089295518 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107447477 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086701786 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109118975 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093617808 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106519371 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088396814 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102108487 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088992236 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111501016 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090843719 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108506462 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095394149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108131893 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079463947 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112110008 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085871479 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111082723 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080645918 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103001417 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08499881 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108444982 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086951051 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104833244 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078200994 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112487753 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094811255 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107595187 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083942925 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107237496 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115603297 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08744769 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110490215 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089084486 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108987213 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103129472 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103217401 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089471929 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115649461 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089920568 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097466905 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091656739 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105334566 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083719909 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.105030708 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086937985 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10692593 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091248597 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108816989 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078790774 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10630896 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08792901 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103776023 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079941035 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114255002 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090290548 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107165522 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097968969 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109241605 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089666772 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109138308 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088273207 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108812866 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108711398 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090956233 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10997834 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087703585 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10249448 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090176515 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101691291 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083020474 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0879565 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107799015 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089723232 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110088266 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105146397 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095166882 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107107293 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089778479 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125604499 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104005837 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085034267 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107925401 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092389046 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106047114 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089754656 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097761643 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095639117 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107594811 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095494818 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105898376 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081352373 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107073394 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089342388 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108346383 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090836563 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107879664 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087587727 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106431096 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089574154 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116474653 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085999868 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115123216 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091384047 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110372896 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088862349 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107954304 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086650997 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104332026 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089061802 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109337154 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089875437 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107356897 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109241048 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089849905 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106226695 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088009288 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108384553 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090794915 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109674783 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079110902 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084485459 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103649149 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09001418 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112746217 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108513481 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088398844 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087158795 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110022007 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086629349 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100248031 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093685716 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110599969 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089369619 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117868219 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102717538 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089673268 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117907283 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078727177 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104561938 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083489302 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103935261 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095571092 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108905272 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095598696 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108904929 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085810304 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.10023728 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090901987 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105907042 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080388356 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100690708 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092929824 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104913571 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087877653 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108386636 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092716843 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109273072 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094371368 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106188022 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090441597 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108596612 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082075616 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103332229 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085623553 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107210107 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.091620698 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103414299 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082882039 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106929041 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090438741 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108425162 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088708743 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106310899 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095912958 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107155429 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09031274 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11281004 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079899119 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107793173 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089718272 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107357606 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085968535 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109660248 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092217086 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109770974 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095314307 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10767731 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092464591 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107323437 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08454875 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107710422 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089496574 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108050637 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086136379 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109875649 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096956467 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101700349 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09201411 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108530286 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086974159 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10956836 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091429673 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108388969 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095066451 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108991394 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09050483 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11185615 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08975451 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110380838 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091144343 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107485281 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094935172 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104940167 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115180445 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091255748 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10896783 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089229784 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104995885 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08978857 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107445656 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089147917 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113520387 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091889505 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104331369 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086417941 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10185445 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090249462 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112269801 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09693569 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107942181 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091377803 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099250654 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083571755 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109274705 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086931413 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106999732 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093246429 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112518941 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090445366 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105875356 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088601946 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113716368 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094610038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.11138828 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086133897 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111866213 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.091442812 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108847 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087944963 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10788993 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091280719 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111127223 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08871041 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105590299 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11755136 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0956191 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109573226 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089547313 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110762184 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090322575 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099758225 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091949242 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108200985 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09318882 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109351831 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090029751 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119712098 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085243961 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108094644 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095414815 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107813701 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113934195 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082207263 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108683052 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09235939 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109889236 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081807869 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085448831 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.106709307 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090107584 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105145268 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081216483 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12013941 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113766335 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091819685 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106844188 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089962763 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100848242 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081549796 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086080692 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112208963 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088621786 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118087942 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104491404 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087031506 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100051182 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090590986 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109555985 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093783281 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101742395 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081671905 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086108421 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.1120035 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116201031 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089549389 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108431245 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092447995 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108873704 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085029816 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112955441 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08366201 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110426232 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102442473 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109945633 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093609796 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112579895 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096383962 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.111537982 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081701447 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110794136 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091609158 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110793221 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.09182251 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.11234967 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125672623 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092428711 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105081095 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089740097 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.1091948 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087109024 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116790872 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092619077 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110567746 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093073453 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108064626 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092689548 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1169644 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092677739 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111216458 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109856451 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090422966 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090105074 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107270008 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08830656 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.113412607 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091585439 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110140453 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092574873 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107214927 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120474126 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098028919 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111403234 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082934461 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105075709 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087866283 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.1000677 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.093164737 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083317522 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.108371195 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087995857 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10907726 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093514355 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112313141 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089978758 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.112865566 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089106185 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101188187 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093588051 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111377755 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111501661 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083703133 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090291254 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113977058 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113757249 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097531086 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107913 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092024735 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107875678 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094946698 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099862023 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094491577 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107582522 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089436553 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104929988 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090948512 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111265226 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093048473 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11130349 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094729014 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109536453 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.0961163 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112422093 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084333699 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102280017 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094783914 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102994725 seconds)
  done (took 59.839702927 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156978171 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08977185 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100448518 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083336304 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128312638 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083535892 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100177864 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083669671 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102000938 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097020359 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101801142 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080959215 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124697392 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13070308 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126738798 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116680368 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08300017 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10185245 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082864835 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101568072 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104148463 seconds)
  done (took 2.971202798 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109237397 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120750659 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118517428 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105334961 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11426712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119554212 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099135902 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12090769 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124118578 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113237256 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105267869 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120020071 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.113567633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095801957 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114523466 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116474468 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105150393 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113358007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121913766 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099115886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116943338 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118771499 seconds)
  done (took 3.280500141 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099467572 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.090184475 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115969184 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083475948 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10946355 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.084153781 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.114800212 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.086743802 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.114268522 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090944548 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107200742 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090953965 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114981477 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.084519944 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.108087392 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.087174406 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113766421 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091078375 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110781664 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084741913 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.130223077 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104169975 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.085535658 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.088221912 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119466534 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.091314666 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.110260558 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090153816 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.107048907 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090639918 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.105823563 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092173946 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11402366 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087748396 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107386969 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.090404686 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109689995 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.084298136 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.106163545 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093570916 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104478234 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.091984354 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116517678 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.087587473 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.105484778 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09307949 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109833984 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.085305094 seconds)
  done (took 5.578744702 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128267689 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162172249 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099447359 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15960356 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126889017 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123875918 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092111424 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152351865 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108012312 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.091195703 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128729599 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125665939 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092430574 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.119722783 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09731787 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112570909 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112093204 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096907051 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121465666 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090973352 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.120068474 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114310744 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105721925 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123909377 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115507477 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09085037 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108993537 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.100139544 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125403445 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117550456 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096727892 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119065278 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131267918 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.117905073 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094815361 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113163399 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109726199 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112675532 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11289363 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.089715811 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112948634 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.101585287 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116365205 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127362504 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092765477 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112875484 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096999006 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.112955244 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12690091 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.094305897 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120123815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125897509 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097099079 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111622841 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097613723 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12975088 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.113112237 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089955697 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.115270578 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121796849 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094568898 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.117416761 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110472714 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.117683423 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119097027 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124906912 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094305907 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115445975 seconds)
  done (took 8.619691011 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100314903 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.135273635 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128254013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109315789 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11722624 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115559175 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097019262 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.1157632 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097114864 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123608161 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115402444 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167122414 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.0908077 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121560114 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096571399 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116816691 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11550747 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09676424 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116129797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0972754 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116558405 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128321133 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097205887 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127611507 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130593317 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108872484 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097561893 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116886352 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108569249 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11736101 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129434527 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115881307 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097879962 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128133818 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130750288 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097030021 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106962674 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096897048 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116518585 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116534933 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090647052 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128354185 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097232162 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110672958 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116176618 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09771776 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12803005 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130660387 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122083258 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105450672 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117209999 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12810541 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097843118 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116500951 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127315585 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136017695 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109483423 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128827212 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11540786 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10888043 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129874304 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137069389 seconds)
  done (took 7.944471596 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090584117 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086875989 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105788718 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085273657 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107105124 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08638029 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107324707 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.088866738 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087153028 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10776487 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087045571 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105513984 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085839546 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107155209 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085205697 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104300276 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085852061 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08504052 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108194585 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085823492 seconds)
  done (took 2.700398566 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099667058 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129524407 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089098443 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117187322 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090994823 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11678054 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109432534 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092161183 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108098398 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092406166 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120953878 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101270488 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110042288 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115603031 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10258392 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115883565 seconds)
  done (took 2.523045805 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.113435818 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123772138 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.134527225 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09409387 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106484355 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.096395104 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108080503 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.084365262 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103724113 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.097722512 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.11524494 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.100551009 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10873853 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086842547 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109546471 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.095020966 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104383484 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092918579 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107886801 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.114639754 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114847342 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111877461 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09087851 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111353252 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.092453116 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114574804 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095868683 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108301091 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086837495 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109595027 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091773151 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117864826 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085480664 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113787211 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086263672 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106096196 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088115749 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109819037 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0938524 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110037992 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086032623 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112495072 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088346101 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111771095 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084067985 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110722271 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084122392 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116380046 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10925355 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.093318208 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108049209 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09759715 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115446973 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10181583 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11937319 seconds)
  done (took 6.487745404 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106815872 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112087927 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093927573 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106247209 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092297085 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.117129775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093445788 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11151274 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090871307 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106012717 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091151754 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113161417 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090618249 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113101829 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090980918 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112472954 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083852075 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110096313 seconds)
  done (took 2.648463636 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098229133 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108510928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096725813 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108385469 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08895193 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089760498 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105879461 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086046052 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10693499 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088524681 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108644 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091036937 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107196444 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091525726 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108734844 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088953393 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110339534 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088000437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109266962 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085662318 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110683771 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087568296 seconds)
  done (took 2.97933208 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110960437 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.142525683 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10313908 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.153994117 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113789367 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.093015283 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.123831576 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092610192 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132414747 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112191998 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.093528358 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.111395573 seconds)
  done (took 2.203378274 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11806867 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149215091 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08603142 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112623948 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122580193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095209882 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114270203 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094009292 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127247673 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1290801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094290398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12784015 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126969413 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125946226 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102296053 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123578895 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113994691 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095178804 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109821743 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1373014 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095401014 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12758317 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113401482 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095117716 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114419775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125992588 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10732964 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128495504 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115335841 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107443057 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125327931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114701423 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106991464 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130155968 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112209735 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12749815 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095273708 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136848592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122762304 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105422884 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113886154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122410667 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107963008 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124182699 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127026512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094479489 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123006661 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114751455 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095367958 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144402775 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123230542 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125708525 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102596866 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128404422 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127885949 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142913975 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130129884 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125986632 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103740449 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129736112 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126598093 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122106177 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10761144 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128949805 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122114464 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126811344 seconds)
  done (took 8.574805789 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134207521 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109087686 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093384021 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130232714 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127673527 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115124474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09611537 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115211796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095697153 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111452106 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163872188 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114496018 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107058826 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126245868 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115318991 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095110771 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115545055 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126857509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092056897 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144925004 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115541501 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126760953 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106766198 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127353988 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129578696 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122875262 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095128715 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114954929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095030193 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115984011 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122141578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095529513 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127332085 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107238222 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106582687 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115647536 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094654436 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124732145 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114867964 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10132916 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127517783 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137140326 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115067493 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095013034 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129570045 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115939791 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096673437 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111936304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094530226 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11242936 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130276061 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129545496 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10951237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12781283 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114637431 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095526838 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115897114 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115291652 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095921917 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123061141 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126634739 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095805772 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144022985 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115872915 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095528336 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128236327 seconds)
  done (took 8.413806596 seconds)
done (took 159.876094375 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.112330161 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147502195 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.104990369 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174304568 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089222028 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14564121 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122526436 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126724615 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088379615 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110143735 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089003572 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.113778909 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155213073 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.110717735 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089637869 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113834507 seconds)
  done (took 2.715442865 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190334425 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.293354227 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109098794 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116162329 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096353936 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113862446 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093759914 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117967794 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090733712 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12381711 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111925011 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093737375 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123567132 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093132089 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111232908 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092174752 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123467872 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091355489 seconds)
  done (took 3.01393062 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119125762 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1626817 seconds)
  done (took 1.114493687 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130773048 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1913699 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311761358 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166402371 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120781299 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13402542 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16913119 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129217562 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199685849 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13335978 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111737728 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11779295 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142042744 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102840811 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.120818127 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096180077 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145661934 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.119183398 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098933839 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117809552 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118362318 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.119148499 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122296525 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099889827 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189677185 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132784569 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.097147198 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.120956363 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117906506 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099518048 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123503474 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132183634 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110848625 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.195766575 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102342536 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.190963735 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104691401 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117737966 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097388807 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.118460267 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120904555 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101316281 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133555953 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095799906 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11996291 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125756706 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.098133757 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118384849 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104214462 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127904821 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125103026 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102721907 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.190590202 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105943543 seconds)
  done (took 7.873025345 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.855012257 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.168493691 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117584889 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.965041809 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148928713 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131795566 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.854999509 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117489409 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.27063538 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.10837986 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136869299 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131853422 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23911472 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.263893407 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15739072 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.346120059 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.739599007 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131566859 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125744691 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161081087 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124016953 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145626615 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115417943 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.420313877 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119094847 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11516288 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101326058 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128785995 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170028846 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115821687 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098973169 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190140504 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.299435895 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.188975601 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118394606 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09292139 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116303939 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.179321519 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280669742 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228171964 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181032985 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091090044 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114527884 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108189983 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136752459 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090317207 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.196757106 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18401765 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182325745 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121587399 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128455531 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103785725 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12757453 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.171530281 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.114211111 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.345097425 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349094607 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095142081 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124992014 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113996561 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280270754 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.1160601 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212639829 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143303044 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226247301 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094064819 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819541895 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175489015 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115941203 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124644039 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103631071 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121542604 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105726855 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174876067 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.385870503 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132689993 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120090607 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094131023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235518486 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095174742 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114809539 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175373157 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095396579 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127050182 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132635519 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107915719 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.203537518 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.260381837 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131972721 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102390537 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121877081 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128134281 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096738714 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.223809035 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232458985 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.167231863 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.244365251 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128841598 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177026528 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175484339 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128281041 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181965787 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124200327 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113054032 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12952076 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226680875 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153052849 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.094831571 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121901796 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122384119 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15402568 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098743063 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123604306 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180264709 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45165703 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.197335353 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092344169 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119076201 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103326475 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172227773 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124426778 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271212559 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104496175 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.199532557 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103146439 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11373747 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103460672 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.197217099 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109118043 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126181091 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129885519 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102671911 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28903358 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2086621 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132643943 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246138815 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184027848 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104122197 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205166902 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10442239 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201380946 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105088075 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127991797 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095773903 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827919214 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130400904 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102865659 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123111023 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198236959 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09395954 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.119510065 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093521654 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114027246 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81118382 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098352644 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091468215 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.119272344 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125484778 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103534073 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123520038 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099183735 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193890034 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243403371 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108478159 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125002441 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094236036 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.192545748 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096818208 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116302981 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095844909 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094302429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127093335 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121168657 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096665963 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183890587 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.192806439 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229437916 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.517976922 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116909299 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095391008 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244244573 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09386655 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317191218 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124690504 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237796 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178267012 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.113312382 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32567546 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.201222959 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198879529 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097976088 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.181149193 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115868429 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121937149 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172795208 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094806111 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125629952 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169725216 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134894945 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131422304 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.141697555 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117280004 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238427714 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113599474 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.182434787 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096169799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130354807 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318953442 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093953238 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138892904 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.171990679 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121819694 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09399228 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.625034234 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094472813 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128711972 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126957844 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233826698 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.17815069 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123699111 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103711561 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129221558 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172708014 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.220524929 seconds)
  done (took 46.152739347 seconds)
done (took 61.695042534 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314768885 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279925597 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.316599892 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206276968 seconds)
  done (took 2.055491747 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.19091866 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162290924 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.132913276 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116885206 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.163815126 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.093858197 seconds)
  done (took 1.719375813 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.50062077 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.389044969 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.354944305 seconds)
  done (took 2.108103769 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266913386 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.29593304 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.371401151 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.467611281 seconds)
  done (took 2.373342849 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215518913 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132699384 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.1062691 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.146944508 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.180485822 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.185918356 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151711729 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159706337 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136829395 seconds)
  done (took 2.327741829 seconds)
done (took 11.44753471 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.175983371 seconds)
    (2/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.295966306 seconds)
    (3/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.247350529 seconds)
    (4/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.280556805 seconds)
    (5/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.180378351 seconds)
    (6/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.245129264 seconds)
    (7/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.231617598 seconds)
    (8/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.284474633 seconds)
    (9/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.184899288 seconds)
    (10/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.158415844 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.137317241 seconds)
    (12/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11173695 seconds)
    (13/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.102075837 seconds)
    (14/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.194147611 seconds)
    (15/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124241772 seconds)
    (16/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096008003 seconds)
    (17/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.133793615 seconds)
    (18/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.210421563 seconds)
    (19/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.268347887 seconds)
    (20/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160216419 seconds)
    (21/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.258053042 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.21373868 seconds)
    (23/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.212843597 seconds)
    (24/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.221733158 seconds)
    (25/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.166485171 seconds)
    (26/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.269627229 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.169573989 seconds)
    (28/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.108964921 seconds)
    (29/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.198347876 seconds)
    (30/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.238276955 seconds)
    (31/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.145006794 seconds)
    (32/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.26227239 seconds)
    (33/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131174694 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.127902491 seconds)
    (35/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.156349465 seconds)
    (36/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.133060582 seconds)
    (37/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.139288091 seconds)
    (38/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109774136 seconds)
    (39/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.244726982 seconds)
    (40/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22699042 seconds)
    (41/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101624251 seconds)
    (42/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.148066334 seconds)
    (43/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.119078894 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133712085 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.122613788 seconds)
    (46/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.166485615 seconds)
    (47/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.103723653 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098671021 seconds)
    (49/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.219677155 seconds)
    (50/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.16939683 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122680539 seconds)
    (52/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17671332 seconds)
    (53/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.152873959 seconds)
    (54/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.118582984 seconds)
    (55/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.189514666 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.151987534 seconds)
    (57/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.12059272 seconds)
    (58/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.181871576 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100869143 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.15175164 seconds)
    (61/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080756311 seconds)
    (62/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.159612469 seconds)
    (63/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.152833035 seconds)
    (64/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089986537 seconds)
    (65/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.163726656 seconds)
    (66/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096588952 seconds)
    (67/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119801069 seconds)
    (68/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08101014 seconds)
    (69/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.161799376 seconds)
    (70/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.158819665 seconds)
    (71/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.179302562 seconds)
    (72/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.124397704 seconds)
    (73/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.134680573 seconds)
    (74/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094273033 seconds)
    (75/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143080444 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100184238 seconds)
    (77/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.200688492 seconds)
    (78/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.102784162 seconds)
    (79/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.107762038 seconds)
    (80/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123365022 seconds)
    (81/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.111783 seconds)
    (82/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.11705741 seconds)
    (83/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.090608942 seconds)
    (84/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.194717407 seconds)
    (85/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.214207065 seconds)
    (86/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.151657536 seconds)
    (87/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.105468368 seconds)
    (88/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202599508 seconds)
    (89/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.20187313 seconds)
    (90/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.148253613 seconds)
    (91/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.090313809 seconds)
    (92/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133299469 seconds)
    (93/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.147229311 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.131826182 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100296989 seconds)
    (96/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.103143899 seconds)
    (97/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147872906 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100735511 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.13201752 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.107604711 seconds)
    (101/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.114086407 seconds)
    (102/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.198370665 seconds)
    (103/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101599054 seconds)
    (104/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.198106725 seconds)
    (105/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.088121579 seconds)
    (106/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.209656328 seconds)
    (107/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122587194 seconds)
    (108/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097392368 seconds)
    (109/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.122721831 seconds)
    (110/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100685173 seconds)
    (111/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136639508 seconds)
    (112/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.081039398 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115637659 seconds)
    (114/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.123433985 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.138723429 seconds)
    (116/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100087385 seconds)
    (117/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.131464618 seconds)
    (118/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097957714 seconds)
    (119/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.104936699 seconds)
    (120/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.13531595 seconds)
    (121/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.105387187 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10748796 seconds)
    (123/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.10483424 seconds)
    (124/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.208412761 seconds)
    (125/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.194812892 seconds)
    (126/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08109345 seconds)
    (127/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121645396 seconds)
    (128/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.098311334 seconds)
    (129/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122867413 seconds)
    (130/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.081588507 seconds)
    (131/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100094854 seconds)
    (132/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.162005499 seconds)
    (133/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.102476012 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081365274 seconds)
    (135/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104106644 seconds)
    (136/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.135489582 seconds)
    (137/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.134389671 seconds)
    (138/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.081896135 seconds)
    (139/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116429868 seconds)
    (140/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081841229 seconds)
    (141/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.16468735 seconds)
    (142/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081685193 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119063902 seconds)
    (144/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081754498 seconds)
    (145/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130160574 seconds)
    (146/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082564108 seconds)
    (147/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119077618 seconds)
    (148/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112169094 seconds)
    (149/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.129712744 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109125485 seconds)
    (151/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.10427838 seconds)
    (152/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.211640625 seconds)
    (153/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082931337 seconds)
    (154/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.104082742 seconds)
    (155/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.132334117 seconds)
    (156/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119853001 seconds)
    (157/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.081599923 seconds)
    (158/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123732269 seconds)
    (159/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082132484 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132619305 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.108343939 seconds)
    (162/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104132261 seconds)
    (163/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081058725 seconds)
    (164/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.102660159 seconds)
    (165/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.092333098 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122529929 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102034554 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119205367 seconds)
    (169/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.081913426 seconds)
    (170/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080846495 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123897183 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122720135 seconds)
    (173/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082280617 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.123051409 seconds)
    (175/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174820529 seconds)
    (176/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.105352132 seconds)
    (177/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.089710228 seconds)
    (178/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129866397 seconds)
    (179/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.090249811 seconds)
    (180/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.121027515 seconds)
    (181/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082718103 seconds)
    (182/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119169954 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081546124 seconds)
    (184/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119221131 seconds)
    (185/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.098123882 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123054527 seconds)
    (187/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082275271 seconds)
    (188/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080459663 seconds)
    (189/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.155183357 seconds)
    (190/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116570253 seconds)
    (191/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111503615 seconds)
    (192/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.080315226 seconds)
    (193/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196631392 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120107554 seconds)
    (195/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106294581 seconds)
    (196/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112832906 seconds)
    (197/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.12142139 seconds)
    (198/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.124529418 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.109091246 seconds)
    (200/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.131761719 seconds)
    (201/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081310199 seconds)
    (202/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.113604072 seconds)
    (203/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100328675 seconds)
    (204/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.117014755 seconds)
    (205/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096197743 seconds)
    (206/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103861622 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094262056 seconds)
    (208/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127907744 seconds)
    (209/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08154354 seconds)
    (210/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.088239634 seconds)
    (211/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.105840716 seconds)
    (212/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.145723949 seconds)
    (213/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082590767 seconds)
    (214/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082344728 seconds)
    (215/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.144501108 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131505226 seconds)
    (217/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.092112189 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.123636548 seconds)
    (219/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082576709 seconds)
    (220/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093202386 seconds)
    (221/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.12043854 seconds)
    (222/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081776692 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.104398991 seconds)
    (224/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083561034 seconds)
  done (took 31.016390271 seconds)
done (took 31.884210888 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.418156766 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.136086423 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.129113038 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105950106 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149223792 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.108489553 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129911639 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10831161 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.128917069 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094734573 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119985123 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128979327 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106493807 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.147347008 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.107268937 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121920163 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097814673 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130098427 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105481276 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132652276 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.149336906 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09833836 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126768207 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097515105 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149162931 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097489783 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.129511351 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105635574 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128396085 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096308394 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.131863616 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120505599 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106987499 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.131947343 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095865112 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.120973855 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096274009 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111121983 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096723637 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.12249354 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104391439 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120521392 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106911831 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.122416183 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099827944 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119299013 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095028029 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132098148 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094984927 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.130706539 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097659999 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.134502446 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.118571296 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.096382122 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118154852 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09821214 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.129195924 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096270044 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129111291 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096506228 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121201056 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096612199 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123406253 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096523587 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120989772 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098598907 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121801279 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099690252 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118730715 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098814449 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117728749 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098715584 seconds)
done (took 9.483661862 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105235019 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17584314 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152038142 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.12921907 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.149892727 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135216331 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10947692 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.1453291 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.129131489 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120510146 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.147950153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142585205 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.134299627 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127772245 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.135517934 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100538356 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.127600957 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108706363 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.15704491 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14508432 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153071913 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104395981 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150032256 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142245303 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103963125 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.155985597 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.10535148 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125163942 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103045946 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.135111991 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143608086 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103801383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128142351 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116046692 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.134821831 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125770037 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112601241 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.124404829 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101287142 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.12447096 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137774399 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116481928 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.124591354 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.112309185 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12422806 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104791541 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.129346346 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126854679 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105700007 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121553107 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105529791 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.149108351 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126158749 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104123861 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125978373 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.105491606 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.127014405 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.105078993 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130099999 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127309503 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.102428832 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126405779 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105838844 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145473684 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.127294295 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104349641 seconds)
  done (took 9.196912998 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124488458 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159260829 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136199616 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112899109 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1318504 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092993132 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.117858528 seconds)
  done (took 1.79399396 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100912057 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148995346 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129030151 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153117422 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.14121441 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133610383 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13722859 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094767335 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.144531352 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.130156648 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12458252 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176298243 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120177144 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.107746016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.156492362 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.119101237 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132736587 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119555861 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.10381986 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153241314 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125283022 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.119504442 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133505652 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096358236 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141970185 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097313461 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189544813 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131888425 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095718551 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126819794 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1013285 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.215223885 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119597623 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130338898 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093973989 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150196263 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.117894117 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127077375 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.145729966 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10117973 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.142333727 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.102599754 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128742086 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12559448 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103514352 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.135315912 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.108084655 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.128662471 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.10230014 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149380334 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130552263 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119354757 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121976523 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100998238 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130391591 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102797577 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13454975 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.10120908 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.14951192 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127770668 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123772949 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148129821 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.142585188 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.124270081 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13826247 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.118301013 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144197636 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124785164 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104525708 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127871254 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.124137527 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.124853168 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.130767886 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.11280475 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128965122 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.125371123 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.148628771 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100694349 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133101254 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.100131146 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123975217 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096555426 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136992182 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100165077 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123697886 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137386999 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108882501 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.126205386 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.101821265 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.143180147 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.125148493 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108771441 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132022684 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.10066444 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136747624 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150477016 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.10714364 seconds)
  done (took 13.138730159 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.101994188 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.09753032 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.128404925 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122409914 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098822991 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097447175 seconds)
  done (took 1.578572592 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.13319292 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127015215 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.114395634 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.130940552 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.18351252 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.148585936 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.127160251 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131032871 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.145201676 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114954129 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.148058275 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.149862165 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.123982758 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.132425309 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.126371605 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.131578158 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.151448714 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10178787 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.137495237 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101390209 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139266117 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.13168171 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102823843 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.145270611 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.10719077 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.131718186 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130776768 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.114745986 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137046016 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107300458 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.132515501 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.13010394 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.105329327 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131280317 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.127243923 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.129358789 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124394923 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108976317 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12931447 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106985432 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.151231911 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101342933 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.138889904 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.134271651 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106899168 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129665779 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.134025384 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10666055 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.15213655 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.108488321 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.136793257 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.130012961 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.107428467 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.135122487 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.105473629 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131504418 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.133194891 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127008342 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.13277378 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12948606 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103964548 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.132018032 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108044545 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.134394914 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104232632 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.134666723 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.129510846 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10615296 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126674484 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.105875469 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.134382931 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127774848 seconds)
  done (took 10.048235742 seconds)
done (took 36.670051934 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.114356779 seconds)
  done (took 2.039774692 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.883128614 seconds)
  done (took 1.810836795 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.841652951 seconds)
  done (took 18.803675701 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.535229434 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.622394506 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991463133 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17115961 seconds)
  done (took 3.247351421 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.985267162 seconds)
  done (took 1.932507928 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.326181831 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.271169395 seconds)
  done (took 1.528424183 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.85230042 seconds)
  done (took 1.789840378 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.406212927 seconds)
  done (took 3.348183563 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368162871 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.208378713 seconds)
  done (took 1.526938907 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.600510066 seconds)
  done (took 1.544430299 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.098505749 seconds)
  done (took 37.046295353 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.24292139 seconds)
  done (took 1.206677087 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312859135 seconds)
  done (took 1.260902102 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.645385526 seconds)
  done (took 4.593427303 seconds)
done (took 82.610908529 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112341445 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135064449 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11121539 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131974603 seconds)
  done (took 1.431722526 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.115760005 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128890556 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109250208 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129758387 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113370872 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.129661719 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103379577 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.136728794 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.104380082 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132734032 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.129225397 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10643026 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130920629 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.104240548 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.127681599 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106318011 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132820812 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.105062281 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130113295 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105975032 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129642517 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130726876 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.108767062 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129881361 seconds)
  done (took 3.832579855 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112023984 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101181611 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129657259 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100816861 seconds)
  done (took 1.397277035 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.11652033 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144968412 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118675157 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136754427 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144913276 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118606887 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126763563 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101329446 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.128514711 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112788066 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127388042 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121385642 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145959487 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123109205 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.115035808 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119159818 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.098406375 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144574846 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.11209167 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.139055154 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100402998 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.137307608 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.110087572 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140746025 seconds)
  done (took 3.942468173 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.181736994 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.140135513 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.149919964 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175066862 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.128391064 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.12576407 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.126375086 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133850505 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.130062217 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.101601463 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.126254809 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157322837 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13260108 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127724345 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100934392 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.132141258 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107527505 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130983087 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.103312881 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.141219657 seconds)
  done (took 3.613309904 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.112359118 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12545377 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097490246 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12495428 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108609206 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128501887 seconds)
  done (took 1.65804618 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100677282 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.096087431 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.121907085 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095329475 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.126752676 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096279061 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.119184508 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.096513966 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095815421 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122622346 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095746249 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.12080306 seconds)
  done (took 2.244118865 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.228751408 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.125723449 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127220749 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.10268359 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130819815 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.099597828 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141194965 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099752766 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.183797097 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127198836 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116313885 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.181012932 seconds)
  done (took 2.62317545 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224726639 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106256429 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277614365 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383877279 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169855034 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150934822 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.312849722 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178022819 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197771996 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120956764 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23595608 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16614047 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138757422 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188689541 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149814226 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.194388227 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185953984 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21091772 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157392709 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216133668 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173617555 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177671741 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19258278 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162635988 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147462347 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167722114 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101810042 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137998171 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183627666 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179862076 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183209294 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157979863 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148067306 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212666533 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223376586 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214804993 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314969844 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14316178 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199299216 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.196350554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252835017 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150920293 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20354952 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164482377 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141940046 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191806239 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166113073 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189312532 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141423395 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123951844 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218627085 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185933869 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191638399 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119979483 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334739017 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1544252 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.128849276 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189249122 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225160595 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20156952 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177085717 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105590703 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220583546 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191686539 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190398118 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.127741773 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177262613 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1339374 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186328702 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20510374 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187271689 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175167332 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21896931 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141595845 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172412367 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153350922 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162065836 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189447857 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170010114 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12956882 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132559819 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146077388 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136678393 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168405516 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134958035 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214850359 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144940914 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.19390396 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216521553 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168904057 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170982347 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173839873 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17655733 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156606046 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10106809 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155055133 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.172942309 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166782679 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139881438 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140629589 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15487976 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135030867 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162296495 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10670139 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169379025 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.143462278 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176268931 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172846997 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.110569498 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174812762 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160043857 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.168701423 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180993005 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199266871 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14174515 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115022103 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20423325 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167217484 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145370581 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187215688 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19717767 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174361477 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144735642 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179498 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206632397 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15228559 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198441913 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123710041 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144255826 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.160054803 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168804723 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167318446 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165883042 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111030489 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160837378 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202755446 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.136858058 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118137309 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182812959 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135757856 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136230314 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12562703 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145435033 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.15274449 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159099852 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.122036895 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163958468 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16988816 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163495528 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168420456 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150822185 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204010084 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141693885 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.14341385 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156537639 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.126323671 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190680878 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194784463 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11115044 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222053522 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.178318914 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207905227 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173523591 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138342873 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191497365 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112365497 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128174659 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176023246 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169323843 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144398972 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21998234 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203781153 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176158579 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163379069 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158954927 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176619812 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186541128 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164175483 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.127502931 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171686351 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175053267 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.13209116 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105357504 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136256177 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149470069 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113173221 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141905624 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1910251 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173805569 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199462343 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170853368 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148718056 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194173092 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.135438728 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174125939 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182967592 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120496216 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.221574651 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191796237 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176329619 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125170257 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180889883 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.130221482 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107049869 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143341216 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17705179 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141301218 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116510273 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153509103 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193571856 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184410221 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159243941 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239595786 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178808421 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205804509 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102819794 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.175353118 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181587271 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167996248 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.172078389 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140399433 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.172674631 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189974729 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154216197 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203212558 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172165532 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178879046 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210132656 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168785186 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140593656 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158735222 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177726358 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121293914 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173941529 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156529772 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142919634 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135300012 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.146529075 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135495353 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191041485 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153180365 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191360966 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.167777452 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184215936 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135345853 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125050687 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173709143 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156429361 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.098762272 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180721864 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228034724 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152867734 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14114513 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21391276 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112348776 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.328903663 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198255022 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223735075 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119719069 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152399707 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172514347 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17232596 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173696391 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193464991 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152946746 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191739058 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141868668 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.154642959 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144698717 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156853719 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132860013 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.161162633 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143315412 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163597202 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124358308 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223348406 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125691895 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169845043 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173634819 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.158049695 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.165213578 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121783804 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21105012 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168616626 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187953084 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166467071 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177596711 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197166585 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134300103 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109440632 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137825147 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194004166 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141564342 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141094204 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.221946824 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209578266 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168833183 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180614674 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14726399 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.105087228 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170416052 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158657066 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210174316 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151021415 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145865757 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203459686 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160698375 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112432162 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174894221 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296068635 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154479769 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18515775 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.128405991 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284664817 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110797925 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1416074 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171456247 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182628418 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.113775116 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.194465506 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175634464 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155408192 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171194689 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12042169 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227431806 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21901294 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181939111 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185895271 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.153268463 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168904125 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173547218 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187772603 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124297199 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.154595147 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174028749 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194039623 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196575512 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14247686 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173586325 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172395258 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142277143 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213469798 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116037915 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198316088 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141214728 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176815311 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149575856 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105554449 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168965974 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195498628 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143088508 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186655905 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168264408 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140661477 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108552278 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161776089 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169542346 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152786443 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.111863255 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187601828 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138685377 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172944415 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191289672 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111939482 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166191879 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156178179 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11296679 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1519628 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153783293 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115344424 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.182367647 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191824121 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141496545 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187895869 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181890716 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176439137 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170229655 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154567829 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643347692 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.138150302 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193983485 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157237999 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198660912 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158104618 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147973818 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173017454 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160057977 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179401669 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160289634 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22918296 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176889635 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168397459 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112813088 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155046159 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15504907 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.112323334 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163126805 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172411969 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15089468 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.118022036 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167805446 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156694078 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.155364714 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120605974 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225628216 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130333964 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191698938 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195032999 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149905745 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176306556 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185459669 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140822043 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.172999028 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183378628 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152129747 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132316363 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141511586 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145052573 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190161781 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.106859846 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171244677 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170532745 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171935417 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1728553 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115912402 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171439337 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153458707 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170977952 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107530034 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165349179 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16877077 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141274328 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109320829 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167485092 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169381725 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169411237 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107996273 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.183402468 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193651906 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105224807 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145051863 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292803806 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167195063 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204587675 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163422318 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14668286 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125229441 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163981881 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163884232 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171144761 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138148986 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114467222 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141810175 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.191964157 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.165904945 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139046921 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195356081 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171056294 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199066896 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.155798596 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274354456 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148496595 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137562463 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.140815962 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.138241221 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122334457 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145495045 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156351537 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201223126 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190051265 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163737098 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125961529 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138983639 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.13444174 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115553997 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1742268 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164658578 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169392841 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152621034 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101117909 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154027212 seconds)
  done (took 81.359404641 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171227347 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.167344454 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.178223065 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226765642 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191903499 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285460558 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232590594 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257694235 seconds)
  done (took 2.756572103 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.115681182 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.146013419 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152089326 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134081042 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133585215 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.362030654 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145605361 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107186842 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195926354 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.147256634 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132187374 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.635998797 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102664874 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.137171606 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122807954 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132858847 seconds)
  done (took 3.945865881 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.416900708 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552539468 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.168616819 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.258488158 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238826686 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.164621003 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.764806663 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.195472775 seconds)
  done (took 12.800711902 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.142945799 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.153610996 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.273092785 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.185336311 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171605276 seconds)
  done (took 1.977347297 seconds)
done (took 124.525583859 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109141408 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.134799301 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106430438 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.136258362 seconds)
  done (took 1.524384877 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.123844489 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090013436 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.124550476 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089462081 seconds)
  done (took 1.473930904 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.507981779 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08934021 seconds)
  done (took 1.683911336 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134938093 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147631992 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.128344872 seconds)
  done (took 1.471997922 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.1174601 seconds)
  done (took 1.173391807 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120301908 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112164627 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.153810538 seconds)
  done (took 1.44233887 seconds)
done (took 9.821570592 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13739908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.433711241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395713924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149024906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732325731 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389205305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053482005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164989047 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175165478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101129595 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147623173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681340428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041893424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.35048677 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025743293 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.349605445 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.71335347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102518413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1370135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102198407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.032941585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099931236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130794677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10301973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71084056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405928545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129576898 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.389959164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10062226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132916219 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.391318094 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128385662 seconds)
  done (took 17.181905082 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14888412 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191456973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137665724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103174791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133199217 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103130686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138344458 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.114116792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191308633 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129718657 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121522844 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129195417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105979459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13003111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122493076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.129393792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103141391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.131998051 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107920801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131432015 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.12099187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128402722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102475411 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13213051 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100919738 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.143126872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101786777 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142158855 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100042585 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135649644 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133833633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102592788 seconds)
  done (took 5.098122612 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154781433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201585135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138047553 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13731317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180059704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131251802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216967138 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13849894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195126779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130361447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120941717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13003625 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167716308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102582364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.153252803 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10145238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133136516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.104217968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137546814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103101487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150717843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100287914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131496463 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102734272 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12984064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115354348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130357565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140889792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.102351122 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134463814 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108483937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129647807 seconds)
  done (took 5.41878051 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112853604 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137207551 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11979675 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147721085 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104370169 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.137215183 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.110049943 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.132110484 seconds)
  done (took 2.057851837 seconds)
done (took 30.812635602 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127848406 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143169854 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116307676 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.138855479 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137217399 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.127488773 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.113688347 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09948008 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.141313757 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117504885 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.13037582 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102028282 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.145567291 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10637566 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.146343575 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.111350126 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.152093725 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.117254122 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.131701566 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.112291819 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.131153349 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.123000486 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.136546889 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10236874 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.156490718 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132622 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.120430482 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134861179 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10727163 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.103093108 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.14797123 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106835612 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.131506085 seconds)
  done (took 5.202662965 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.135359716 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.177367519 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.098886893 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129125396 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.171806102 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.100340401 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.158730436 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.100192213 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128538942 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100910644 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098533491 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.157619657 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.163120114 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.133687372 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.179066645 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.166086252 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.127587981 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.169643561 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.152998112 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.141099244 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.159759171 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098525046 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.163952342 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.171713708 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099136914 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.127879592 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.145056556 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.160627844 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.173314317 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.134032255 seconds)
  done (took 5.294843378 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.115708001 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147633702 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.129908102 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204848575 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174760786 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.117064926 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144289853 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.121427339 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.160819785 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.10255387 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143753741 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.164020246 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120166312 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.142595913 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108768042 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14640821 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.122805985 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.13343994 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109634857 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151570916 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.121002125 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145475079 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117886577 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14238768 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.102020443 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141669599 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.107700778 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.146693416 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.13836595 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112818317 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134550424 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.107322517 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134465559 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113294924 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.136053922 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.111211909 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15394267 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112219761 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.146146862 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.167164154 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113396027 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.135614578 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125451384 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.180478112 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103987663 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.139165014 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113889265 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.142644744 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101230466 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151786212 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117124672 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.132647735 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147472248 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102608284 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130668883 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111102039 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132317452 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.106051359 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.140300492 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.107999997 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152499295 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.112141005 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139912504 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104932345 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.141374881 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102578855 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.130496546 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108986892 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.157227802 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108745712 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165195452 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103691768 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.137781634 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110942002 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.138937507 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113021583 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.132312476 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110640837 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141496336 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.108463572 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.142053005 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105685181 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.138150174 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120724959 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.148758208 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.140110574 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109079375 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139253595 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105625896 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.133999897 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117630311 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.134030997 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106900244 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142824974 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.10411705 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.13519813 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109965121 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.137818736 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101611656 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153152087 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.109059943 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.131717383 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.121187137 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.134083187 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106310694 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.141958407 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.115559929 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.132778218 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107471179 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.139464783 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.102736931 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138916041 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106495364 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.132043076 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115885714 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.144084672 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.108656973 seconds)
  done (took 16.10921196 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.260525765 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.237151075 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206973477 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.323537041 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157683204 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130521017 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.233653635 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.187753662 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134631486 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.174617973 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.191029492 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.196539266 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.102405213 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.167490217 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.23783324 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.33001303 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.167149106 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176908733 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.145004058 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.15766268 seconds)
  done (took 5.006613984 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.12479522 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174408509 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164035681 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.130616084 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.135517195 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.117636085 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.134944342 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149832656 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105366647 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.140491075 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102863411 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.142845951 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105212253 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.137205871 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121075006 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152284085 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107738088 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.141125239 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150559644 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109448648 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135291561 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.15558817 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113415978 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164214722 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.112126695 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.149739638 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102347524 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.141782637 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100675558 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.134369475 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.109166473 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.150480522 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140831981 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104948936 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.139123825 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104548373 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.129912711 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105740423 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.13536498 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.108052402 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.14962388 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.107139589 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133661115 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104170391 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.14211107 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101015811 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.108218281 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.140536946 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13945793 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113211432 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139918425 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108823916 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.141552809 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11616584 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.130372465 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113701455 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.146963045 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.137806371 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.111583273 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.131960576 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.10317453 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.108190884 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132962927 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.108583517 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139329138 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151435909 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.11272876 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.13376706 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.109071247 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.138029964 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107549932 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.152186855 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.154328079 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10217302 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.130317575 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125659386 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.131001081 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09271312 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.113081634 seconds)
  done (took 11.144016367 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136704373 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133349809 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12263941 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.169452418 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.117716877 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.14329677 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103952937 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.156038614 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.110770735 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.142658482 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110632037 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.149833 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162547679 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.118233904 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134262037 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.119952438 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.138116129 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.145219487 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.154992321 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165421016 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115152365 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.139661765 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.118247683 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.146306623 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137991994 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.14838549 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168304387 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109979923 seconds)
  done (took 4.919743246 seconds)
done (took 48.733468901 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.188424147 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.38476822 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.156444892 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.159220438 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.204087109 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.176017549 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.178297108 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.354256025 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.917609433 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.15229951 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.159588635 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.158566746 seconds)
done (took 27.271784905 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.36695099 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.758466341 seconds)
    (2/2) benchmarking "String"...
    done (took 1.482438848 seconds)
  done (took 4.339990721 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.157486927 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.160453307 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.402909016 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.161310289 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.174241453 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.175138516 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.160246107 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.187805763 seconds)
  done (took 15.502625088 seconds)
done (took 25.447976141 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.173084009 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.508800397 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.452033605 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.174593129 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.175548733 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.170804609 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.148795302 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.234555707 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.163662123 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.14729943 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.158973251 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.455054791 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.14784918 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.591201054 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.151768832 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.161727471 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.178708025 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.500627787 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.162827113 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.223427592 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.145429027 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.169966015 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.183440706 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.18624248 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.180399464 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.165549431 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.178364712 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.146410388 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.412683662 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.176152472 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.211722797 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.164409349 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.182276314 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.178644093 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.273790996 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.194711438 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.428262011 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.161280856 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.152628082 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.162947425 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.443461878 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.579564071 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.162385172 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.151088655 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.161076836 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.187539151 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.15075654 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.897049163 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.16762725 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.152080128 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.202428069 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.570822069 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.174203393 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.179056608 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.178192984 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.467038989 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.166624467 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.239879088 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.196057669 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.165597809 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.179989762 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.178096604 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.19718545 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.182629981 seconds)
  done (took 141.550555894 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.165812905 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.166605581 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.167839577 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.184125958 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.166614576 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.164657047 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.164531886 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.163893945 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.169372457 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.196132717 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.165201987 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.165199751 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.164858069 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.131636983 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.164526738 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.187337742 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.165318371 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.170961373 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.166649584 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.164274473 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.167692673 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.166079843 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.179702216 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.16282749 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.1792292 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.249494806 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.22828183 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.177708413 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.164429553 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.165174603 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.169475375 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.165933358 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.800807232 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.016457502 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.171529574 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.198663416 seconds)
  done (took 78.806162461 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.163804581 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.166411583 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.167408179 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.19878467 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.162241952 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.167685502 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.769230751 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.77067772 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.906844182 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.493871611 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.663638524 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50082663 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.166858479 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260781158 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.179776253 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.16565467 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.182122406 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.192729044 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.162990799 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.166394985 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771173018 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.180315028 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.721575454 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.342533504 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.182207547 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201326264 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.563884729 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.166101289 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201472976 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.500807235 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.215286399 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.165026008 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591122121 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.53088325 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282986826 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.16558186 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201880296 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.165164385 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.453701231 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.166480978 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.167955305 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.171684318 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.88726845 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.171607759 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.772290783 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.171619188 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.169488283 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.184902532 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.170598395 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.168461039 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.167071994 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.556815565 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.972523535 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.187517048 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.165400721 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.170131459 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.168926614 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.167227942 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.203675273 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.025043946 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292674333 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.170114563 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.173497035 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201656698 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.170445016 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.446333693 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.167654811 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.782413062 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.23064816 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.276318205 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.747642339 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.166079819 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266699968 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288362944 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.168076281 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.169005382 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.16947095 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.169551487 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.168703159 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.282346393 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.16925787 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.595900598 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.346540465 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.187896787 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.683699886 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.271256168 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.168237291 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.592714617 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.171199288 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.169336213 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921359147 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266114481 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.170742865 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.171971115 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.168453322 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.598084998 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773742543 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.434560547 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.172064019 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.170062231 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.173458188 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.607123253 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.742386047 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.902091618 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.172028513 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285557956 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.350118767 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.189088265 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.173858925 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.688404148 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.175070245 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.233007927 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.173451876 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.5734422 seconds)
  done (took 366.443215212 seconds)
done (took 587.87859497 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.87219026 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.821639249 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.958398835 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.851215793 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.819680738 seconds)
  done (took 10.414538589 seconds)
done (took 11.504030365 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.365764725 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.364691693 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.233985876 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.371271359 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.206415606 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.388304123 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.351656256 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.195994843 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.284429418 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.259013401 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.283245805 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225389092 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208575156 seconds)
  done (took 17.831730013 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.457439783 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.173211063 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257701582 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.424432502 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.217424107 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.442865975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47388221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.175395209 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315668277 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.187859893 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.187662265 seconds)
  done (took 17.406666822 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.481523562 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.172794247 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.241350554 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.42989032 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.21748918 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447180522 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492207587 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.176800941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325250709 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.189976367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.1863892 seconds)
  done (took 17.454361099 seconds)
done (took 53.785832814 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.216344601 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.344935371 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.20224908 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.190137504 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.183360552 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.18369853 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.188644715 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.181974122 seconds)
  done (took 10.787321091 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.181845078 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.182699015 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.185389174 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.18109485 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.181232818 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.185523977 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.184487799 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.181254238 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.181598411 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.184500672 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.185906536 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.180092331 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.184647265 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.182288348 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.181939657 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.183077397 seconds)
  done (took 20.024163611 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.185939238 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.181787153 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.180622385 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.181799891 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.180221052 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.183304447 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.183340823 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.183004892 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.182293763 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.182332348 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.183843237 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.181523942 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.181695688 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.184220499 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.181499338 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.183546135 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.181069785 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.184686075 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.187026843 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.184050218 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.183406121 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.1835128 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.182779968 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.183333436 seconds)
  done (took 29.49016288 seconds)
done (took 61.394203201 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.180782648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.194348276 seconds)
  done (took 5.470748943 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.247444733 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.248450025 seconds)
  done (took 3.596276129 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.188832593 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.186772304 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.187084985 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.188491848 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.187198477 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.187643088 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.189088216 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.186619883 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.187442921 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.18833491 seconds)
  done (took 12.976414768 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.188168505 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.187946064 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.186132664 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.185327994 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.185983723 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.183666531 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.186648059 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.18781348 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.18721303 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.186265755 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.188719724 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.185395546 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.187031596 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.186019141 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.187507577 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.185555976 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.186307064 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.186085327 seconds)
  done (took 22.45621225 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.19986244 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.20873723 seconds)
  done (took 3.50769431 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.325787269 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225007787 seconds)
    (3/7) benchmarking "month"...
    done (took 1.302667983 seconds)
    (4/7) benchmarking "year"...
    done (took 1.292400881 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.228255004 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.20813768 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.228064614 seconds)
  done (took 9.908766229 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.188737025 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.39016605 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.502896282 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.771335815 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.19147884 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.237419214 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.048792177 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.238319899 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226080491 seconds)
  done (took 13.895668528 seconds)
done (took 72.908635211 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.180436173 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.245105976 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.183084067 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.194096501 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.526486012 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.214450501 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.185231021 seconds)
done (took 15.82560367 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.16690568 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.168540603 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.176668416 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.18728557 seconds)
  done (took 9.798791968 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.182665647 seconds)
    (2/2) benchmarking "read"...
    done (took 1.548153451 seconds)
  done (took 4.831838277 seconds)
done (took 15.732393212 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190935009 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.188024295 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.189926643 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.187920433 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.192011524 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.189457052 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.189967919 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.189523854 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.188263972 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.185938681 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.190638759 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.191298512 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190769809 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187827356 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186884852 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192916281 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.186909908 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188195791 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.190379236 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18999576 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191984074 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.18833808 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.189718037 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.188089647 seconds)
  done (took 29.647908497 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.191985946 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.190679071 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.192949301 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.192994003 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.190858014 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.193638088 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.193933399 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.190028068 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.193755106 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.192946408 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189692008 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.189867642 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.190539079 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.192594999 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192525873 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.189532591 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.192996645 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18999203 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193108536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.191608566 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.192905936 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190831166 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.191816251 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193588841 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.191663134 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190937681 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.195117135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.190028523 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192832499 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.190952725 seconds)
  done (took 36.862142866 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.200517287 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.201368102 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.195037756 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.196621989 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.193729916 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.195888726 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.197176331 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.19450004 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.195859157 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.194859408 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.194415209 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.194149228 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.194497559 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.192036715 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.19512702 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.194252965 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.194815345 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.195242947 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.193849882 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.195647951 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.196269035 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.196683999 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.193559856 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.196168337 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.196352599 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.195795172 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.194447074 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.195732425 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.195204006 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.196176215 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.195808454 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.196852567 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.197295585 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.194695058 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.198576511 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.197692405 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.201090746 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.20678538 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.195800526 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.197797343 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198095171 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.197674746 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.196505288 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.197014279 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.197398272 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.198910508 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.198631627 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.197721376 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.197334264 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.194631492 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.197045597 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.197908267 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.19684987 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.197191444 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.197376301 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.196817551 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.196340942 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.198618155 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.194679405 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.197002988 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.198037479 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.199229749 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.198341914 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.1942253 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.198887436 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.197982696 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.19776232 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.198887923 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.197454039 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.199325855 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.198520136 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.197052057 seconds)
  done (took 87.277476815 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.198129147 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.195689362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.194959344 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196110979 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195726579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.198757041 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197781256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197864076 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195220384 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.199799144 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197995491 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.194678013 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195169789 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.198887209 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196873817 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.194739709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.197353912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195439977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.197423533 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198813066 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198844607 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.197818724 seconds)
  done (took 27.445054573 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198678313 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.200937425 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.196270555 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201949559 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198012493 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201041545 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.199888069 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201007598 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198930578 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197490874 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196389569 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199173417 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.19902888 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196814302 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195794654 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.199655278 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200600646 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199937162 seconds)
  done (took 22.693158329 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.199727882 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.200281583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.200305467 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.199519203 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.199676316 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.200690301 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199309713 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204421185 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.20089606 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.197646697 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.199176913 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203610101 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.203034728 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200924826 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202404202 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.201897911 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.200964597 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197268109 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200977395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19932988 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.199445003 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202862361 seconds)
  done (took 27.526595223 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20221334 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202745714 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.200139385 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.201194891 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.201197034 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.201681427 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.20178648 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.200355005 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.204792907 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.20147076 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199535196 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.202771027 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.202616239 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.202926457 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.200990798 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200711997 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.205355001 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201404963 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20377849 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.200364771 seconds)
  done (took 25.151225591 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.203643041 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203534773 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205831245 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203519855 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205730992 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.204705027 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202868287 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.203927497 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203378127 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205106514 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.206441544 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202179868 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207351053 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204363429 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20605451 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204766207 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205674834 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206677083 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203782236 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206230798 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207049673 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204987392 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206530621 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.208098354 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.204731295 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207267739 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205609987 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204696527 seconds)
  done (took 34.85992098 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207727899 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206722645 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.20352753 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.205299527 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.204315188 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.2053441 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.203069718 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.204430471 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.207250636 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20325165 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.207068504 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.205312311 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208315904 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.208425529 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.207219938 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.208292026 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206281553 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.205037243 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20393349 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204647292 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.206413095 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208886481 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.206426203 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205747135 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206770097 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.208419072 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204459283 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20652248 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208491631 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204095762 seconds)
  done (took 37.29886805 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.246104475 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24862379 seconds)
  done (took 3.61113409 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.20564525 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206700366 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.207078457 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205077924 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206400127 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208021125 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.209520662 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206473675 seconds)
  done (took 10.774145025 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.209235995 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.208194254 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.208903991 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.207962178 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.208380326 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.210364306 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.213194097 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.230649733 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.210166172 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.209403879 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.21670176 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.217842035 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.209410047 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.210306735 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.20949139 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210444449 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.207372062 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.206533196 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.207703626 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.210000122 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211587292 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.211832467 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212196215 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.209907859 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.212954614 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.223376871 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.216608124 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.211492024 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212536303 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.211744662 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.209420907 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.207912689 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.211434316 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.214509982 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.210260375 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.210724213 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221100906 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236615122 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.217041656 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211875359 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.213219142 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.21002917 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.212676083 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.211710255 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.213627751 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.212308373 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.213409054 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.209053247 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.212453164 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.214539848 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.220146312 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.213473522 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.210012797 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215007642 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.214106795 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219647105 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.232164814 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.217173428 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.226607386 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.22412092 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.223713978 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.237512864 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214266941 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.210889983 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226108139 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.242274453 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220541301 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.229294455 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.209965131 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215543498 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.222572002 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.224908432 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.239885904 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.211810783 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215631189 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.215603278 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.213815329 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215037645 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221344065 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.236509817 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.213825758 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213164252 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22503612 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241715286 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.212851394 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.213913261 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.2133642 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.213146007 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.216372251 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226538604 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.234570278 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.215571637 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.216433093 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.215860461 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.216785658 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.215016042 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.214957317 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214151888 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.211924806 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.216714768 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213665681 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219843932 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.225183363 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215364214 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215626791 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.221892803 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.215375612 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214775406 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.221613352 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.213968458 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215504447 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.216072089 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.222627376 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.214458468 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.219721535 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.227015516 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.215733231 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.217486162 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.215032981 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.217067466 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22856331 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.244642567 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.214586463 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.215935558 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.222990212 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.231087161 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21770246 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.220051101 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.216894162 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.215012968 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.216423244 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.219846287 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.218180073 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.217611176 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218247556 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217963281 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.21419763 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.219517752 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.218913897 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.216528797 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.219048297 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.21863652 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.219476959 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.220570224 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225107411 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.220640508 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225925735 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.21960206 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.221213163 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.218776243 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.217368847 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219746381 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.218829098 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.218847414 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.21836045 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218899676 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.217767639 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.218357117 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.219299275 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.22064666 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222511771 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.221347433 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224129398 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.21862405 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.223792552 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.218729699 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.219219288 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.220184449 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.220767572 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.222015884 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.219923971 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.218491708 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.224094378 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.228819034 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.219911093 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.22147603 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.221400487 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217691877 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.219233087 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218564558 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.22154204 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.229037417 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.219326256 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.22694717 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.218842984 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.219620776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.219784626 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.221670831 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.220298972 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219305879 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.225010508 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232091353 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233393437 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246806574 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.221731485 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.2258365 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.221597302 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.224159999 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.222397159 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.221698202 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.221299904 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220250327 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221970201 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220942938 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.224201223 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.221877475 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.222193796 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.221052513 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.223409357 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.222784758 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.221456021 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.223305527 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224642513 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.220753618 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224746182 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221343461 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.224300917 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.221096183 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.221687559 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.222435032 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.223073068 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.224017028 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.228654528 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.222584962 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225199578 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22592269 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.222060453 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.223380523 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.225886526 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225709822 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.225425277 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23136759 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.243086976 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.224307358 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230100335 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.243096232 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.222652572 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.225822018 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.222551597 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.222337341 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.229609617 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234973517 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.223814873 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.223534076 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.222648645 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225697764 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227314455 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.230261936 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.221926081 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.224958572 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.226350775 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.227931445 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.222139004 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.224892814 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.227299651 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.225382351 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226369229 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225537015 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.223567118 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.226078298 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.224357371 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.225645539 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.224797044 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227883905 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.236381568 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.229221407 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.223979529 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.228299529 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.226395507 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.229586272 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.224350994 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.226988679 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.225805401 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238633634 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.251612483 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23195519 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24757546 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.22720499 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231047962 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.24981445 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.233080384 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227765419 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22487578 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.226642562 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.227263661 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.226396767 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229205026 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.229104682 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227915618 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.229652844 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.232695666 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.22874764 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.229298421 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.227598348 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.228510806 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.227222547 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.226320522 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.229062271 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231149808 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230477097 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.227608046 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229853131 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235797078 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250203166 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.229623988 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.22935071 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.227214777 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.228069893 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.229696932 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.227942307 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232494028 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238213935 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.233765656 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.239144366 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.232605007 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240902713 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.2283851 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.23193698 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.239976429 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.226083576 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.228249726 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.228145421 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.229055929 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236128781 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.247366511 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.231026746 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.234654026 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227441859 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.228758609 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.230115233 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.228042301 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22978087 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.227238771 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235144366 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.252018274 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.23420002 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232272822 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.227094795 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231119642 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.230697799 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.226624295 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232657257 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.228390605 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.230760946 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.229832678 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.228538353 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.230094718 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229230726 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.230135997 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.225790259 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.230070257 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236550517 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.253327305 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234958829 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.229854255 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.237157016 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229171102 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237285679 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.25090099 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.230809193 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.231872991 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.23331214 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.23196213 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.229628752 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.231896608 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.228392688 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.233616684 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.234032 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.231195909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.233188362 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.230443864 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.229652515 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.232249873 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243022252 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256046666 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.234823927 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236521516 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.22991878 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.233496976 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.237505572 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.232974066 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.233225805 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.236040491 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246727067 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240877755 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.233017865 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.232847976 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233657907 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232516294 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.232934317 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.233368313 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.230653316 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.233174399 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.234060448 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.232553651 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237255095 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.232519255 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.235360662 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234773366 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.232872916 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.241298922 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.231486497 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.233310151 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232686838 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.236002532 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.232595291 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.236964688 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.232773224 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234785801 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236025197 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.236501379 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242840791 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243481886 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.237104307 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.235432719 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.234212657 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.234036737 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.23619509 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235303213 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.231889524 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234423151 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.758482209 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.234696681 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.237059707 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.235971818 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.235226284 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.232842556 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236035756 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237917451 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.243152639 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235899549 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.232075151 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.236480684 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23550673 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.23462873 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.234124987 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.240719699 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239290552 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.248494461 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.243704731 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.239928605 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.234522082 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238573967 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.24500515 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.234441415 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.236845182 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.236420813 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.236993602 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.239489523 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.240005639 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236467806 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.239921413 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.235636211 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.236557369 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243023734 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.261665905 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235026729 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.240308018 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.242297313 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.236495418 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.235350021 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.239230165 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.235795514 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24465747 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.260517262 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238795814 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241093668 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.236952567 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.241449953 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242548712 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241437918 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.240890514 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.235876646 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.23922638 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239670804 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239936667 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.236617048 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.236908811 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.236633045 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.243817422 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.248078264 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.238420787 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240856228 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.240533167 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.241654518 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238155792 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239710046 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.238696154 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.235292792 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.237482476 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240334466 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241216703 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.241982097 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.238945853 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.24246003 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243013477 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239702169 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244343585 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.252265332 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.248507387 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.236954106 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241395928 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.23895751 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.244206197 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236815856 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.238675615 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241732721 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.24355339 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24132082 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240312215 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.241870519 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.240916055 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25773493 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.265241591 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242540871 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.240454814 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243159837 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.24105647 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.238237668 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.243058268 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.242050421 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.247365991 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249532258 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.241266779 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246603953 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263352066 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.242213318 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.248513011 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246875447 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25085241 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.245458592 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241676062 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.240775523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248085752 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.259286538 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243698272 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252063928 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274514089 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.264151307 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.243040477 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.242494744 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241708905 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.241434481 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.244992967 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.242516979 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.245573402 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243541268 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.243917318 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.246659609 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248709115 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.243710541 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.246154419 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.24596785 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.243978058 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.246279167 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.243023106 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.244645506 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.243895441 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.245147883 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.243676522 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.244498629 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.243783953 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258450021 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.274244188 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.245934718 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.245451423 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.241646185 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.248868741 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.248272688 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259662863 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.253614178 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.245669392 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.243900496 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.247404275 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244321991 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.244531146 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.24467974 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248284229 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245289775 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.241830225 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.258935359 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273259883 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.251537969 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.245913182 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246879209 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.246988442 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248191922 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245865806 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244564842 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.24703672 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.248598806 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250676224 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.246418342 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.247120572 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.251351214 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.256496508 seconds)
  done (took 735.034741426 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24246849 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24407412 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24541062 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244418134 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24733674 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243778957 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244889136 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.245636019 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244098839 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245701025 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.244778737 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247212856 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245590393 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246309818 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245899596 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245699998 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244298491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243974378 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245883185 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24380581 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.245173076 seconds)
  done (took 27.299360704 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.250672918 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.244089784 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246644714 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247322795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247055688 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247863544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.246404981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246902389 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249032237 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24518589 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245688235 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248362432 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.246402862 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.245892119 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243936238 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248735268 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247148891 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246331229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.249324252 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245555868 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248502371 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246259235 seconds)
  done (took 28.587344298 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.246705142 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.247486517 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.247434434 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.244804265 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.250304718 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.245183925 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.245598092 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.249687447 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.248584836 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.250146328 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.250087308 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.251104193 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.256810947 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.254494641 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.249895702 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.24942493 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.248230373 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.250248187 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.250018824 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.24753046 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.254827915 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.268268385 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.247601987 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.248758439 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.250513762 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.251334258 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.248351308 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.249148858 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.250980781 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.253767169 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.249444247 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.253086708 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250724105 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.249274596 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.250958099 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.254990681 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.250963187 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.249254572 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.251755515 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.261548994 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.272661474 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2510041 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.255638134 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.272174208 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.251299004 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.256486753 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.257920373 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.248003767 seconds)
  done (took 61.252218842 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.857539595 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.883040698 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.875072238 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.879931149 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.880052937 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.876976855 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.888109572 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.890315842 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.872885359 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.878276726 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.876574984 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.874983832 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.878513771 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.879799666 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.879990437 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.875623934 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.872692263 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.873963224 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.88439668 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.891976437 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.874473386 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.872538997 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.876495333 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.871544385 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884072935 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.874476528 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.875203406 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.877674297 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.883299193 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.881595706 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.883795277 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.895262044 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.891031956 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.885579729 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.882494889 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.880397223 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.882031242 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.880925292 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.888904546 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.874333471 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.880326252 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.878018249 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.88178694 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.882472881 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.897889828 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.882140003 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.877015373 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.877767938 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.880151428 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.887329609 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.881967896 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.88030475 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.880356001 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.879606378 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.882786782 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.882718535 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.885338162 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.889636014 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.880547941 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.881770182 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.878887917 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.891436254 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.887921747 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.881416337 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.889590435 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.880528357 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.884115401 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.88579208 seconds)
  done (took 129.076834883 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254483597 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.255431038 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25554512 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256600137 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255049409 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.255318334 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256928415 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.256351758 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.256822343 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2561424 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256513188 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.256108243 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.255564227 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256762058 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255648487 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255693746 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255501848 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25666773 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257636595 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256158658 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.256847613 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255547849 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.255409469 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25709833 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256210384 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257666652 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258475632 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255037957 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256650788 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258692963 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258010099 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.256360243 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.257479482 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.257002543 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256881268 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.258496306 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257954801 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257316901 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.258328722 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.259537263 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25840241 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257324595 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25906064 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.258873628 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258942464 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259883698 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260731939 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.259000031 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261242685 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257615111 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.257990478 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258192445 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261228626 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25928413 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.257806934 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.26195422 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258740454 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259207288 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259502017 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260319604 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260730744 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.261079303 seconds)
  done (took 79.144143376 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262209663 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261053391 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.25771991 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.258462703 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261514309 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257859278 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259502472 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.259778594 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.260642519 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.260397433 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259904931 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259453548 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259958497 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260412454 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259573193 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26046874 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259301283 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258732031 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264268011 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260146658 seconds)
  done (took 26.366853791 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.26068904 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.263871234 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.261017268 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261112355 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.262981662 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.259101671 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.261316832 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264112803 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259383286 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262189879 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261759226 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.261084854 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261670468 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259256826 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26246327 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.261429987 seconds)
  done (took 21.351834093 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.262075243 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.262962945 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.263357753 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.260281442 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.260589332 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.262221168 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.262452416 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.260053296 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.259349023 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.263198318 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.263833595 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.264691481 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.262240444 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.262819601 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.260345918 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.26234202 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.259134342 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.259521697 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.26301152 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.264113117 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.2636237 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.262164908 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.264644114 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.266038523 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.261670289 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.261706743 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.262078981 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.262895394 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.260337047 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.263098875 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.262989642 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.262841967 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.260332884 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.262206931 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.262779307 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.264093292 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.265516439 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.265207154 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.264273716 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.265260183 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.265792008 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.262763091 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.266737397 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.267785605 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.26175233 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.265083813 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.262019917 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.263970433 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.263477002 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.264214423 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.266934435 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.265246275 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.267371298 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268604795 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.267972346 seconds)
  done (took 70.652298772 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266549836 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266281962 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.263710457 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.264722828 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267539931 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.263184315 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.266880256 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266328856 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264892827 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267630517 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.264603207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26695046 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264625074 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269203926 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265038269 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266705123 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.265517826 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268403576 seconds)
  done (took 23.960620831 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266943312 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267773479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.268490389 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.264917577 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.265421967 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267474259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263775688 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.267775362 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267279104 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.265976275 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267838417 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.271588708 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268521664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.268297212 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26725207 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26539707 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.271379169 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269735171 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.267715568 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267161093 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269383495 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269456058 seconds)
  done (took 29.063720032 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.267582883 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.267347736 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.270351825 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.286928372 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.293366337 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.270194033 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.269554142 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.269447254 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.29407128 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.330197061 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.323478408 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.296124333 seconds)
  done (took 16.612459832 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268700085 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270907527 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266295811 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271477104 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271216628 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26575042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270317431 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26904632 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271788677 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272041951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2680708 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272454875 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271760995 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267584269 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273743664 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274161702 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267963039 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267811668 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268160415 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270184071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270106166 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270277983 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26778043 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269555302 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274695965 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27395662 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27562176 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270476856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273199459 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272255627 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273282444 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269924204 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27524117 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274075916 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274224059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274962462 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272190719 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274660889 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274665695 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271637236 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274062057 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276610193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276894485 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271162319 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272781139 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270892635 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274912522 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271234425 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271210482 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275229773 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276735273 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27298831 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275175843 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275385508 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273206803 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274688787 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271758889 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271265137 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273169327 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270181781 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270885504 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276685706 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270258951 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270464342 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276833378 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273791933 seconds)
  done (took 85.138984078 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271950005 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2742869 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273271749 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271669743 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274002555 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275377172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272861153 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273658257 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273911333 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270618904 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278560354 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274067736 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272468713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272313695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27355796 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275192412 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273983962 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274879639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277249314 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2770625 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276135833 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27505257 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27548223 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27262039 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273908187 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279508906 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276292958 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274958167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275375611 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274182621 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277739746 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276275076 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276677856 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277466485 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275944183 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277632189 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275514339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276160146 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277921114 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278223393 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277013383 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280065475 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278035146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274204421 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277668328 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277629741 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277316238 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276246541 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275750519 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275672023 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279956743 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277176212 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277559202 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278680808 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277123712 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278049573 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27800156 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276748437 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275600202 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282778656 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279158207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278953362 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282393169 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278611322 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27963182 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27880562 seconds)
  done (took 85.416818126 seconds)
done (took 1763.205232951 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443051008 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399403161 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.278128331 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.292791282 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.280810504 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.282985313 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.293691727 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.281097779 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.280426056 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.281237465 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.281306086 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.500151839 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.277120306 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.281334386 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28290293 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.378858048 seconds)
  done (took 26.30106953 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.315874139 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.290925245 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.412567222 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.308822194 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.315888987 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.494232247 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.34506362 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.288524147 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.474963894 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.312078169 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.276800441 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.320023889 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288920269 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.274630283 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.311817444 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.494797705 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.566875924 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.287407321 seconds)
  done (took 28.566809481 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.764766539 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.285247775 seconds)
  done (took 5.235264189 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.311652463 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.290981615 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.291000799 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.289576973 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.278217855 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.281000954 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.287731784 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.28173569 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.304525846 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.432711185 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294076376 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.298657859 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.31291246 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.291272714 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285722379 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332694817 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.444942109 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.286159664 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.286327079 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.296638167 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.28865468 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.383804635 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.333676168 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.289634789 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.430728686 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.296524926 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.296413805 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.297072128 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.431250538 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285453961 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290615977 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.288548217 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.29181559 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.231369904 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.781220973 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.301819318 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33707401 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.296261422 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285533248 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.449460001 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.289921445 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.295058307 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.293415469 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.773505393 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437987125 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.425520833 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.303302138 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.2943162 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.292963153 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.361975669 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.291614351 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.294240212 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.338750955 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.168586292 seconds)
  done (took 83.128739625 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.325408683 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.285419951 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46922005 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.310829894 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281684332 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283961164 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.280829979 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.605388081 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.28855403 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286621436 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.592417143 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887500284 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.311302402 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.33343057 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.129475868 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.345432796 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288212389 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.305655205 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.285861646 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.285198689 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871765463 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288439305 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.289254708 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.355232281 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.325860629 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837908734 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.296906885 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.28848965 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.30544075 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.283017683 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.843817831 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.304405066 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.34150478 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.286680807 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.579119106 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700458332 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.660416251 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.283866488 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.328583713 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.28545987 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.312010346 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820219323 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677322185 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.286131187 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.284045959 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831181101 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.284641031 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.291539535 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.295160501 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542829562 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.287693752 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.289689648 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.314742956 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.290927426 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.287208385 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.37548264 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.367505133 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.839506027 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287958498 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.287830569 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336851999 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.28779722 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.295148968 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286391507 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.291642587 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684124664 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.501690428 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294389593 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.680975417 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.835817255 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.305949965 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907232488 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.304553891 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.308149502 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.478851079 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288656739 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.287779189 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.849192831 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.290743283 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.286158823 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.665104152 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.289526215 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.598630189 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.31054464 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.308186242 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881362792 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.296507253 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.296349184 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.289369763 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.289863299 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.28912334 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.307635928 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.586342587 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.31544221 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.288641267 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.288509164 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.33092211 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.289699654 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.287560935 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.297857973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903595391 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.309381411 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.290528408 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29331092 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289254967 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.29356149 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.289912426 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294524465 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565654544 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.291545915 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.315601799 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.292577022 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.288673803 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.300118873 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364336713 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.29238479 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.633749185 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.288861106 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289471096 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.312504588 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289297097 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325145785 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289841863 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.293658197 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.222892364 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.559051203 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.312066788 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.29105453 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.292851437 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292147319 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.291193712 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309448055 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.329087408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.297098116 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091803749 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315951546 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.298398734 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.29255891 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303215904 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305022012 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.291671134 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294524682 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60561877 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.588516204 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.479457059 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.294545441 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.295871605 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.100255569 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.333803019 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483155928 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.316258444 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.294031261 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555558135 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.501229132 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.298306548 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.293487779 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.294485454 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560116281 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.293089 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61625643 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.873352738 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.312502682 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.301770775 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.099491952 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.05131896 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.299820846 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.296792677 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.598914245 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.314726699 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.296494692 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.296006773 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.296974184 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.293320737 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.296532231 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.29301928 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.296749718 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.296464717 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.62056754 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491801745 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.316172034 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.297262456 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.843772497 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.310164093 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292710348 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.299106785 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.295464212 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.295681922 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.361275462 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.298428523 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.3166659 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.29721426 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.297204489 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.858259058 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.294771667 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.297172854 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.493311699 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03655657 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.313015523 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.297619953 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.312883557 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.227327173 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868866684 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.31689131 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.647369443 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.304481034 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.340233034 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295578267 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.30082569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868463166 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295570832 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.318010234 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994484459 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.314701502 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.714456656 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.294743342 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295682127 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942261179 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.313215167 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.29689772 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.294578032 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319209193 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597933424 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.294516612 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.32525117 seconds)
  done (took 490.531838894 seconds)
done (took 634.947842595 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.296373535 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.299306263 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.286199566 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.3001972 seconds)
  done (took 10.385962926 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.309231292 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.305582764 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.306212668 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.301693327 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.306480505 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.306901459 seconds)
  done (took 9.041741665 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.298915135 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.300668975 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.300947499 seconds)
  done (took 8.106593691 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.53705784 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.320585304 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.668252481 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.330898873 seconds)
  done (took 9.064619907 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.306922911 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.304957343 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.305019359 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.306480759 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.310472058 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.307509954 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.306991816 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.308565051 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.311093155 seconds)
  done (took 12.972228494 seconds)
done (took 50.773953129 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.316316965 seconds)
    (2/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.066444192 seconds)
    (3/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.390104835 seconds)
    (4/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.403045442 seconds)
    (5/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.519455554 seconds)
    (6/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.463506858 seconds)
    (7/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.32510556 seconds)
    (8/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.386369456 seconds)
    (9/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.427731928 seconds)
    (10/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.331016856 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.34411073 seconds)
    (12/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.314314173 seconds)
    (13/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.376555693 seconds)
    (14/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.438085493 seconds)
    (15/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.36108586 seconds)
    (16/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.317036249 seconds)
    (17/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.424309589 seconds)
    (18/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.454786631 seconds)
    (19/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.303973177 seconds)
    (20/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.406082558 seconds)
    (21/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.948839694 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.30632688 seconds)
    (23/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.496148506 seconds)
    (24/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.086391596 seconds)
    (25/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.713183681 seconds)
    (26/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.519916062 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.486469567 seconds)
    (28/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.310837856 seconds)
    (29/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.071034547 seconds)
    (30/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.227473551 seconds)
    (31/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.460126664 seconds)
    (32/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.31011049 seconds)
    (33/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.327823847 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.357945983 seconds)
    (35/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.332547596 seconds)
    (36/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.30008036 seconds)
    (37/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.441901436 seconds)
    (38/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.586355874 seconds)
    (39/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.291389584 seconds)
    (40/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.29032813 seconds)
    (41/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.392640275 seconds)
    (42/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.32781382 seconds)
    (43/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.325699215 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.502525463 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.395721921 seconds)
    (46/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.324465953 seconds)
    (47/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.289367679 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.333390306 seconds)
    (49/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.952961705 seconds)
    (50/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.357327849 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.478777809 seconds)
    (52/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.072412896 seconds)
    (53/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.332234402 seconds)
    (54/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.313273602 seconds)
    (55/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.961547768 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.379487145 seconds)
    (57/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.31693605 seconds)
    (58/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.195839069 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.501948032 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.415734969 seconds)
    (61/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.501331553 seconds)
    (62/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.400905163 seconds)
    (63/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.329814797 seconds)
    (64/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.469276249 seconds)
    (65/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.330980363 seconds)
    (66/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.336274247 seconds)
    (67/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.320257333 seconds)
    (68/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.289683173 seconds)
    (69/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.377060284 seconds)
    (70/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.326848347 seconds)
    (71/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.457361999 seconds)
    (72/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.363485057 seconds)
    (73/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.321123187 seconds)
    (74/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.390785352 seconds)
    (75/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.395715566 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.367081316 seconds)
    (77/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.291906011 seconds)
    (78/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.443357732 seconds)
    (79/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.349049387 seconds)
    (80/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.304100697 seconds)
    (81/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.393254378 seconds)
    (82/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.395126256 seconds)
    (83/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.356229639 seconds)
    (84/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.440628556 seconds)
    (85/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.037382876 seconds)
    (86/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.306764371 seconds)
    (87/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.31726316 seconds)
    (88/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.150030554 seconds)
    (89/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.508704957 seconds)
    (90/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.413488364 seconds)
    (91/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.473351044 seconds)
    (92/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.547189193 seconds)
    (93/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.472243515 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.380134948 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.415732612 seconds)
    (96/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.439080257 seconds)
    (97/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.351414268 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.404768266 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.421590027 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.333717837 seconds)
    (101/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.42455151 seconds)
    (102/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.409091949 seconds)
    (103/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.441102902 seconds)
    (104/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.390333937 seconds)
    (105/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.356592456 seconds)
    (106/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.392634309 seconds)
    (107/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.409602319 seconds)
    (108/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.320682987 seconds)
    (109/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.466972285 seconds)
    (110/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.315205538 seconds)
    (111/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.41565379 seconds)
    (112/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.332955464 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.407429641 seconds)
    (114/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.523157214 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.324043866 seconds)
    (116/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.413635836 seconds)
    (117/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.336434117 seconds)
    (118/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.355434852 seconds)
    (119/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.467568617 seconds)
    (120/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.416379135 seconds)
    (121/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.958450138 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.31983718 seconds)
    (123/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.448524538 seconds)
    (124/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.025847392 seconds)
    (125/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.969630586 seconds)
    (126/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.970661767 seconds)
    (127/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.317378118 seconds)
    (128/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.502426461 seconds)
    (129/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.326737299 seconds)
    (130/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.376750364 seconds)
    (131/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.676562896 seconds)
    (132/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.368744094 seconds)
    (133/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.3868185 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.069193411 seconds)
    (135/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.415413958 seconds)
    (136/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.321060318 seconds)
    (137/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.323000077 seconds)
    (138/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.448784033 seconds)
    (139/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.358233083 seconds)
    (140/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.677363574 seconds)
    (141/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.305602607 seconds)
    (142/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.389697685 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.326356754 seconds)
    (144/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.299611053 seconds)
    (145/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.53002782 seconds)
    (146/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.218995811 seconds)
    (147/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340835496 seconds)
    (148/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.325277212 seconds)
    (149/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.322330436 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.325358768 seconds)
    (151/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.54818719 seconds)
    (152/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.968017993 seconds)
    (153/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.415270725 seconds)
    (154/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.337844636 seconds)
    (155/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.317297977 seconds)
    (156/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.320890064 seconds)
    (157/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.395135407 seconds)
    (158/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.324584985 seconds)
    (159/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.074172979 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.425590105 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.338481233 seconds)
    (162/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.464057381 seconds)
    (163/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.524872369 seconds)
    (164/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.15790508 seconds)
    (165/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.298206254 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.383502249 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.313306888 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.318838436 seconds)
    (169/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.355927477 seconds)
    (170/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.085660465 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.445679684 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.393825261 seconds)
    (173/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.46388004 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.385870272 seconds)
    (175/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.029206578 seconds)
    (176/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.415069858 seconds)
    (177/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.426497172 seconds)
    (178/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.648460926 seconds)
    (179/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.476338302 seconds)
    (180/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.34589324 seconds)
    (181/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.392632508 seconds)
    (182/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.326321479 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.084218954 seconds)
    (184/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.348798488 seconds)
    (185/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.322307542 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.366398515 seconds)
    (187/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.510725083 seconds)
    (188/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.21944251 seconds)
    (189/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.411218795 seconds)
    (190/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.35409446 seconds)
    (191/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.538484724 seconds)
    (192/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.3704724 seconds)
    (193/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.372450657 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.345594823 seconds)
    (195/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.530991374 seconds)
    (196/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.520519929 seconds)
    (197/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.354729414 seconds)
    (198/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.311451184 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.372110364 seconds)
    (200/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.402351396 seconds)
    (201/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.300579613 seconds)
    (202/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.565948984 seconds)
    (203/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.325376889 seconds)
    (204/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.413113619 seconds)
    (205/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.323176423 seconds)
    (206/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.429926859 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.374751944 seconds)
    (208/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.518093953 seconds)
    (209/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.404453464 seconds)
    (210/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.363689415 seconds)
    (211/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.972974868 seconds)
    (212/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.341812499 seconds)
    (213/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.028599695 seconds)
    (214/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.303144566 seconds)
    (215/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.357965399 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.496412405 seconds)
    (217/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.299924501 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.450468228 seconds)
    (219/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.299937581 seconds)
    (220/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.482901688 seconds)
    (221/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.325622275 seconds)
    (222/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.400670061 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.306657932 seconds)
    (224/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.426587838 seconds)
  done (took 364.490613092 seconds)
done (took 365.698458039 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371857489 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.499004171 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.340955391 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.342096274 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36897163 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.318034251 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.36244448 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.33220647 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.329525754 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.326979776 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.319636127 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.330285123 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.345552293 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.359765572 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.439023274 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.335555091 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.342726887 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.325335964 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.363680908 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.381600398 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369781991 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369487876 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.337577678 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.341583714 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373397886 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373625976 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347622548 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.317323077 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.327253024 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369129661 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.322761476 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.346718118 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378447901 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.376870616 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371874275 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.327053296 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369947241 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.501992175 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.365151535 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.361797518 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.331345196 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.375254492 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.337151448 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.337123615 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.376778183 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.337760591 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37402594 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.449579176 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.323433069 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.316788457 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375005772 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.387599314 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329876425 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.317053897 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.317666699 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.449394676 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.330172712 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374408345 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.331134273 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370322927 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.440116957 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373330815 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.388418474 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373295655 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.330144061 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.346877928 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.328976289 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.38595792 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.325531127 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372329321 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373896031 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.335650924 seconds)
done (took 107.12354553 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.452063287 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.32839078 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.490569417 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.329441288 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.495159719 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.4740468 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.327483954 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.326238207 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.327198367 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.119869891 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.325604998 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.327502126 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.32903031 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.328320034 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.45801637 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.329824805 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.325493581 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.023367402 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.328366839 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.468655643 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.330233069 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.330581549 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.329409916 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.126905093 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.330296005 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.326517223 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.468469561 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.330662087 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.02268651 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.326934996 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.329924961 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.024253103 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.472822413 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.348835293 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.343617294 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.338958441 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.496813913 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.349174768 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.453477127 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451753309 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.491863936 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.368373059 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.32514773 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.332969751 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.335694932 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.330090281 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.328468746 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.360198438 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.333397093 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.328900502 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.024962377 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.339836563 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.331360442 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.330643303 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.330666995 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.36017931 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.328287998 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.333846578 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.471426024 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.330893766 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.455580053 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.127355459 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.123453275 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.330672379 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.331109283 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.330590874 seconds)
  done (took 108.088968399 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.400854231 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.410283311 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.452509056 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.348904252 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.382515688 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.458269459 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.350043495 seconds)
  done (took 11.031244025 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.340654234 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.33440339 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.384782856 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386320067 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.335339482 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.546476846 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332185898 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.347391019 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.333848246 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.411029473 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.335941756 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337244001 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.342305035 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.332505701 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383613716 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.346146211 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.44888734 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.337144234 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.335737252 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.488120506 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333958034 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.342610664 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.412654958 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.345706657 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.334410224 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.34151796 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.291227502 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335578755 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331637223 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.334762883 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334151464 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.443456386 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.336963404 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.333069866 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334946869 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.495620144 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.335945351 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332744105 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.333882741 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.324997931 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.335760251 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.335119705 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.336999587 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.331617263 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.33599743 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.358857147 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.336207988 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.334065206 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.333268844 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.335689559 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.412505758 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.33605521 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.332804301 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.33484608 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.412653169 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343211323 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.334834922 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.331755908 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337238433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334400939 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491091353 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.384346538 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.336185445 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382666234 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336232506 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3370366 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.335668302 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.336653992 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429268645 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.335722479 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.383712454 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.334779078 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.556909933 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.360286452 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339120599 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.336696264 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.338612803 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.33671883 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.335054587 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.342330217 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.335280865 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.339950819 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.344363225 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.33345523 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335093255 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.520924102 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.49529974 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.335662585 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.34894915 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.344456103 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.332968759 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414164375 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.339735934 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.3353061 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387853224 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.45390226 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.418709399 seconds)
  done (took 138.353731219 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.351967621 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.351178148 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.341747582 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.364798508 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.340382375 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.339025718 seconds)
  done (took 9.322828421 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.344287506 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.341329185 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.338756505 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.341155889 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.338524671 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.338985705 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.339735969 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338425763 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.343210249 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33857706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.339791137 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.342611588 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.34309622 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.342811151 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.339937544 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.33781467 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.338019376 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.336562618 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.340399213 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341798369 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.339657188 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.335443361 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341053926 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.342292345 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.344132606 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.340919039 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362123247 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.34090538 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.341209307 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.348869412 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.360408828 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.339619284 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.345812735 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.348609555 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.347087231 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.342636162 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345195237 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.342236448 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.341055014 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.340444502 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.345542884 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342214889 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.341593179 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.342496199 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.344472271 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.348433389 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.346490856 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365934664 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.341476973 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.343134502 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.346699425 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.345474801 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.344079749 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.345255773 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.345821636 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364243035 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.348998405 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.343554449 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.342279876 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.344813548 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.344796147 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.342534485 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.345501651 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.346970412 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.339662649 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.34299021 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.346067569 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.346044166 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341260281 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.342090847 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.343552592 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.342341021 seconds)
  done (took 98.990465566 seconds)
done (took 367.007954538 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.192859498 seconds)
  done (took 4.429746689 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.551488282 seconds)
  done (took 3.792187534 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.590181194 seconds)
  done (took 24.842485499 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.415573642 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.384482299 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.348489636 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.347933473 seconds)
  done (took 10.736815424 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.733289422 seconds)
  done (took 3.977357388 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.34312092 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.343398515 seconds)
  done (took 5.929893936 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.697667523 seconds)
  done (took 3.937475084 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.888678745 seconds)
  done (took 4.140676192 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.366481112 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.355997634 seconds)
  done (took 5.973478885 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.32752935 seconds)
  done (took 3.567440666 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.377432407 seconds)
  done (took 39.620750242 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.348348523 seconds)
  done (took 3.59324859 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.379607702 seconds)
  done (took 3.620026377 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.348911562 seconds)
  done (took 6.590366098 seconds)
done (took 125.989973668 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.340508328 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.338242816 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.339773888 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.336807897 seconds)
  done (took 10.594693733 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.399756615 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400105738 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.397094708 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.39866231 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398179912 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.398118473 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.371867627 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.37415588 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.398102828 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.398000526 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.403064765 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398813839 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.398320162 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.370752972 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399246044 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.407543003 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.398170856 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.396986147 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374973723 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.398983877 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.347868808 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.399778335 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.397075707 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.348407788 seconds)
  done (took 34.615243999 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.842044802 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.421246773 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.502592698 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.398470332 seconds)
  done (took 7.40922354 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.426657495 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.425251681 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.4391572 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.480122463 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.489846649 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.438640724 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.370519906 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371245031 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.356161244 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424651545 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.476751018 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.419978803 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.505884288 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.346705382 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.554097501 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.347476975 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.346379374 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.426264032 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.477401452 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492842427 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.347969711 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.426288891 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.425319939 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.41686362 seconds)
  done (took 35.476284924 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.35773581 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.35946165 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.347757041 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.366014935 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.348976619 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.348000404 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.349388012 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.35423003 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.347100189 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.347934038 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.348138591 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.361079348 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.351964474 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.347885417 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.355326762 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.348408429 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.355826182 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.352357692 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.347932283 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.3550531 seconds)
  done (took 28.294716183 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.345008519 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.342497473 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.695060773 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.599282559 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.343060319 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.34576485 seconds)
  done (took 13.915125977 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.432801593 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.600972264 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.35057133 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.760236731 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.869413096 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.356455262 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.353211312 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.626745103 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.024575002 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.988067195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.420645872 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.431292188 seconds)
  done (took 20.462996986 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.362819966 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.346893588 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.355735452 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.363962764 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.415760774 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.37089291 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.357780382 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.343705115 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421595661 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436813813 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.37241507 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417633876 seconds)
  done (took 21.811900292 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441021479 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348745853 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34559753 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351776253 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345485181 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223716257 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403951246 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.093199915 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.370522213 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621846381 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363254197 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446386322 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604277543 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347803738 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347136414 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.332660769 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579048744 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895547198 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35103717 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347440856 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38020183 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351256784 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347531925 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589552296 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348383437 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345413564 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.610276583 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347420134 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673455403 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363185749 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358709127 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348135446 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623597633 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050636852 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466346114 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588567686 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353046776 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353901893 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.355063003 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.35317057 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357821859 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350844293 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361310769 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349386488 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35011292 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35844712 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112009352 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.374675746 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.349323944 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352195058 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651542164 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449355967 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.356633167 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349408617 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376799446 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349776011 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.355109152 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451225233 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929535521 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367421168 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364332893 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.353272864 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35581228 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3515852 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026315808 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.356245228 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.355475189 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353468938 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35273627 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351108406 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369322186 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351479876 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.374543003 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352414833 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158194579 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371786654 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35104267 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96404107 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354431493 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.355098644 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585861526 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351314525 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351901565 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.350259776 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352600237 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141662307 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359124747 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.337957671 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374894125 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105548699 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613514063 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372138157 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383847645 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577734915 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.338622915 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354270926 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.366036518 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355399899 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374871612 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107041898 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371012524 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.357880007 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615923942 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.564086783 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357163206 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.342200333 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873577064 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373334599 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.371356798 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355679725 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598335043 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.009431014 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370566405 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360666292 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371719245 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353764173 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1813764 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355883871 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.461036849 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357368505 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651431266 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.236598946 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355380707 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422957093 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359474771 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358229369 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362237086 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358399774 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355047241 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.590145439 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376644802 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.370849682 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.356842054 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355747925 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.35344554 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363969795 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.3602316 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583103568 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358928348 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635182229 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356379741 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356778569 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356628218 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.580685037 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.366086646 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.694185701 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621758069 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360331863 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362518495 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370903269 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376107301 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459590386 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378706579 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.356368707 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621147718 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.361574858 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.362518288 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358278564 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358197688 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363835215 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.366564915 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361713059 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014148441 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332983024 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363336983 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265501511 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.37220618 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427309397 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363644331 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611686215 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368291547 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375355779 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.364210487 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.359501686 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585415786 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369524666 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361005918 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43705436 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.880192716 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032008951 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37547555 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.36144681 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.35704161 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.356587716 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360544229 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360093116 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360396607 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601008291 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376615507 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363812632 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.019905868 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363811355 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36098608 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.367715105 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372275001 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.364212551 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361426059 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.368977507 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367307375 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365398303 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.398832876 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503057133 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.374867415 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360408078 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877757519 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404019435 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359243197 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363500611 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396548508 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359106861 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249496438 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62689475 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371846446 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664573693 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364180928 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.379460264 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.360220912 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363143147 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36691198 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.383642537 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371877087 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.374036681 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363932454 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362098 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93849385 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23485676 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967339547 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363628026 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.362122113 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390217477 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.127005176 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382049838 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364847774 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627608408 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123863871 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380949554 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889091639 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.37996536 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242979728 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667769891 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597907248 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363966955 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.36548433 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668476867 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576879692 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397849966 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362475017 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368853238 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.34826395 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974598673 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383964674 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444186008 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125669505 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382149519 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368176452 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.371070056 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.383068207 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814161209 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38313864 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363108776 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362446962 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368425148 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234640426 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371449517 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364973528 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049626029 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380553312 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.890722359 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383983572 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610882744 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.377802578 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.365848535 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.381205487 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.372745863 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.628466644 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668944052 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366517018 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381989165 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976899369 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.237392961 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.371693387 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366764023 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194278343 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368177954 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695484923 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.367620757 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.368608999 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387620509 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369650238 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366769954 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.365254607 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376148264 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336839683 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92306046 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.368627361 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384210432 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368036309 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371621538 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62470118 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.380853651 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.02819962 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601370359 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374863134 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390737712 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.371767066 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372962295 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.353271818 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367934328 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368311845 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380504646 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594542136 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366337869 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.353571788 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462350872 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577056064 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36852307 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368950474 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640082713 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.365861832 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.37364969 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239922363 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403019769 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371844731 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372160682 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369544737 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409972346 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441979134 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616837875 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.382875496 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383604271 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821151682 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391780677 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371570441 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.384525128 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467506486 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374682348 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.369601084 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.149014641 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035695535 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195984341 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.037132277 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679346186 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372454431 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379473998 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372211068 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534946334 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372042348 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645665348 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372346366 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.370400841 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39464222 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381574909 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410836447 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589895256 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648493671 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372885605 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380790831 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381218347 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.374307447 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386582628 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.584710871 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928234421 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990081676 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376754446 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374721645 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141986976 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665427882 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375172956 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375044533 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374992808 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.374072771 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37506742 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.379797392 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373628923 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520052485 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677053159 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082679453 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.402103275 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.400848888 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.893092861 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380582953 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633252735 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370753161 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642891778 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04007167 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.167468637 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643513882 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445005769 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619623124 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.372640474 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535886174 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.392842659 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376869501 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374071592 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379172251 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.370835575 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.385715888 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044716306 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645560278 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.379661753 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.392348318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410941755 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.387389008 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.601762982 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225935176 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605339997 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386535519 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381346526 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376244819 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052597215 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681039503 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37892042 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.378665824 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64724147 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375583223 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400218216 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.063646118 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.373988473 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004886528 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.352615986 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399548081 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378779472 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175307299 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046492585 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.381752048 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969698037 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383768867 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379394316 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655447371 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.384591634 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380491516 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658918428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.383467447 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377183076 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628084703 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.042995636 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.286276722 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.38757295 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380903762 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.384992304 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37932437 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416834753 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378383608 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379369306 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.848299368 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39804144 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381410511 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390778359 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.377074503 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379816208 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.380403356 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380096035 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.387517258 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.383072615 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.381962185 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380518571 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479240601 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005372963 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39984252 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.051883894 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.706254852 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636721287 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379093208 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.369201443 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.382899008 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377637129 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381036333 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380371804 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378232085 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038938612 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.384571071 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.394464708 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382411598 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.380138606 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592498563 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381567193 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659539591 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384532512 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397897497 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.366299339 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381763412 seconds)
  done (took 976.791662102 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.419320878 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.4163801 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.414622422 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.447755366 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407621493 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.511438289 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.406267248 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41905177 seconds)
  done (took 20.721554817 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.394306628 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.392909145 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.390098029 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.395908385 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.398037582 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.94095661 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.411342448 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.397810714 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.402618207 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.385454077 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.387583359 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.373740132 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.418264673 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.383764167 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.380723731 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.398354813 seconds)
  done (took 33.141780019 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.788249387 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.659033812 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.17029229 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.464096236 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.390665191 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.388864865 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.834366462 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.408779933 seconds)
  done (took 28.389029223 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.397215611 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.396897071 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.397047568 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.395939798 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.398190732 seconds)
  done (took 8.267564533 seconds)
done (took 1241.133233156 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.389485795 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.393946896 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.390071772 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.392847329 seconds)
  done (took 6.845997674 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.374330181 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.371134096 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.370650358 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.385191928 seconds)
  done (took 9.782817726 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.201983385 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.087439674 seconds)
  done (took 5.573792671 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.900552109 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.901937108 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.903283551 seconds)
  done (took 6.989731813 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.704836427 seconds)
  done (took 2.98726783 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.331103137 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.383030246 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.094973366 seconds)
  done (took 8.090191102 seconds)
done (took 41.549506147 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387437176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.648401671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.542869904 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.384669419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.564099934 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.544624158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.155813726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401248399 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.383881904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41404033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.385943538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.546182173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.139428323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.631908196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.136638016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.633458499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.547342403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.39862076 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388019775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391225916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.159395745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.392919656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.384958645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393742325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.549674419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.533913368 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.402645986 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.629302457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.390549838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.394606707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.535652308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.397326466 seconds)
  done (took 83.070463297 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.389809077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.397095438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384886215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415237795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.385509128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.411664529 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.41437145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.386689943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.387005847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.391941623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.404308597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.403165953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.398603834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.38801745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.423875427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.389347179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.414545112 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.389524696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.41031796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405337668 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.401477277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38970242 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.386014466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.397501701 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.392919899 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.405475769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.408862625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.414291672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.386523224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.404695594 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.393661836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414616997 seconds)
  done (took 78.072481139 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401241707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391800701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412216895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392307014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.397867173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.412153216 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.390984155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392912707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.39031761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.39357873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421348466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.390187934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.407407593 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.406877995 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.392479257 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.391761504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.399426518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404554706 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.3912323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.392519202 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.392697206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391188864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.390921963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393716355 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.407731504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.390887289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.420946204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.393210174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.390115148 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.390153802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.396175358 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.430574573 seconds)
  done (took 78.050925292 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.67390899 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.400983235 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.400921401 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.394948949 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.399858228 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.398460054 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.391572009 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.673521604 seconds)
  done (took 15.024427632 seconds)
done (took 255.500437787 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.393962108 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.991238967 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.44520274 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.395842134 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.422851938 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426566246 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.64577225 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441420948 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.641977812 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.420817992 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.420811982 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.402065681 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.344539865 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.562156142 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.318607513 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.404018922 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.401835407 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.40164071 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.060015077 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.689566044 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.41947568 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.392461229 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.313995203 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.428522498 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.392354214 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490915727 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.514734704 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.628171542 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.565208003 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489923369 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.982591099 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.399360823 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.393209729 seconds)
  done (took 65.932276912 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.403973545 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.516014093 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.400640359 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.403840001 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.519872946 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.400989474 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.400070206 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.402045447 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.403919054 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.400920655 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.403176664 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.40592901 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.403419926 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.449785527 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.525727727 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.421138006 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.403079154 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.51470343 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.403409635 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.394489431 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.445076349 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.403066316 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.405934559 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.451024697 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.403100277 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.404177079 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.518496959 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.40539118 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.399623496 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.519528183 seconds)
  done (took 44.225648838 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.406607162 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.06976271 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.218950711 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.410687568 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.402475106 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.410056846 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.737758543 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.407754714 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.407232128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.408969453 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.981089761 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.409020274 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445247211 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.24876769 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.406710833 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.408094303 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.408200349 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.40427124 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.081027171 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.416321441 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.76391389 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.405112387 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.739519158 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.418593934 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.432150206 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408017263 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.412319845 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.329014502 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.407069658 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.975394122 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.328432544 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.743734025 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.27196331 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.233152179 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.327425442 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.410226738 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.407195548 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.005249135 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.410540096 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.408147961 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.756104714 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.406964416 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.234540917 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.132396089 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.430871722 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.408996938 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.344592253 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.986897844 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.690955812 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.414597854 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.268957852 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.410633483 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.406857197 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.409310573 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.691721324 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.412363174 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.409817393 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.382868615 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.413973112 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.744227779 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.408596994 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.409502444 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.093801576 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.410551843 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.078060895 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.410999845 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.418614203 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433776623 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.241836871 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.411371303 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.158606693 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.429690605 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.407718265 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.976364045 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.077128263 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.403432439 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.411986666 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.089298871 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.300613244 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.742576422 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.416064491 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.310080114 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.74822269 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.413189026 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.414048111 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.40961891 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.407731024 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.48759221 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.743727348 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.097401288 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.157039196 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.405936149 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.746788709 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.417250893 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.409276815 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.386161856 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.411643803 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.412143803 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.233757704 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.148075287 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.433184441 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423635896 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.170952757 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.433055725 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.766246749 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.417518892 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.261596135 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.409420847 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.488013633 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.415629731 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.421200184 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.434820822 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.747305605 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.417683571 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.41323337 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.133080117 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.018055105 seconds)
  done (took 200.881112406 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.407248356 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.406066665 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.406965559 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.405333285 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.406391294 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416526605 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.408224849 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.409926772 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416456406 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.40907137 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.407927833 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.418990685 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.415823135 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.409950554 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.409172404 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.423935697 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.427463767 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.40993225 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.423927732 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.410122525 seconds)
  done (took 45.55185945 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417318042 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.112417349 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.065539475 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.417759943 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.412496619 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.416043873 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.482748606 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416298758 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.414757128 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.76197834 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.623676704 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.435575951 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.411977064 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.415969107 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.063011915 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.406422927 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.767193143 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.063042762 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.414039363 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.068231024 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.405914315 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.417800361 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.416694201 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.067324957 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.762879526 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.751383767 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.484880853 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.066760458 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.415637291 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.41633156 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.066564628 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.414760923 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.415372786 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.05979903 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.43447155 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.428122794 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.412101522 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.487107461 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.490953474 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.767464484 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.134861726 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.766080254 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.430662022 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.603193822 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.417267585 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.405638604 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067772664 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.438324624 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.408080714 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.415874736 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.42115691 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.06634797 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.439870587 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.066760494 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.437103548 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.416263762 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.118081499 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.069349221 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.087484239 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.62844572 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.44099736 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.770569139 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.421438164 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.087396229 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.435352074 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.417835437 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.419738588 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.631879173 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.119550117 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.772158893 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.778268921 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.7726677 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.423013121 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.48916275 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.440467547 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.832877816 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.489508206 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.868910685 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.773259438 seconds)
  done (took 131.298491165 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.732373529 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.547687095 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.87801765 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.075244587 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.412404939 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.555178137 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.542768357 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.702249542 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.41849985 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.496523534 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.148004869 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.529276757 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.240454533 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.50018617 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532687139 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.586879395 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.857179635 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.415837644 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.117749351 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.129913513 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.417230504 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.5322839 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.004085571 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.659082608 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.423906598 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.999928938 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.439785575 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.148568734 seconds)
  done (took 55.35175233 seconds)
done (took 544.529081702 seconds)
SAVING RESULT...
DONE!
