cset: moving following pidspec: 13509
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.951812044 seconds)
loading group "string"... done (took 0.580125066 seconds)
loading group "linalg"... done (took 8.945078554 seconds)
loading group "parallel"... done (took 0.172456924 seconds)
loading group "find"... done (took 1.460135576 seconds)
loading group "tuple"... done (took 2.117292495 seconds)
loading group "dates"... done (took 1.392769528 seconds)
loading group "micro"... done (took 0.22170886 seconds)
loading group "io"... done (took 0.621653819 seconds)
loading group "scalar"... done (took 44.351577524 seconds)
loading group "sparse"... done (took 13.599561063 seconds)
loading group "broadcast"... done (took 1.095869633 seconds)
loading group "union"... done (took 12.544718642 seconds)
loading group "simd"... done (took 2.608974729 seconds)
loading group "random"... done (took 10.679411993 seconds)
loading group "problem"... done (took 1833.475981498 seconds)
loading group "array"... done (took 26.919798774 seconds)
loading group "misc"... done (took 1.170161748 seconds)
loading group "sort"... done (took 4.014866587 seconds)
loading group "collection"... done (took 19.963073647 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.695781702 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139540936 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.170428363 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.351580819 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19575371 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164998213 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.151980543 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.578661831 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.002215318 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211324798 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145957522 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.552143647 seconds)
done (took 6.077927426 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.295956603 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.442050483 seconds)
    (2/2) benchmarking "String"...
    done (took 0.114946855 seconds)
  done (took 1.226445728 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094917974 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.18111405 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095935913 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112594733 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112349486 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112734532 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095587791 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113009612 seconds)
  done (took 1.488703407 seconds)
done (took 3.777155023 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.499843113 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.852295684 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.506255174 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.134432055 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157590695 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149580923 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.306939766 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161016699 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12041494 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086963764 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171787482 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.379930279 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475047376 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959533811 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089464549 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130517751 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.084975625 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.723315033 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081509898 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.140080206 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.524603627 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.128729375 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120517584 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142650739 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193801635 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133325444 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170085131 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.098018255 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.881654778 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105188966 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185758147 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.102031215 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167052011 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25178097 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.098444238 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09464636 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 1.029975934 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.177894879 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112793193 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103689153 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.94023283 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080986631 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194041422 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10555565 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109669675 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.230850017 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115163815 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081374523 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104943399 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.094099106 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169624582 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.652274347 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106586836 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.148780278 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107993498 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.923551884 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099750551 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159857851 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141506123 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109203378 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100109444 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107101002 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.174127154 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109914946 seconds)
  done (took 20.971824257 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.120032411 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142504062 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096510159 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142331653 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13862435 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096685293 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083760527 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09661504 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111889511 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186603143 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136352318 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142832096 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091418652 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083878156 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119881566 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250524337 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104225633 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121874308 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08156466 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10785289 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141463826 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096758713 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109749617 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109156707 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169915716 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207264999 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111394157 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126334712 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096425759 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10184351 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144547164 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163663063 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07620587 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.096975744 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186712668 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121492902 seconds)
  done (took 5.195351588 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.147254135 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.208157284 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.101510269 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212967663 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.184596062 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153569859 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.173140165 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123318715 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.278532289 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.205043597 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169542616 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130880785 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113205399 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081696169 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098133558 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081819465 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.690751021 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.184331976 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154340519 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128457913 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105669125 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084727301 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.570601022 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101846051 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083737699 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104861618 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073557207 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.180347032 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106277184 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.443066508 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.08572079 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118912386 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106967988 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131207893 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117645687 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141557219 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102710779 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084125679 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.238129012 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095823097 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098239084 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113507695 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137511493 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13730248 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101354927 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09733547 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.245502273 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083130867 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121664151 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.136765705 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198684685 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.153660263 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082312712 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.378789266 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100275821 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104498185 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080171771 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.349807754 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135005049 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.133717566 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081951259 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100123871 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104388555 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080975691 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.748551516 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107320354 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.646995492 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083551059 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158719542 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101465989 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089776415 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103279337 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.101180932 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087472316 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105750691 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104390715 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100988997 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080344158 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09960988 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079767303 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104428287 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117004147 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087371054 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09838416 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149121603 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117973321 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120674278 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112515933 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104192349 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081005346 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133936701 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097509777 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084018519 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.150106441 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106900447 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118159733 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085238476 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.148145896 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100076064 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.248251703 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084008685 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127725128 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103058232 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116740142 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.123998606 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100474705 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086991409 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099270803 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081653838 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167523876 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084053443 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081626139 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104009567 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101676408 seconds)
  done (took 25.51642113 seconds)
done (took 52.349574768 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.477465237 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098535231 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114198685 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113955289 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111780114 seconds)
  done (took 1.659263257 seconds)
done (took 2.374301192 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.34273469 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192059299 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101978082 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.198408115 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087700931 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.205627283 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167449384 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117354389 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.19804063 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100273586 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177072132 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100284361 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087988009 seconds)
  done (took 2.821195136 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096292319 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121617219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082650515 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112153002 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076967112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111487158 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094465015 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.135294228 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093943252 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10530099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077894028 seconds)
  done (took 1.821232667 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093176669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116967439 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083611731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109488669 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077549869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092135014 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110221418 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119112626 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092855715 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10576748 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078153499 seconds)
  done (took 1.792256096 seconds)
done (took 7.139682081 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.05872006 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.459083393 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.123147508 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.171450651 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.351101208 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214810993 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.534545373 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.136812023 seconds)
  done (took 11.957616383 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.118110266 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099460062 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082321487 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101092958 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083954269 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.120418974 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084154883 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100653972 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085257404 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101511852 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082762231 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101900093 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08269322 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102373277 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084874741 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09827056 seconds)
  done (took 2.306337167 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122474179 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120002025 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106454979 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111028762 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087065081 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103774689 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088574928 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104629725 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0853442 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103825236 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109054666 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092527565 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107546135 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084866875 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106451649 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093207584 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102913824 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105880788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090439087 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107383543 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092689661 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104883386 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10784908 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092460381 seconds)
  done (took 3.256698695 seconds)
done (took 18.234944836 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.173122385 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087770275 seconds)
  done (took 0.976145451 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.105330542 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123528682 seconds)
  done (took 0.950377596 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110473252 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100229481 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139823949 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119249203 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084513098 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100000612 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117736029 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101615642 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083315777 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.102865488 seconds)
  done (took 1.782206884 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088788572 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104230031 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.09300962 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.123015234 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112691979 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085513892 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106708751 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087807097 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106915884 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08324981 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.109029905 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120425688 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090405653 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123486861 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089727174 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107672216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111240811 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.088581232 seconds)
  done (took 2.557872802 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083912302 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085494322 seconds)
  done (took 0.896220857 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086847635 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099086863 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086342228 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103712724 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082202527 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.099029475 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081998223 seconds)
  done (took 1.366992655 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.523759874 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26238677 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340676029 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101163313 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.157687225 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.37861323 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.13674696 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114407276 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114533653 seconds)
  done (took 2.901990553 seconds)
done (took 12.152388712 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094608304 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.19617064 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.554934096 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.119183489 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080708694 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162420332 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.264880329 seconds)
done (took 2.19988217 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358922743 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.129672877 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091213984 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081936216 seconds)
  done (took 1.387505965 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083594339 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106061329 seconds)
  done (took 0.920653474 seconds)
done (took 3.043920488 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081518969 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080806816 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.118608398 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098504681 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081571194 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098483209 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078467091 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081099485 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099672819 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079879383 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098866631 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081315486 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098595062 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079315594 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078209273 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098355978 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078567582 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096701059 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07838918 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099215929 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078520844 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096626469 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081583256 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078888713 seconds)
  done (took 2.908027275 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102142805 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099811868 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087761047 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.229480667 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.086139943 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105355174 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104889749 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08321553 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105979234 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084957763 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104290609 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086614426 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102266058 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086807263 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102924918 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10438722 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088415682 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100476246 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08603254 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104853277 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.088409009 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100683901 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087286008 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105905974 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104291261 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08501693 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099499733 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080962263 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103352237 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0837329 seconds)
  done (took 3.727238149 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088884906 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.078228461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096558131 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.090494585 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09797007 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083966405 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.097557197 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080186028 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099482626 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08068231 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.100509748 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080108616 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097277301 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082052097 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0813621 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.106091347 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116344371 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079040631 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079148287 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099077411 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086302018 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097067913 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083355004 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.098495973 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080183321 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.097752676 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079842421 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079232875 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098398207 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0787474 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102832185 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086309652 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096409118 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093538209 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104635433 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078718021 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.106245038 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078861191 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098096033 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079130312 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097284471 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.079323569 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079359375 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.108793334 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082949419 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099102771 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079688275 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0979971 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081025451 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100543419 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079494912 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096933229 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08222499 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099102263 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084820392 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079261688 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099870658 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078531078 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098610316 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078130129 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093935607 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077481036 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101232481 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078537643 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118700237 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090094421 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095102873 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080316289 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099491454 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085923533 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098140016 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09701353 seconds)
  done (took 7.254152949 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083731143 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106126273 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080241896 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096950116 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075754668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07750905 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102405761 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095531272 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08012856 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114241136 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077772622 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096690505 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079363647 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101375992 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078873593 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099741422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090658681 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095929056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080079756 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101325462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080806841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104781365 seconds)
  done (took 2.742534018 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22893751 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105587023 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144898938 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115186399 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097882637 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112467867 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102582716 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086852142 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102363208 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089425166 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105775518 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08588024 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115400596 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106114923 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089107246 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107699534 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103283565 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091140391 seconds)
  done (took 2.731143453 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095538589 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098515078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106826427 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099366655 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081904368 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102314803 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087981548 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114931793 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102324519 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082313753 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111637379 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08758982 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104498893 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084477483 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105214659 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084344945 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104246722 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084665841 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113618894 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108928662 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089210509 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109691609 seconds)
  done (took 2.90394184 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099750871 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101033073 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113029765 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104062918 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077147582 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098742472 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089090227 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099018464 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108101941 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083629948 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099170177 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080677195 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106309061 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081895608 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10554348 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082040904 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102266137 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083002199 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100794804 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07726376 seconds)
  done (took 2.636260943 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130443341 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119617858 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102208683 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131371045 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121373806 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102750383 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131968273 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119689014 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103147637 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130102442 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098993473 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116357166 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127507039 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106413676 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11873676 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130378074 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114077585 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131798721 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120552241 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102779899 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133876133 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120630999 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114490275 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121071805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101854258 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123809848 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120273181 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109111721 seconds)
  done (took 4.052324842 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08447183 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084527757 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.100275326 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.082193452 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.100102834 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081394526 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.100174824 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.081766632 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084595667 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100621312 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084375244 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102630143 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084289331 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.103001451 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0851592 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102322489 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084695767 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080852095 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100328362 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081764057 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.10250858 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084150356 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.10185449 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081475045 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080703082 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101218914 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079881384 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098859741 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083497338 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099337258 seconds)
  done (took 3.470315692 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092268227 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10533217 seconds)
  done (took 0.945493866 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081307674 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11812828 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080002151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104585937 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090002092 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100931942 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093258223 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106351937 seconds)
  done (took 1.522836619 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.110312498 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.124445375 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091207554 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116436641 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.105489534 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.124006801 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172200157 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091535586 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112296712 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086245491 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.124540607 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084420287 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114487494 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109083377 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095638779 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119588422 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084078873 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115060261 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093858772 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10726011 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092303521 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121966721 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096367484 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111498951 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087882345 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116359885 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118744817 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.097815484 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109745019 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098750188 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111599349 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078860851 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110156655 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092309453 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102621813 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.106739494 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122704183 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092212855 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11551551 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091887217 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116343029 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099157909 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097153271 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.11149839 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100046044 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.107924546 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091632704 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099533337 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087169786 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108658235 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.08128471 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108406343 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079820032 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114095894 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093979687 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122621442 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085709821 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107183098 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087564088 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103984455 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089974698 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105406169 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111201034 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087293786 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111214042 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092667852 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108973799 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078672488 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094541808 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082365183 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110599579 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10956885 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112674904 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088381464 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107171852 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080726636 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107014914 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089207049 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109138036 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.122486946 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087240434 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108031159 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093824032 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104549057 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087011525 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10757581 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085139168 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104585 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085713364 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125312708 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088344055 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.10280554 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086377366 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115768344 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090686116 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.108494538 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086685709 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115086249 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079610731 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109514652 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09203207 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111337187 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097893624 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109805479 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110539465 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095651051 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.117394782 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091919924 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107991609 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082473206 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111457911 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087562066 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113297483 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08032978 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110297781 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090887353 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110962653 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096999084 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.107043471 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.092662794 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11597697 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09802727 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.107819319 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082622367 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109879953 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091661821 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114431187 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097917248 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108316073 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081028625 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100354218 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094846461 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.11008204 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092544361 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11201075 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090976724 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100230133 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083791701 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110752525 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.115382762 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090104236 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111031923 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096800801 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112502422 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089307338 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114888559 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089522343 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105471338 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.096169337 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109569267 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080920352 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115060902 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090066588 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.107390423 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091873055 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114626971 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090119451 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.110538916 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089784626 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.11090168 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091775194 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10528046 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091907578 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.107961824 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.099381733 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111808029 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081271548 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103155132 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093004209 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106914599 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090425043 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105347879 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091592095 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.110916187 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085420302 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.109546353 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090852437 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124153045 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119018574 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09301849 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113732849 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099691947 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.110070235 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094802652 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.109554301 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093637882 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.111727239 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097061425 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.113857923 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092749755 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109883704 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083571714 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113699034 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098346896 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105865605 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.085086702 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106089446 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092265065 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117525232 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091964145 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.112071449 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090371574 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11240822 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097656649 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.110576898 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091528522 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106584328 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093549383 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.115878279 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093939335 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11144744 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099059463 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112279253 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081586096 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114469275 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088163219 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114436264 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08203937 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106117795 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087521408 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.112434233 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089816831 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109080614 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081511652 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115758436 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097624265 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112292071 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087247232 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.111150499 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120407847 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091014321 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114274694 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092257253 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112356453 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106358329 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105843174 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09095393 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117264131 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092370997 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100011317 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095201663 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.108938649 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086757394 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.109711333 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090245271 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112290092 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095756458 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112945841 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.08136757 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.110529771 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.090143035 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107984116 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083331656 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115788998 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093695464 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111218263 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101543444 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113967838 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.093109604 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113617329 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091480144 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.113572884 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112610599 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09400055 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.114803973 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089871885 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106546351 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092769668 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105636839 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084960177 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090515743 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.111765821 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112170585 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094710031 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.110067194 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097698755 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111271654 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093903718 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.130530931 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10767049 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086527177 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112414879 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094285003 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110046383 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091122759 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101659292 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097990024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.110757973 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098493133 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109948189 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083412101 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109146528 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087865608 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10857058 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090595292 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110810189 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088301755 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108130538 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089946658 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11780434 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084905198 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113226593 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090954363 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109339615 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087171111 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107826424 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087608532 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103420514 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088036722 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107979113 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089249923 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105861678 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109264115 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088541201 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106630993 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088068938 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.113120473 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093964937 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.113171868 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07950948 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102723411 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083973626 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.089608639 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11521487 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.109911572 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088165302 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.109664384 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093193492 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.090487183 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103504028 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097475935 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116010757 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.093508289 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121010999 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106485394 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09198599 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12031266 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079897634 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.107314017 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082718211 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103554398 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094777288 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109755362 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096380799 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111699739 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087831811 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102825788 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09105125 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106621376 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08001398 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101890394 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092805789 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105553083 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08720129 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108672059 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092444869 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108522492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093468572 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108165626 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089369518 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109854944 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084265868 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10895374 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089639553 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112780131 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.097050494 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.108717177 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.086615184 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.112263224 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094927413 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113399584 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.093252343 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.112562436 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100432402 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112660491 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092943267 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119423343 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08352316 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113288068 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09144358 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.11037408 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085763886 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108957698 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092539996 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113902971 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097884731 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.112053941 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094639756 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110488202 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084444838 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.108265887 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089788227 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.1093617 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087672679 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.113432898 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101324651 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.107078883 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094619963 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114408504 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091796678 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114870965 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09570647 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114230168 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098828285 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.114879558 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095241433 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.118050865 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093897151 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115668264 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09526555 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.113201235 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116122499 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088128342 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117937616 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091993056 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110846501 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088489843 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.105323602 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08964862 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.108572241 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088752798 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114056368 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091464602 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104285864 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085464877 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102580503 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.0896757 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112939581 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096642487 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108211682 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091933191 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10091334 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081943981 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11136491 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08777067 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.11174071 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096225732 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117896789 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093929352 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109846931 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.091679474 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.118622254 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098485343 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.117093028 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09108113 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.116897239 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.095840404 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.115669713 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090965095 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114753314 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095487202 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.118311071 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112488324 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091841442 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123429581 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099301239 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115243898 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090474548 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.111878804 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089143004 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09909241 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.093114166 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.1112698 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093450923 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111880938 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089072259 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119492689 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084483957 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108417411 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095180953 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10833117 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113881686 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081476601 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10987563 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091773744 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113281362 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083504382 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108672864 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089069493 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112377027 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088848202 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.084376633 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125770175 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116449892 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093233755 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111654547 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090277712 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105277892 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084563532 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109438151 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095527463 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113621206 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.103878576 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109621159 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088941183 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104742505 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093264612 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116493058 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097738642 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.107226042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.086079483 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091191858 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115552305 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11709773 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089133871 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.113526508 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095063902 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114088837 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087349293 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120393587 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087495318 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116281177 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10780738 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.115691671 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097235094 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.118706442 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101724203 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.114737193 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.085050579 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.115625469 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095403143 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114533551 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.094165264 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.114150083 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127811533 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093441703 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.108435655 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089602278 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110960804 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087253799 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120445243 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094618056 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.116247268 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097966289 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113774911 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098075557 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123449906 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097803011 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.11780225 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115082121 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090332966 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112042444 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09000187 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092156178 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.115295119 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092138895 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110725878 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.097368699 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.11060952 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12371051 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09890656 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.115902858 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086691239 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.11068038 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090985914 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104947742 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096030612 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.108761959 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.094002109 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.093002951 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.114485183 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096691449 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115416085 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108890867 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.092154459 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.092851391 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102492933 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09650976 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112703298 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111594818 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083092921 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090565867 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114581629 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113992065 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095928509 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108164286 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091532988 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107769448 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092989217 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101352364 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093695775 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108005216 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08986199 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105932082 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090015927 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111871421 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095221959 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114119675 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094486383 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11329542 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099318226 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118557029 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087586081 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.1087361 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096892323 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108791604 seconds)
  done (took 61.495597785 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154573184 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090048441 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101472839 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081073516 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127030962 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082833308 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100669986 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082852442 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101760253 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095168712 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100789194 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080918727 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122889849 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12897696 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126017979 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115527691 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081792936 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10343563 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08323879 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106839993 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106077776 seconds)
  done (took 2.974860778 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108717211 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124106557 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124960758 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109637769 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118403357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118985235 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098094723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120183525 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122792538 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114431898 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104129705 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119904485 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.113516451 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094478192 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114379326 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116589812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103548482 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113961903 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119052692 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098826906 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116651413 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117294246 seconds)
  done (took 3.292545759 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094739188 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088869409 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.11520838 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082850679 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108987624 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.083472303 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.114000499 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085854969 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113994607 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090240438 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107220517 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091872733 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.118441215 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.08571792 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107232458 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085873192 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113238491 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089606325 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109862197 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084343804 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.12949291 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103703105 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.085457284 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086495995 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119466369 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090687224 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.110358708 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090433005 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.107901791 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091836118 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.107916998 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091318274 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11411983 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086927935 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107562245 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.091476382 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.110236466 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.084548956 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.106641515 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093441476 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.10519953 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.091553933 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117822397 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086733291 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106697274 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091895581 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110159517 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.086637192 seconds)
  done (took 5.579762958 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12739192 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164737984 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095225381 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.169436117 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131989277 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121199844 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.097021994 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.155043659 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109606706 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.09019121 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128845732 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125103763 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091992687 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.119537925 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094347027 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112226509 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114263137 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09568502 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121603932 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089788484 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119396813 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113150115 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105145947 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122945411 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114320252 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089798458 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11026865 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10007815 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123096581 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116541317 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.097083525 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121043554 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130765152 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095037287 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.113570385 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112567408 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.107056234 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111881463 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092971135 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108690458 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112655711 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.100151618 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113018773 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126853595 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092744827 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111479572 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.094259809 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.112873577 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128590562 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.098057172 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.1199208 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12480002 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095996003 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111632125 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096906211 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129192301 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110855653 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089499524 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114518261 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121880943 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.091104212 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1204021 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109223484 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116822072 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119518101 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10442484 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113825217 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114840472 seconds)
  done (took 8.609500253 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099684308 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.136198924 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127764693 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107195632 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115910433 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114771189 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097348796 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.116080478 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096217217 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123480603 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116258712 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167530978 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08956369 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122088858 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095467087 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116779357 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115360771 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096223281 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115682187 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096840958 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117520348 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127041696 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096585516 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128149682 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129052097 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108666006 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097132763 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115565744 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107680817 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116340561 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128866243 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116306468 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097788122 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127646481 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12915331 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097315087 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105980291 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095728546 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116386692 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115161377 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090075213 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126729581 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096141675 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110120369 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115658358 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097155687 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127191819 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130280131 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122442153 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10421723 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115263316 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126519319 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096689451 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115484134 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127004305 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136045656 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107773682 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127321361 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116237265 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107394964 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128756727 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136034147 seconds)
  done (took 7.911642635 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089939541 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086918669 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105643286 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084881538 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107353331 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08574763 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107069468 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087873937 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086478477 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108417679 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087300961 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105368545 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084930193 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106589268 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08548809 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104165003 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085419967 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08500798 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107464434 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085007727 seconds)
  done (took 2.697682435 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096992136 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128270856 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088536087 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116161494 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090581506 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115851006 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109401103 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092280371 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108994808 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091841908 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119973264 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100729594 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110312014 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115100537 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101232009 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115977917 seconds)
  done (took 2.519539405 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.110017675 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122546383 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.135873759 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09366489 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106819418 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.09613146 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107997414 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083915843 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104136011 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096838738 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114293844 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098996187 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.1084236 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086379689 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108455015 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094766044 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104233354 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092383952 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108200746 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.114579569 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114753093 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111386885 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.090260484 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110798301 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091371978 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113934983 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095712444 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108185228 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086048793 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107924505 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090557236 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116736998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083939314 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.114448633 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086578396 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106127757 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087275997 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109614124 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093275516 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109260949 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08543859 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112867059 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087002778 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111142478 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082647115 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109777139 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083629996 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116235494 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109446195 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091823612 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108276816 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.097345502 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115788288 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10091763 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.119548468 seconds)
  done (took 6.464283478 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104783509 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112246277 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093175071 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105801472 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091548527 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.117225703 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093541969 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110990229 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091257877 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106288755 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091420605 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112476399 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091108614 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113081727 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090640222 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113278505 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083276554 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110886374 seconds)
  done (took 2.651597001 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095804662 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107783971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096388144 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107810987 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088840862 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089057672 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105743383 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086255958 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107963883 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087885279 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108984244 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090642108 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10684161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091162791 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108265661 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088744971 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110686107 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086751157 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10813591 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084089686 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110801484 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086784326 seconds)
  done (took 2.973301307 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.107537881 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.142742302 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107758174 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.155014124 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.115516225 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092035614 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.124057597 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09360019 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132530406 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112541926 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092775691 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.111695478 seconds)
  done (took 2.213852057 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116593317 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148172646 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085921908 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1120764 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121963721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095076768 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113808926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094154363 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127318653 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12765625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093641598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128377016 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126472008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12615438 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101016599 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123691902 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114112629 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094834704 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110187104 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135701967 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094215265 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126705713 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112921393 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095291948 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113740355 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124959671 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106673096 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127648276 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114649706 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106192014 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12324296 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114354246 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105693116 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129044129 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112303192 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126126417 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094682387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136208456 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121498531 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10479868 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113350874 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12231178 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10649757 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122909812 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126403972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093637365 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122904106 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114375194 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095072589 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142373274 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123997592 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125642762 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101746471 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127597519 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127231673 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143161607 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129000397 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125875109 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102392704 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128570307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126261926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12226162 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105831134 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128906295 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122635411 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126850271 seconds)
  done (took 8.541153993 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130644675 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108722489 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093125929 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130493881 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126856969 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114811613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094747333 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114148204 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093148828 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111892696 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162838253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11445115 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105219677 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126367452 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114806255 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094635431 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11473048 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125020637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091532665 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14283399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114569064 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126405849 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106383098 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127028858 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128620097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12300084 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094674033 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115165334 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094129595 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116160174 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121573328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094810238 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126849645 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1081658 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105752447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115841122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093314665 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123303388 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114789267 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101284521 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127355649 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136743892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115626886 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095051372 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129679555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115256181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094934915 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111687611 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093978761 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111855403 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128791372 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129768002 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107965864 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126979515 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114538743 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09377784 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115280424 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11404202 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094473796 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12227588 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125975129 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094697673 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142020232 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114974872 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0945909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126356275 seconds)
  done (took 8.372746084 seconds)
done (took 161.9200502 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.109017141 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147025943 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103718291 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173331829 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088736794 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.148695039 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122744257 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126259711 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088332216 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11077469 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0894227 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112919928 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165433398 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.110485221 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089860347 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112836337 seconds)
  done (took 2.726605399 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186033899 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.292484031 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109214642 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114774965 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095604229 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113582238 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092569482 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117976025 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09120067 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124269024 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111639271 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092832753 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122124433 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093140457 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111506578 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091959806 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12237487 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091026526 seconds)
  done (took 3.008411794 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116956445 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.210037427 seconds)
  done (took 1.164903949 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126714216 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191518011 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311486179 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166508537 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119239474 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.133639729 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.168540538 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130081319 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199252018 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13245352 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111389472 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118340165 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140329867 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101796721 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121117363 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095814398 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144421213 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.119319299 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098246648 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117805046 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117705953 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.119260039 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12200926 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099253423 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188546335 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133028142 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096461025 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.119830478 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118500147 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098112325 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122730625 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131224154 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11036929 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.194292916 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101412921 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.191307324 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103672842 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117881551 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097077516 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.117184432 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121223598 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099558364 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132875921 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094422986 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.119450916 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125003736 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.098130173 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117981551 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103432623 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127530582 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124080067 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10107591 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.190181762 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.104313418 seconds)
  done (took 7.843387953 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.850312978 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165954716 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116483874 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.967448561 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15119557 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130519938 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.854922476 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121337594 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268965954 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.158945967 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141392164 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130392205 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.217120619 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284542567 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.157282711 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.345633598 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.728354632 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133678196 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124103435 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160327136 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123303903 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146082913 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114215505 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.419205744 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117639046 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092712851 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123822324 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129085358 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169357281 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093278393 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120943649 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188483531 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.296662093 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186934021 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117798409 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092282597 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116542585 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176339461 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280453615 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226632551 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179944216 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090385787 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114945473 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107684589 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136717477 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089215929 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195603513 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181956931 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181841258 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120193282 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128424985 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102827548 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132555542 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169632403 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.113758433 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343440151 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347710792 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094181436 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124863393 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112537061 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276401214 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115196057 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210736964 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143303834 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222680228 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092181814 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807630852 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174930399 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116566381 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123339608 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102370944 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121953073 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104711082 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173733167 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.385139868 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131229506 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119589623 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093761393 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248882503 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094032693 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115261359 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174195451 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094283018 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126935206 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131973238 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106731047 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.204326301 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.259985548 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130570578 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101973452 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121618445 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127697424 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096019647 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.222882826 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227173535 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.188487261 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.224935422 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128899813 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.174518738 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174250007 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127609781 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181078016 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124382122 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11213672 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12882577 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225544912 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151047863 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093713964 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121477375 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122696675 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152828077 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099702052 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122856672 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17807594 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.447967754 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.196341979 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091724508 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119001378 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103404322 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170058934 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123728906 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269363254 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104036961 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.198056632 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101281439 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.113807631 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102873883 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.194909743 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108499212 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125787103 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129106046 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102292239 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280574426 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207266661 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131268183 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243181811 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184542447 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10466522 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20293752 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103051592 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177319936 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12730916 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128612686 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095278137 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81159226 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129367714 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101080443 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122903747 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197124433 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092544604 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.118364769 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092390428 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113870671 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806112767 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097521904 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.090285312 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.11808713 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124068471 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10314178 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122634842 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099228973 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192452122 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240818552 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107762808 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125316001 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09342925 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.192084556 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096971017 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115362854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095176026 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09418529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127099187 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120776477 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096385391 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180146468 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.191266545 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227495402 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.516980084 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116557652 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094110518 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239755871 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092904665 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316332755 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124995386 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233998459 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176583315 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090423519 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346365223 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.201307054 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197347964 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.098312009 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.180549374 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115251809 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100646618 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.194892415 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093546918 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1249271 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168238925 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134033998 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131047409 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143150054 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11748799 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236938447 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113213794 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.179018405 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095375595 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129076973 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321719872 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093544545 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138204849 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.170020162 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121256015 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093668325 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.626545578 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09409716 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128185187 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126515408 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230837527 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.175703412 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123725468 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103486909 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129412138 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172458008 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.218017898 seconds)
  done (took 45.996982477 seconds)
done (took 61.5712675 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319518857 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281868936 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.32328255 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205461791 seconds)
  done (took 2.068909764 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.189658352 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161601153 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.132698925 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116105277 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.163597722 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092016415 seconds)
  done (took 1.718832569 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.50338482 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.388188977 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.361204371 seconds)
  done (took 2.119715095 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.280978534 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.297734956 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.371210136 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.461442056 seconds)
  done (took 2.390108441 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.229758804 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.136802913 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.106546178 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.148158009 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.179812815 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.184000504 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150777785 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159902688 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.137509502 seconds)
  done (took 2.347807922 seconds)
done (took 11.51343908 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13500454 seconds)
    (2/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.290687534 seconds)
    (3/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.148128876 seconds)
    (4/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110070617 seconds)
    (5/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120132779 seconds)
    (6/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097116436 seconds)
    (7/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.174876764 seconds)
    (8/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.152399995 seconds)
    (9/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.145841985 seconds)
    (10/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.244027362 seconds)
    (11/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.19727828 seconds)
    (12/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098688754 seconds)
    (13/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.238497143 seconds)
    (14/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.126467088 seconds)
    (15/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.277885964 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.208660242 seconds)
    (17/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.254723195 seconds)
    (18/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.236922116 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098949016 seconds)
    (20/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.245361113 seconds)
    (21/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.13891559 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.168782288 seconds)
    (23/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078963227 seconds)
    (24/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.199088116 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.166741964 seconds)
    (26/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.20830583 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.165423733 seconds)
    (28/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.124644813 seconds)
    (29/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.224501909 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132205736 seconds)
    (31/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110712266 seconds)
    (32/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.279353773 seconds)
    (33/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.159992979 seconds)
    (34/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.204112732 seconds)
    (35/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.113171139 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101046876 seconds)
    (37/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.120869704 seconds)
    (38/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135974333 seconds)
    (39/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.149469886 seconds)
    (40/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140933149 seconds)
    (41/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.134816488 seconds)
    (42/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.220856479 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129948884 seconds)
    (44/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.26788996 seconds)
    (45/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07890074 seconds)
    (46/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.117594388 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095403285 seconds)
    (48/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.135342531 seconds)
    (49/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.221579648 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.149774173 seconds)
    (51/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080025456 seconds)
    (52/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.102272105 seconds)
    (53/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097761758 seconds)
    (54/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.17614982 seconds)
    (55/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.213139366 seconds)
    (56/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.259601651 seconds)
    (57/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.166016966 seconds)
    (58/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09542523 seconds)
    (59/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.13509265 seconds)
    (60/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080867062 seconds)
    (61/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.145208522 seconds)
    (62/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103584436 seconds)
    (63/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.16850677 seconds)
    (64/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.118648038 seconds)
    (65/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.130975019 seconds)
    (66/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.206068651 seconds)
    (67/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.145112507 seconds)
    (68/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.224709124 seconds)
    (69/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.111315341 seconds)
    (70/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.175673592 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.148958817 seconds)
    (72/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101828242 seconds)
    (73/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133568948 seconds)
    (74/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114335325 seconds)
    (75/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.119750196 seconds)
    (76/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096201324 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.14267056 seconds)
    (78/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.15537462 seconds)
    (79/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.253406284 seconds)
    (80/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081922926 seconds)
    (81/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131487079 seconds)
    (82/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081282679 seconds)
    (83/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.220927166 seconds)
    (84/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.124578235 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124502829 seconds)
    (86/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.134047101 seconds)
    (87/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078835207 seconds)
    (88/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.111330597 seconds)
    (89/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.212212858 seconds)
    (90/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080460427 seconds)
    (91/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.171758952 seconds)
    (92/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.10615556 seconds)
    (93/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119254011 seconds)
    (94/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080282284 seconds)
    (95/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.170976213 seconds)
    (96/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.094359635 seconds)
    (97/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124455631 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.10493001 seconds)
    (99/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200189049 seconds)
    (100/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10321899 seconds)
    (101/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.081335479 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115852102 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099768707 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.128842717 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100217561 seconds)
    (106/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.103492269 seconds)
    (107/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.203225127 seconds)
    (108/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100998709 seconds)
    (109/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.196547397 seconds)
    (110/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.216813013 seconds)
    (111/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.171934034 seconds)
    (112/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.195004439 seconds)
    (113/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124986402 seconds)
    (114/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079541439 seconds)
    (115/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116789078 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0969139 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.133860796 seconds)
    (118/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.217933947 seconds)
    (119/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.152058188 seconds)
    (120/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.081162542 seconds)
    (121/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.196894903 seconds)
    (122/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196592281 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10856615 seconds)
    (124/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.20276673 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.212255494 seconds)
    (126/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.103054607 seconds)
    (127/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.100733437 seconds)
    (128/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094955729 seconds)
    (129/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.125070274 seconds)
    (130/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.198080363 seconds)
    (131/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098104599 seconds)
    (132/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.12103215 seconds)
    (133/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.082242474 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.10322648 seconds)
    (135/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.080777815 seconds)
    (136/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.160018188 seconds)
    (137/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080076676 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.123099675 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099942947 seconds)
    (140/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119770535 seconds)
    (141/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096993467 seconds)
    (142/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115708319 seconds)
    (143/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.139508741 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124073398 seconds)
    (145/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.079695028 seconds)
    (146/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121982879 seconds)
    (147/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134765034 seconds)
    (148/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081369983 seconds)
    (149/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.090359332 seconds)
    (150/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.104251715 seconds)
    (151/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090556172 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123703573 seconds)
    (153/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.079390809 seconds)
    (154/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102704015 seconds)
    (155/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081569108 seconds)
    (156/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122618846 seconds)
    (157/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.082192914 seconds)
    (158/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.208005327 seconds)
    (159/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116854327 seconds)
    (160/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180306753 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.133395543 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.129874768 seconds)
    (163/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100813668 seconds)
    (164/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079145749 seconds)
    (165/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104801421 seconds)
    (166/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111882162 seconds)
    (167/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142059928 seconds)
    (168/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.154744238 seconds)
    (169/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.14081992 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12350061 seconds)
    (171/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.115252025 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123204525 seconds)
    (173/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081738893 seconds)
    (174/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.104609596 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095772352 seconds)
    (176/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.160418287 seconds)
    (177/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093059184 seconds)
    (178/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.16185949 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.123188971 seconds)
    (180/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.090265234 seconds)
    (181/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.143380262 seconds)
    (182/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.120878796 seconds)
    (183/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.103124471 seconds)
    (184/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082034587 seconds)
    (185/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136617311 seconds)
    (186/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082632656 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115564159 seconds)
    (188/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080575727 seconds)
    (189/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.087934444 seconds)
    (190/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118653315 seconds)
    (191/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.114701338 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120660392 seconds)
    (193/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.0807677 seconds)
    (194/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124292067 seconds)
    (195/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081079108 seconds)
    (196/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112021882 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.107931891 seconds)
    (198/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127495661 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100776864 seconds)
    (200/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.148181396 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.129300209 seconds)
    (202/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.08986924 seconds)
    (203/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080345368 seconds)
    (204/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12774348 seconds)
    (205/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.081899819 seconds)
    (206/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.104537526 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093756501 seconds)
    (208/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.13204625 seconds)
    (209/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082016263 seconds)
    (210/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.119739229 seconds)
    (211/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101366958 seconds)
    (212/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119122103 seconds)
    (213/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.089251736 seconds)
    (214/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122330993 seconds)
    (215/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097835524 seconds)
    (216/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.103815576 seconds)
    (217/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081151197 seconds)
    (218/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079687379 seconds)
    (219/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.113566958 seconds)
    (220/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.090259944 seconds)
    (221/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128094182 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100083536 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.105312221 seconds)
    (224/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08958423 seconds)
  done (took 31.007508954 seconds)
done (took 31.877892188 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.41470934 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134891623 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.129355485 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105178924 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149361844 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107976956 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.13048173 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.107270149 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.128514537 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094587882 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119565482 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.129351612 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105375547 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.146476361 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106885718 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121128752 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096041172 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130490129 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104603631 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132593528 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.148339687 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099271519 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12716138 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096838594 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149491124 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099411576 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128949507 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104777467 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127655664 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095150687 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.130258346 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119712793 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107174084 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132543169 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096151006 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.12105314 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096205628 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111907474 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096895431 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122677385 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104458452 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120886169 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106376616 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120583534 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098736261 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119926062 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095359569 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131783359 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094600276 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.130207891 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097442217 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.134912994 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117784452 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095735025 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118155016 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.098338555 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.128304651 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097010026 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128832519 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096047263 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121399385 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095829355 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123004553 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096919385 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119963104 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097899632 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121167091 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09846972 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11854993 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098334216 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117778296 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09770234 seconds)
done (took 9.467022176 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104923547 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175493668 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150985637 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.128205733 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.149284612 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135277819 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10882393 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14494496 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.129709092 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119828824 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148045375 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142092267 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.134194162 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.128533035 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.13531443 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100519667 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.126992537 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108259801 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.156225556 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.144627791 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151857884 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103563499 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14896026 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141732259 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103983545 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156763238 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103862845 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125054371 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102289696 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.135739347 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143594375 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103093144 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126975965 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114951554 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.134676918 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125545104 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111404382 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.124103069 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.100913586 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123936624 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137101053 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115750331 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.124527189 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.112091457 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124367085 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104036685 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.127817043 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126454993 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105155746 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122965638 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.106240336 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.148812213 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126445641 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104404697 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126495457 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.104984365 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126510091 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.10462242 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130205318 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128532791 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101330591 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126515859 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105829486 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145227177 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126739698 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103871796 seconds)
  done (took 9.182044048 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126165985 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158674422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135249714 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1122914 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131823469 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092892413 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.117340871 seconds)
  done (took 1.799826246 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.097862588 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.149351287 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128929844 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153318367 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141533476 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.13253607 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138242944 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.118854707 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.118460051 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129245749 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12346391 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175436195 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.119414394 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.107184343 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155791969 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118777144 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131450194 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119806904 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102637638 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.15331393 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124371437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117553733 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133600943 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095880348 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142683113 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096253191 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.19060156 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131820865 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095313605 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125576059 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124424367 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.191377275 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119260003 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129907496 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094159472 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149537495 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141325487 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.100930157 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.145262524 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101809307 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.14240814 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101990882 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128839068 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.125055477 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.10379914 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.135017395 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107457555 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.128342955 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.10177092 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149663684 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130242683 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118679282 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122197193 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100445644 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12973472 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101984013 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13503855 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099972383 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149314665 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126825739 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122676721 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148882113 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.141705767 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.123442075 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138211862 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143871317 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.118198603 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125633524 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103566161 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127341874 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122932327 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125092239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129995534 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.111662327 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128975839 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124451217 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149114837 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099286796 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.13347152 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123777479 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099112074 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119562388 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113258655 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123760975 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098689373 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138107525 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108620237 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.126021826 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099531936 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142745969 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.124706383 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.10727507 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13179374 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100262732 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137032252 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149453233 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.106241466 seconds)
  done (took 13.099925316 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10034501 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096201797 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.127781925 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121210725 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097746812 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096437499 seconds)
  done (took 1.577170036 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.13338969 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126749318 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113491307 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.130588771 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.182334255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.147506029 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.126853983 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132580517 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.145258719 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114729077 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.148313714 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.15270674 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.125027213 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.132269165 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.125137375 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.13192134 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.150857499 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100671412 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.137202083 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10131344 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137570178 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.131131507 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102520183 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.145122736 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.106370287 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.131587096 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105765786 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.138874935 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.136424281 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106650519 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.132037415 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104426753 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129412544 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130778543 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.125932729 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.130776914 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12395241 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108957969 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128985016 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106565153 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.149907863 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102085622 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137907913 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.133860258 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106667602 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130032273 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.132962037 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106561276 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.150482346 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.109980916 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.134928315 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129542861 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.106639018 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133423846 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103737808 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131682591 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.13330677 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.126360416 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.135371291 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129368826 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.102950444 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131177054 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10670709 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.133809226 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103914122 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.133843693 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127907361 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105724728 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126013704 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.105582135 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.134191831 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127045361 seconds)
  done (took 10.027888253 seconds)
done (took 36.604561211 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.118487141 seconds)
  done (took 2.04611119 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.934943258 seconds)
  done (took 1.865698867 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.07158911 seconds)
  done (took 19.039879239 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.536694888 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.637520387 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990019168 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171642568 seconds)
  done (took 3.26723714 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.994261485 seconds)
  done (took 1.946489646 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.328563913 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.272616487 seconds)
  done (took 1.540924976 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.914744543 seconds)
  done (took 1.859089502 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.340199248 seconds)
  done (took 3.285144134 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.364335661 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.208226091 seconds)
  done (took 1.526019096 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.608284143 seconds)
  done (took 1.555819493 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.587415673 seconds)
  done (took 36.538747435 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.24115105 seconds)
  done (took 1.204729237 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312450232 seconds)
  done (took 1.260291621 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.700400541 seconds)
  done (took 4.654251926 seconds)
done (took 82.523534678 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112152686 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135255295 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11109371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132224515 seconds)
  done (took 1.437145833 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.117055347 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128577744 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108108118 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129156175 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112906484 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.130686351 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103698701 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.136638441 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.104250225 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132583055 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.129303159 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10444494 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130847019 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103576248 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.127993173 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105895932 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133038196 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103939803 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130365865 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105552451 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.130465891 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130704921 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10737328 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12984399 seconds)
  done (took 3.83395324 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113273444 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.100913679 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129155072 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100143342 seconds)
  done (took 1.404237883 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.117990583 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145311499 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117868321 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136856848 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144648628 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.119408372 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126424 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.10083543 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.128546269 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111435091 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127571117 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120646392 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.146218122 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123357835 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114207758 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120908358 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09872468 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.145548635 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111801362 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.139147875 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10016642 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.137466889 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108975767 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142304976 seconds)
  done (took 3.952346958 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179596426 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.140971529 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.150064179 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175882567 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.126334179 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.125164727 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.127009846 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13357057 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.129363826 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.100968331 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.125711851 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.156016093 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131991073 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127346668 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100200011 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.131698688 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107297855 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131716218 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.102824216 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.14066268 seconds)
  done (took 3.612741847 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.111234226 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12575071 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096563096 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125334488 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10872749 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128496026 seconds)
  done (took 1.66365128 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100311737 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095068227 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.121832606 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095627163 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.127021601 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095827164 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.119460461 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.096423851 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095312047 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122811648 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094973107 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.120101147 seconds)
  done (took 2.24522528 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.228173797 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.126040634 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12673339 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101713242 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130749682 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.101102071 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140722155 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099274295 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.182409121 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.126832628 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114851354 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.18016908 seconds)
  done (took 2.62021256 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222033299 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10613142 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284753581 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382775756 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170869382 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151375634 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.314299261 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17609703 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199055955 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147146535 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216066512 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165850203 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138652409 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188642529 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149789606 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.195797735 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184760851 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210434268 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160380771 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250221425 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172874517 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150767016 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227297642 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135215172 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147360649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167984524 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.100940071 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138720465 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182392607 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179688852 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181191677 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157534745 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147276201 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210348932 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255019972 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189574933 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315792037 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144703701 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201360067 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.205911458 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288170092 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149421837 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205236891 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163504684 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113371336 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190268658 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164172785 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188906582 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141725756 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14954975 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195023351 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186244271 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19020068 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146952498 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31009835 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157692539 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15411625 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189129661 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199191823 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208507275 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176101657 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.131653243 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195116168 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201272118 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190539795 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155357126 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.176664193 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132978599 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185570262 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215380476 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189033374 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17565591 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.217804359 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115119564 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172690304 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189078732 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163342961 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189385827 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168694144 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103130507 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159335841 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145323174 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109066141 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196334507 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131618075 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223795221 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145969861 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.301213036 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217173049 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168370404 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171178012 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173855093 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176825796 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156533799 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100606498 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155618727 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.181646599 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166273397 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139650572 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139044532 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154512708 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135102608 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160201324 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105351481 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169546631 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.143656259 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176865139 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173327252 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.110028881 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175073621 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159558094 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.168747244 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18066667 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208604908 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14196334 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114379793 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21356923 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167189218 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145420071 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195236184 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205599281 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182972487 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146385908 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177666724 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205111072 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152440937 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208295211 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151439817 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114250246 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.159490641 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167378526 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165434942 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165383208 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109936092 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162928046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240051337 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.108705161 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146704372 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18362308 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107437111 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136803174 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152694314 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117204234 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151846929 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159966304 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148386597 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163466251 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141165496 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16267936 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167034225 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151745446 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200897364 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142223299 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171468844 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156803707 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100817097 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188707557 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204330315 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139597432 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195391671 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.178921643 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206160798 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173108374 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14019306 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192207029 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138647193 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101428729 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175001594 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170091962 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172239416 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.20179856 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202665259 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.202264901 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.135056603 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157919177 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175437827 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194975748 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164324609 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.154846158 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17252721 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175510548 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103399725 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.13298268 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134937795 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122659445 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140432578 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113894666 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219019804 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173612312 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197963902 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171072806 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14843822 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202103198 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107327473 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173761245 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181652586 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147951727 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204009361 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201866065 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176273294 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153400418 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179570516 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128490823 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107218884 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142443358 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177253864 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11390193 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144587525 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152120072 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20274551 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18657001 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159086179 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213744033 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176191781 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240520017 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103231585 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17372901 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189883082 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168819906 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171837648 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141242421 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.170508719 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198728035 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153514769 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203499907 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172522493 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178087706 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208906034 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167945358 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140743879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158488546 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14871224 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148716962 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181967098 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15652873 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143492819 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134747698 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.14681046 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135057815 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191259479 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152396933 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18944866 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17695005 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183720718 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135690339 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123412709 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173117623 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155417208 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.097918514 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207208366 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206548546 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15268842 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168015184 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195142724 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111671296 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.327117164 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234357831 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194967361 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147401768 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123398579 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172302506 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178824489 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173439937 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19291308 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153063616 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190689933 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169543188 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.125287657 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144664096 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157575853 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160599685 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132913292 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143078747 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.164293688 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152362912 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193723128 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153186991 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168771452 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174014648 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130342762 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.16543374 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150140881 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222575763 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16821717 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188252908 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16618758 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184648622 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198602297 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105652947 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137919042 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107492411 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192527776 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142795694 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168883046 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193506842 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206317884 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167955795 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177645383 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148044308 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132821476 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141225369 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158771993 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23510295 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123909658 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145659694 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21152601 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.161606023 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141104743 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174503527 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293318193 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126667597 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219511602 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.102994308 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288183802 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138933317 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113502486 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179727715 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18089398 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.142506081 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.192036391 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175120491 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12672343 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182348422 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148028797 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200949509 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217039152 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209142225 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185411266 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.12413852 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168761121 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172039264 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196914488 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153067235 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.154798341 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171843504 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202858637 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206948045 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141248383 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144460944 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173960859 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16979053 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211290947 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118461077 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197132642 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141333733 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176070864 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148175469 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106304036 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169135793 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19402606 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142947457 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195405781 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167489203 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112170892 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137468427 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161261213 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168270788 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124950784 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.140885445 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188080056 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138561544 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171876128 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162338816 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142122846 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165560474 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155118817 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112783768 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151721032 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153591314 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115956988 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.181618865 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201652859 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140599508 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197611239 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182484808 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174841001 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16929338 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153719655 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643205953 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.138448705 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201761419 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158267478 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19814799 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159065021 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175670751 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141994056 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158521847 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178092035 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159049577 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232223791 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176712487 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168385245 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111618935 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154456723 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155879844 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.139809916 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13544623 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172400918 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150993764 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145726225 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.138198641 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155626682 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.155647061 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147867576 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206428552 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128543477 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221652107 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194914154 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120031263 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176640579 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185277883 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140169 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.171825604 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183837168 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151908635 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159953859 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113499318 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145452303 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190523756 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105813992 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171564815 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170826799 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173131958 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172729897 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115607228 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170573122 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152453213 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170470934 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107236212 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165517893 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168515241 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141641042 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108065879 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166315205 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169539018 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169798884 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135329471 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.156108504 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201266388 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.134579587 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115237728 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294257458 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168025241 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235297239 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137129391 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147345611 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1528817 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135076471 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166159478 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171376234 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139512319 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112376428 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141865953 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193909816 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.178875282 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166454059 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195468734 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173054023 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202633882 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115570435 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277086002 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150143928 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165587578 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114180955 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139352763 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121233799 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144273228 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155935474 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202162501 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190931946 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165283928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.155367399 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108018853 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.135499393 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113335866 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182576255 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165119961 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170171015 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154411563 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.098465265 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154236024 seconds)
  done (took 81.915060545 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.207646122 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.205189899 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.174778426 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.240881677 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195518682 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293845506 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236069024 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250490868 seconds)
  done (took 2.855431943 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.113406636 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.1449457 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150830778 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134152177 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133645558 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.360029328 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.151228548 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106742395 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.194731141 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.145823367 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132115697 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.640289494 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.10671095 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.136794707 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121747809 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132408108 seconds)
  done (took 3.9527563 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.378163753 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552500798 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.156951569 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.25711923 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236582202 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.162591891 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.765503417 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194250922 seconds)
  done (took 12.751847896 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.14284075 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.153041095 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.27147379 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.188056757 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171887794 seconds)
  done (took 1.987348794 seconds)
done (took 125.182645965 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108849613 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133516158 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105578144 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135159452 seconds)
  done (took 1.524138348 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.12359885 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0929713 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.122979637 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0880642 seconds)
  done (took 1.479544546 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.50565273 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088368167 seconds)
  done (took 1.687976898 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132499019 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146961983 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.128043633 seconds)
  done (took 1.47245571 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116730868 seconds)
  done (took 1.177216688 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119973481 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111111034 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.152593632 seconds)
  done (took 1.445082238 seconds)
done (took 9.84185552 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145548501 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.537103433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.396394132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149703074 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730039374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.390594044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.084212113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165457533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174091119 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100857358 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146981169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682137825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.03306499 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.452745751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019511238 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.353111106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713430261 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101992617 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135427499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101479346 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.05602305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098564481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129851691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102096317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710707048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404109509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129957843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.389332404 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100612611 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132435366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.391239423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128719364 seconds)
  done (took 17.435058491 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149086777 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190736788 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137474021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102649138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132595154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.10288231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138212877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113653868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1902184 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128660372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120503428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129784328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106174448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.130348632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122815737 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12911515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102523315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.131549664 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107482904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131540842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120011348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128763491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10252725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130836934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100811996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142480902 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100891723 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141554661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099798816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135616134 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133167202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102505609 seconds)
  done (took 5.097152951 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156065071 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201329546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.140050204 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136597675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183964777 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13009341 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216800303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139590563 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195264552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133199283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119554442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130179724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167699999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103599943 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.151812893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100529968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132766753 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103081276 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136491049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102670479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150287425 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099459121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131711445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102631954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130039965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115411388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129926353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139736226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101561675 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133435466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108191595 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128981969 seconds)
  done (took 5.422799647 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.113955834 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136923129 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119269181 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147966158 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104381967 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136136389 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109087009 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.132490243 seconds)
  done (took 2.065723417 seconds)
done (took 31.083770068 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128330385 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146679587 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118970192 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.14002348 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139615228 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12753783 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.113092334 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.101257274 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.140972396 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117935254 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.1330682 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102609855 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.148276487 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.109294226 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.146323689 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.111901448 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.152659412 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116719366 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.131293703 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110735305 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.133850197 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.12156097 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108000299 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101738574 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.155988889 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.137493141 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.119465812 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.13562551 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10651261 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.103364648 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.147592815 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.135035377 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102766253 seconds)
  done (took 5.229517072 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.13561658 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.177495039 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.104319321 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129772525 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.171258559 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.104663161 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.160134302 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.099816594 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.1285002 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.09990455 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098125454 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.157164836 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.162695619 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.134106037 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.18422036 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.171074706 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.132367517 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.168580343 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.158280673 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.139320027 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.163299985 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.10291074 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.164402989 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.172175294 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.104060702 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128271818 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.144471954 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.16546529 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.173772753 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.138934473 seconds)
  done (took 5.350632572 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114324216 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.148663425 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128139805 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204709748 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173466334 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.118087011 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144782479 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120069133 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.161064753 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.101873007 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143140162 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.164094088 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119242907 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.14267427 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107517652 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.145347777 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.123335735 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.133354215 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10980968 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151694165 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.120744997 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145491201 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117003638 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14229005 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.102257922 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140795831 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.107067377 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.146037101 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.139065302 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112214928 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.135089596 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.107179111 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.13490527 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.11250452 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.134855486 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109838098 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.153671594 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112493912 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.145596739 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.166637853 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113003561 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136010829 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124996495 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.180808823 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.104021176 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.1394133 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112840274 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.143152151 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101080604 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151599331 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117225763 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.133119109 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14664255 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.103193365 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129910858 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110300673 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132207737 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.105429386 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.140162463 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.107156789 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151498141 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.111176493 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139566527 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104901749 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.140248691 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102169859 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.130647064 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108203278 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.156366889 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108648434 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16546995 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102456896 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.137874078 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111132295 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.138048409 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111385889 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.132342392 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110690814 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14097012 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.108444399 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.142482444 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105455963 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.137039088 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.12104114 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.147598101 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139964656 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.10752238 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139046778 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105933651 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.134036158 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118031637 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.133772312 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106698778 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143078976 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103765772 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135159489 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109085674 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.138080171 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101313511 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153379767 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108291729 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.131705701 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120680895 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.133269203 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106654122 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142020766 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114742103 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.132468507 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107172241 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.138564319 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.102029817 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138770955 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.10695759 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.13221626 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.117809684 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145051948 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10745146 seconds)
  done (took 16.082813392 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.260460252 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.241870297 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211110117 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.32293019 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.16028768 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130296833 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.234713063 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.189896756 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.135966168 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.174094131 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189889136 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.197239333 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.102881792 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.167047599 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.235725977 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.326791313 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.170731316 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174170471 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.143212695 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.157276311 seconds)
  done (took 5.019907029 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124163359 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174249128 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162727425 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.130433215 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.135159225 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.116681007 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.135155568 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149532629 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104380271 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.140679195 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102913361 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.142011813 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10561393 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.136551103 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121066323 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152176824 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.108181431 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.140886689 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.149560139 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109509619 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134463548 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155681145 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113168972 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163376516 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111697732 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.149693688 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102216234 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.141465177 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100205713 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.134162105 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.108372819 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149278435 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.14018555 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103865354 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.138411074 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103676032 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.129180462 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104956014 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.135314952 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107862817 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.150001099 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106299281 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133450385 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103949092 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.142857233 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099970407 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.110252493 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.139866909 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138853938 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112187841 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140394764 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108170506 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.14181126 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.115558499 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.131304571 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113279524 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.146311678 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138521834 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.110787573 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.132303609 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102533934 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106857141 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132823908 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107893276 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13945641 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149983206 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112212435 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133220612 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108972743 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.137786382 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107388155 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151977069 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153127969 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102022243 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.130633484 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125767049 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.129569268 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092306947 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.11269026 seconds)
  done (took 11.123004252 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134196081 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.135015234 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.123597669 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17175213 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.120715166 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.143176525 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.105649838 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.154301389 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.110497753 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.142636301 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110136755 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.148688321 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163520143 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.117684689 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.133671181 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.119126919 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.139960114 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.144679246 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.156941535 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.168231241 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115128567 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.14023454 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.117265268 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.145883258 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.136574827 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.147846535 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167672727 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.11296848 seconds)
  done (took 4.928587976 seconds)
done (took 48.797784156 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.178540378 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.395235986 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.16085577 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.164187584 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.21308359 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.186438907 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.164882541 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.355615562 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.924759743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.152203388 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.161250802 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.16436984 seconds)
done (took 27.307446012 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.380711176 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.758468687 seconds)
    (2/2) benchmarking "String"...
    done (took 1.479957489 seconds)
  done (took 4.347148344 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.161861055 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.163707741 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.414432965 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.164722993 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.18155799 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.182822008 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.165176853 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.184886992 seconds)
  done (took 15.542809947 seconds)
done (took 25.517584658 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.15596532 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.480773565 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.4312103 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.180343187 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.16272922 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.160996992 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.167351101 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.224656164 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.177520094 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.153461035 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.16992134 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.46068176 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.149597005 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.591763888 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.150375573 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.169232606 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.179826753 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.471091779 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.165169858 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.227823755 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.148104974 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.151413552 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.170640478 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.189914317 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.189739316 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.167615316 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.220416959 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.148216673 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.418340245 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.183552967 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.2123912 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.167010713 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.214333003 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.164039375 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.295043867 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.200958392 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.378422535 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.160960133 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.151381955 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.181733807 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.406705198 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.584248168 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.167938213 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.151437956 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.169110642 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.195169112 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.157799529 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.892690691 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.176216582 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.159089448 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.191579718 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.575446594 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.177141389 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.182843125 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.163136303 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.460886539 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.16689248 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.225009293 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.201680298 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.167741181 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.178425098 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.180540928 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.186295732 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.168030091 seconds)
  done (took 141.51889243 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.166845911 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.16526602 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.163981267 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.185485681 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.164586445 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.168677612 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.168037466 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.168200557 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.16744003 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.190940672 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.165013915 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.169291127 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.16824345 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.12931933 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.166387663 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.181053966 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.163916083 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.168612429 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.170160854 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.168381679 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.170780078 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.169134269 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.180331733 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.167106967 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.21169753 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.255323268 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.184987262 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.191555047 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.164286742 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.168681805 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.170736845 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.217170493 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.809289764 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.02312863 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.176204413 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.193570036 seconds)
  done (took 78.901211028 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.566717018 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.167501015 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.167936921 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.167949301 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.202878538 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.166885611 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771279857 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771248776 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.925471725 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.339730745 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.62625569 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.443037473 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.165002773 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26271764 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.180202788 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.168429148 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.184055723 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.193067061 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.169774716 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.171560536 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761443374 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.183400284 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.419736124 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.358524512 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.181311854 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201595638 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.566885916 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.166439935 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.20238267 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.081865417 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.501346911 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.215206895 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.165906071 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588534289 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283874054 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.167881789 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.20306937 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.16910379 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.451015188 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.168308976 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.17033436 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.172266715 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887112276 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.167622114 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.76291608 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.17047506 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.136055243 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.167236291 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.169106685 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.547234986 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.837702163 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.18121471 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.168586061 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.171332465 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.168308877 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.16887908 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.201555724 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.53828823 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.283264921 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.169150012 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.169004784 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.172015673 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201157647 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.168667293 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.307165864 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.181079252 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.232811145 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.242282677 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.282307259 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.168780379 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.168024173 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759456465 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.173027486 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265581484 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287598404 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.168650719 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.167325156 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.170066826 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.169315524 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.282238087 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.16755249 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.594387732 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.344584283 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.187739063 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.613064372 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.271487025 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.168461526 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.569556025 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.171900835 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.170791804 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924647447 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266947646 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.16865321 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.171426447 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.17106547 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.595765951 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.761405845 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.460093727 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.171950054 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.822600591 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.173179123 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.604604156 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.73377623 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.835232366 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.169692608 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285797357 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.346786352 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.189039794 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.17159826 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.587909773 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.170103318 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.22896596 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.173805425 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.172952406 seconds)
  done (took 363.538346274 seconds)
done (took 585.041519674 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.935127168 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.831696547 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.969650383 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.866272793 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.832977382 seconds)
  done (took 10.526296968 seconds)
done (took 11.613436277 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.369836081 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.3724044 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.238391644 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.372795617 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207783488 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.394268401 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.349873684 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.197974642 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.283244753 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.261744527 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.282939055 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236141682 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214642726 seconds)
  done (took 17.872277772 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.44850652 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.175464677 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258186463 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.439988144 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218324342 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444486654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.483826833 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.176425045 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310677521 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.187008072 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.186368416 seconds)
  done (took 17.421575895 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.452900644 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.176969031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.242945479 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.425920101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.217715547 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.471104482 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.486599059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.176135784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.317908383 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.186933079 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.189211709 seconds)
  done (took 17.436667028 seconds)
done (took 53.821661763 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.21598045 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.344500837 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.204000735 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.190380391 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.183348058 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.18576951 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.190303454 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.185510862 seconds)
  done (took 10.792874748 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.181049251 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.180501916 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.18031771 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.179345432 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.180893598 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.183581594 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.184585865 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.184024296 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.184617475 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.184670821 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.181153353 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.183759623 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.185797018 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.185061889 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.183845821 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.180465649 seconds)
  done (took 20.017985182 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.184626392 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.181651685 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.180502446 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.180276624 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.181778699 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.181352277 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.182251744 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.181142659 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.179974788 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.180383223 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.181944757 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.182654655 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.180939373 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.180719311 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.180965113 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.18281073 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.18165993 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.181963435 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.185142727 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.181901837 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.183299868 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.180992969 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.181766219 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.182520869 seconds)
  done (took 29.459643816 seconds)
done (took 61.361265632 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.192240136 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.184181313 seconds)
  done (took 5.472129613 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.245026792 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.246992638 seconds)
  done (took 3.590723766 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.185911408 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.186547596 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.186455637 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.185210657 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.186242305 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.186744362 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.185776807 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.18554197 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.186652286 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.186467888 seconds)
  done (took 12.958346938 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.185884411 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.187144217 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.184548623 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.185639589 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.186223399 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.184515214 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.187762018 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.186575541 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.186504629 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.183714608 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.186665213 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.185080856 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.185341636 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.183060246 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.186695897 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.18477376 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.184376929 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.184178155 seconds)
  done (took 22.437134275 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.200373973 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.207262682 seconds)
  done (took 3.505583963 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.32495042 seconds)
    (2/7) benchmarking "second"...
    done (took 1.226560209 seconds)
    (3/7) benchmarking "month"...
    done (took 1.299536789 seconds)
    (4/7) benchmarking "year"...
    done (took 1.293227533 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.226134291 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.205623146 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.225672249 seconds)
  done (took 9.899256927 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.188592577 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.382667841 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.494427175 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.790097635 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.188321499 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.230757448 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.04392155 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.23234709 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220597858 seconds)
  done (took 13.870772531 seconds)
done (took 72.827974216 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.179114331 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.219110605 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.189195787 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.195032801 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.524080325 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.210801529 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.182346417 seconds)
done (took 15.798186783 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.167081645 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.177620477 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.182128993 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.182674619 seconds)
  done (took 9.808491236 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.182718291 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553538736 seconds)
  done (took 4.836193908 seconds)
done (took 15.743845618 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.188995526 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.188580995 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.192066596 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.1876899 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.188537632 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.187671093 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.187904073 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.191466915 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.191982852 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.188622397 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.19045534 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.189613778 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190697168 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187499592 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187716122 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189550399 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.188010124 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187141205 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.188255553 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191230992 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.18854475 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.189699094 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.191867866 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.18822134 seconds)
  done (took 29.642615014 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.191766184 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.188965158 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.190663861 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.192309972 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.191738799 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.192182059 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.193110184 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.189431325 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.194034093 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.192355515 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190751203 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.19135302 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.193116753 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.19074264 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194538725 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.192518218 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.193855612 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192250499 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192918576 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.192266681 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.192987188 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190651214 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.192228896 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193986381 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.190885395 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191843324 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.194757266 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.1924531 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19332663 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.19187319 seconds)
  done (took 36.868045781 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.200436255 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.206620234 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.193296024 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.194774197 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.191895262 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.195287987 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.194955836 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.194656944 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.193346434 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.193855185 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.193296038 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.193801886 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.195209169 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.19525768 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.19972209 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.197138088 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.198299187 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.195279775 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.196385368 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.196748186 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.197103126 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.195515376 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.194205355 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.195370333 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.195599517 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.197319194 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.196588987 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.196684268 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.196684559 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.196088961 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.197967482 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.19685381 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.196969988 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.197637341 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.197480273 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.197277745 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.201470524 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.205385516 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.19834667 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.196521375 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.199467131 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.197627287 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.196556781 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.197369635 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.196926778 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.197569386 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.197427973 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.197729905 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.199612996 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.20104644 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.199350162 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.199719061 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.196037672 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.198494188 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.196877574 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.197151 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.19668156 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.197674869 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.197898151 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.199181504 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.19837026 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.196160159 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.1986818 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.197046065 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.197675355 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.198961884 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.199143469 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.196393276 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.197664392 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.19858294 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.197330306 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.199669707 seconds)
  done (took 87.310686685 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.196711353 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.196000221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.197197809 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196957395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194192118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.199248695 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.196354007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198227469 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194812975 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.198663993 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196359951 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.197672563 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195232523 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.198900667 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198620879 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.196396433 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.19999191 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195871886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.19937068 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.199024031 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200266808 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.197637347 seconds)
  done (took 27.452497682 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201466805 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.200504085 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.20179264 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201969785 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199156683 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.200045942 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.199699967 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.203621766 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201059859 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196978674 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196992814 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199982714 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199084598 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197845979 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196537681 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.201045271 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200769865 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.201028734 seconds)
  done (took 22.709789011 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.197160149 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.199666258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.201285723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.19802345 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.198320383 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.201300695 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199267345 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.20015437 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.199959678 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.199103733 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.200706352 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2009336 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.201227242 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199667799 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202380446 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.199058437 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.200731564 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198683642 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200275672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198817572 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.197280357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203386212 seconds)
  done (took 27.510039949 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201156091 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202359123 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.199268546 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.19922284 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.200002399 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.201747887 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.202854088 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.200321293 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.203212207 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.203806328 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201188396 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.20232757 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.199902946 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200210523 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.199993064 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201584799 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.204173185 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20037493 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201387721 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.199898111 seconds)
  done (took 25.137108599 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204350161 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204360541 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204951124 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206028402 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204622874 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.206622618 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2058163 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.207520161 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205826003 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.207156303 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.206889442 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.206472069 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206524201 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.207670657 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206309392 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205901836 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204703217 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207454787 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207091807 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206428591 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207382933 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208101419 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208375426 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.206986187 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.206434644 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207067874 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207676969 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.206136318 seconds)
  done (took 34.892893672 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206821138 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20555906 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.203174313 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.204227842 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.204075105 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.203810702 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.204239592 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.201517893 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20643801 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.206054639 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.205609641 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.205949089 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20728167 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.207144126 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.20528711 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.208651714 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205971108 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.203804098 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20492441 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204921529 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.209408902 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206529337 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.207907984 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203336409 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20474156 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.207794544 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203648458 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206970161 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209110127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204684911 seconds)
  done (took 37.285778324 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253186085 seconds)
    (2/2) benchmarking "in"...
    done (took 1.251794398 seconds)
  done (took 3.622625565 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.205480575 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207530259 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.207834244 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205278814 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206298037 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.209977621 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21147216 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205527452 seconds)
  done (took 10.77704355 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.210097471 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.209099812 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.20730408 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.20804806 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.208557747 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.208581919 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.216480887 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.227705257 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.209569318 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.209938228 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.217545101 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.219142693 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.213450229 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.210967623 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.209126052 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211971077 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.210369504 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.209932839 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.210533829 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.211888957 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211236196 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.213760915 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214000091 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.211037136 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.213998653 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.22395312 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.217074687 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.21180349 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211781544 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.216533036 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.213397492 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.207750511 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.211788359 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.213928025 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.210349889 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.212980395 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220668218 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235935972 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.218143579 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211971673 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212484137 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.208593184 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.21157 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.215020878 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216239395 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.213238392 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.211935668 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.208249264 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.211562192 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.21643036 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.221086796 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21339868 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.209221392 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214675923 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.218327559 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218780625 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.235403399 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.21857775 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.226659981 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.225372011 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226921029 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.23866406 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.215504595 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.216480859 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225508833 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.243283796 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222595814 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.231940662 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.211873611 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215721625 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.22077515 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228898854 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240250645 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.213335285 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.218213317 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.216732576 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2152105 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214682703 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223617392 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.238473746 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.214108686 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215990204 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225493306 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241972514 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.214389238 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.2145604 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.216104473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.21726227 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.217619876 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229771474 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.235426595 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.216441047 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.21536852 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.216127332 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.217269288 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.216259692 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.217070653 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217364621 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.213482232 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.215793118 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21593531 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.222425349 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.228826744 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.217018934 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.217157167 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.226042227 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.218535169 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21854045 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.221519809 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.21844542 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215859641 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.219885579 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.224770473 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.214849386 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220753422 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.228520764 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.217960841 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.219292526 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.21673234 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.218054038 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234960718 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.247920879 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.215799654 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.215916005 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.223043861 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.234851415 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220314352 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.221765296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.220674923 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.215328939 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.214552806 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.220595608 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.218351233 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.219076716 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218562196 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221267218 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.214978258 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.219083574 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.220346208 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.22210166 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.22079182 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.219251733 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.220261999 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.222941634 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.219264605 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.222931997 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.227462776 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.221385987 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.221277104 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.222235219 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.216924139 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222556874 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.221978124 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.22339651 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.222150181 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22073186 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.220506595 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.22133982 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.222265279 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.219651915 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221472776 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.221939885 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227290114 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.221708209 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.225098478 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220612775 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.217355698 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.22169276 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.221944979 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.22299112 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.221639141 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.221496062 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.224147766 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.232960194 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.221720245 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.22374799 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.225349334 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221157942 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.223047264 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224116827 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.227762957 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.232684841 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.223125319 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.229117436 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.222900104 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223034152 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.224464418 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.223746615 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.223396172 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222413362 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.225736534 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.233040934 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236594504 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250228854 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.222251582 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.22810222 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.224775605 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.232121136 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.22760152 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.222476337 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.224668861 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224037354 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224963098 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222617693 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.225809305 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.222686617 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224583105 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.223780017 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226966815 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.224984481 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226386611 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.225117887 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225215935 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.222426886 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224348242 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226535349 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.22690219 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.222170226 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.225798661 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.225294329 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.226078965 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.225957738 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.231425497 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.221345685 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226374439 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226848066 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.225156292 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.223416083 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.225756707 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.22656022 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.224292281 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23117786 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.243702123 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.226664217 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231223006 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.244974573 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.226507353 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.229124413 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.22285599 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.221786586 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.229240214 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.235149757 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.224332295 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.227208362 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.225173899 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228906672 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227060777 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.229958995 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.224277788 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.22415467 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.224614974 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.227932822 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.222097988 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.226345913 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.227517279 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.226963206 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228274555 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227042623 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.227114487 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227718682 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.225177378 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.228802218 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.226016991 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232740002 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.238219112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.232613445 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.228365568 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229380519 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.228579683 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.23176083 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227553905 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.226902648 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.228883995 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241115533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.252537931 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233739371 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24726223 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.227371904 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232949637 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.247119375 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.232406534 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22770973 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229592093 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.228019961 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.228358885 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.224591494 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.228757768 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.22762818 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231146565 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230924038 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234685017 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.229085806 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.22947793 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.230192073 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.229177215 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.228846844 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.229085984 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.228888908 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231779629 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230842977 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.230133747 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229563023 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235478597 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2511524 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.230385803 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.230355936 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.228172444 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.229940714 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.229209363 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.228475459 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.23535396 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.241014557 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.234000585 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.242880276 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.232024152 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242346828 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231948782 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.234605402 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.239423861 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.228748771 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.23094164 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.231473619 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.232317225 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23898814 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.249938402 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.234717797 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.236629386 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232481515 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.231544388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231888125 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.230987315 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232201473 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.230914059 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239734095 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.25575072 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.236864638 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233632708 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.227755348 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.232175166 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.233739622 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.233198841 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234513907 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.23167022 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.232955423 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.232650917 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.230502998 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.230870247 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.232322316 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.233143353 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.229566003 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.230996916 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23951683 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.254707644 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237609935 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.233605225 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.238684361 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233887594 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241282019 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.253593054 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.234526401 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.232221162 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.235149616 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.234739579 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.232542669 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.233723125 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.233486911 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.234622684 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.237965078 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234153884 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.236540088 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.235353502 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.234000545 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.232487443 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244302484 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262215454 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.235911309 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240167357 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.230559807 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.235906978 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.240657352 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.235866909 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.232862545 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.237215515 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248058605 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245430705 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.235758262 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.23429942 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23553341 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234465458 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.234881323 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.235721363 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.232450473 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236396901 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.236358574 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.236387791 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237860593 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235681462 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.236967133 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237999672 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.237194272 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.247876187 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.236694888 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.23594656 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236504661 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237767778 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.236795434 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237054016 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.237130443 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237799618 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236889096 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238871926 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24602648 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.752521426 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.240970667 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.237023555 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.236740794 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.237048433 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.237385351 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236467724 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.238552665 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238538076 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238029302 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.23840241 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.239649457 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.237073805 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.236574741 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.236644754 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237363283 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240400111 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.245959422 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235389137 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.233853716 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.236306396 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236261302 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.237454981 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.237702412 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.243964242 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242053433 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.250770329 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248394802 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.244597892 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.239154475 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242090231 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247263626 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.236616799 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239367552 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.238284063 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.239532522 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.240802837 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24423629 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238459616 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245656737 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.237049783 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239560501 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248703416 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.262781323 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240413567 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.243056154 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.245965512 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.23904822 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.236081309 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240278067 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239189091 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248039308 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.262163751 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241097148 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244109539 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241534455 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.242223794 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246619487 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240755521 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.24154403 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.237058531 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.242248072 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241701074 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241095817 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.2392621 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.242378505 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.240957653 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244117452 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.250801615 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.239416356 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242604726 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.24231777 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.243074052 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244343056 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242824984 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.240095442 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.240454183 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241685273 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242167518 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.243258447 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244472624 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.242231882 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.242330709 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.242864552 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241917665 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24740823 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.257410962 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.252776954 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240196676 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242971266 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.241100969 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.244372189 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243065134 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.244752358 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244901634 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.243443444 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.242583996 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243294481 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243860043 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.247249077 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263183494 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.265408931 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243091518 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.243050886 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245120447 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243867344 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.240076349 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.24417518 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.246023495 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.2481337 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.2548026 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.245600314 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251231365 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264924998 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.246705362 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.249692398 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.248115431 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25522176 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.245883277 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245200938 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.245133869 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251082273 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.264335757 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24648876 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256334535 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28016631 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.266806705 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246423695 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.246533842 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248275691 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.247551188 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.247639521 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.246377288 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.24825055 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246313955 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246969827 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.248101303 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254190507 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247922217 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249043518 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.246429177 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.246514322 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.248298413 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245793504 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.247373888 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.247811482 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.250009803 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.248519108 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246696481 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.247841851 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260785599 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.276262782 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.247455194 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.24668843 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.243409664 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.250750403 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.249626295 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261211034 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.255800598 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.248234294 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.249790185 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.250722742 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248308983 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.247113085 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.248694338 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248320674 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248235213 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.246412222 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.262968023 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276029718 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.25333423 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.248687964 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250644702 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.250350153 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250673083 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249851841 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249564376 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.251646675 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.253173236 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25612804 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.252598833 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.249164903 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.252365358 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.258316775 seconds)
  done (took 736.287857423 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247512147 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246814693 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.247254014 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246864237 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247687329 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247600785 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247131121 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246270771 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.248372963 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247715371 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.248068435 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246808697 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246956981 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246684561 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248535154 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249620065 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249528774 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247912899 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248995486 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249010078 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248361311 seconds)
  done (took 27.357822732 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.249566941 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.248231352 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246937442 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250684878 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248455275 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251542351 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248907091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250904498 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250003383 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248439486 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.251548556 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252523764 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.246376861 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.249191479 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24981631 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252147566 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25051115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251485245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.251610769 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249848634 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252382062 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.249768794 seconds)
  done (took 28.657440524 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.25405605 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.25308769 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.252684315 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.249097019 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.25130764 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.249299071 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.252824426 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.253238346 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.252040813 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.254218061 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.253316767 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.254573641 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.263093642 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.260184529 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.254652386 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.251030604 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.25423292 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.255316034 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.253471294 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.251037352 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259743505 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.270192815 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.250295135 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.25286378 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.253786075 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.253402848 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.253145725 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253615655 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.256013989 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26055436 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.254037498 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.25398671 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.255799385 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.254351926 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.255983573 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.259232788 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.253543463 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.251469151 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.252867756 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.266514567 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.279340039 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.254317824 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.262702344 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.273631052 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.253895667 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.258627646 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.26411417 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.253203225 seconds)
  done (took 61.452072307 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.859518392 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.872321626 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.873686118 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.874058293 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.875607929 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.880960153 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.891873195 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.887540803 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.87491047 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.876692752 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.874276919 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.873698602 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.885012568 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.879970234 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.878830632 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.884538205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.876378858 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.878341907 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.887856022 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.890358282 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.875341233 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.879099411 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.878664273 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.878698313 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.88097966 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.883118509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.877516912 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.881692115 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.880552159 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.877579567 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.887485906 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.895241837 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.89261738 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.876015825 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.877737003 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.878357699 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88292764 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.878543571 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.882251356 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.873044173 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.881808783 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.875389314 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.876038425 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.883511342 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.894507513 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.878680543 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883333376 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.876717299 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.874711202 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.878144028 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.883579949 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.877426704 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.876106236 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.874153066 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.87768867 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.88514973 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.885901611 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.884502376 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.875188728 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.87945299 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.878691186 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.882704243 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.885148811 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.879274479 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.881492498 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.879343543 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.879951337 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.888645128 seconds)
  done (took 129.011662078 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260791293 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.259969404 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261909221 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261022083 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26025419 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.259640192 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261022205 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.261654273 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260809489 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261278179 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260893261 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260507248 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.259259982 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261275003 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26021735 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262066668 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262724462 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26244382 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261752214 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262624556 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.261727415 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264054503 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.261653922 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263857598 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264178142 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263224018 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263744381 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262912261 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260594863 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262327481 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263436548 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.262933316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258875033 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26356717 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.261685544 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.263805989 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261445343 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263028538 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.263928933 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.261727101 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262504197 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262078728 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263703265 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.26441134 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264926559 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264929498 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262478035 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.262746003 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.265219581 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264796679 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.264407658 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264045918 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265979377 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264729709 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264948274 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.263765229 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265861621 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264440526 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265373806 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265412412 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266703942 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.264237559 seconds)
  done (took 79.461698993 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264027806 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262999603 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262525786 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262713102 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264852315 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262871634 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265515312 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.265776474 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265765576 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.265413195 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265137693 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263771139 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265318817 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267218181 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262580687 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266030976 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264045599 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264721035 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268386078 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262746805 seconds)
  done (took 26.460277377 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.263876055 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266372815 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.26476786 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.263654877 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.263914053 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.264739436 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.266245574 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266183479 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264068625 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266577547 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269119165 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267198159 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263530135 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263614168 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269404135 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265086934 seconds)
  done (took 21.417408256 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.264878404 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.266805507 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.26641206 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.266939642 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.265070443 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.263666418 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.267178149 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.263339714 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.265578206 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.268278478 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.267065166 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.268947478 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.269221883 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.269372704 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.266251294 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.267933643 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.26618769 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266994052 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.267251383 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269306434 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.266944133 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.265842997 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.26845556 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.270175277 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.266071293 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.268013323 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.267611357 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.267800835 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.265987508 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.269956291 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268457486 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.269401589 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267478584 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.2676255 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.26973482 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.267678508 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.270528749 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.270173917 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.269991071 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270032658 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.271025079 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.269595038 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.272251932 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271923219 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.268114393 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.271369989 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.269694218 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.26716751 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.268384937 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.270073075 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.271469442 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.271564323 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.272723272 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.273282425 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.271978474 seconds)
  done (took 70.935866863 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272981919 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272997385 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.266771652 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272484223 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272824268 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.268662759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.272504028 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271602332 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269239133 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274122307 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271258925 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275268712 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269082232 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273282898 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269888409 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274772805 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27166229 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271240714 seconds)
  done (took 24.063654604 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.270107267 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270876839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273478377 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.271885076 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.271652815 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27507638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272265054 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.275700104 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275439048 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271003083 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271957912 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.273633104 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27449958 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.273111892 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273270182 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271150283 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.27487422 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275907474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.271754289 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272215002 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275093122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274357478 seconds)
  done (took 29.183726394 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.274076576 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.273520361 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.272950602 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.290607352 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.301094954 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.275354616 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.275610689 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.27648138 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.299534864 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.338175012 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.331563336 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.301604857 seconds)
  done (took 16.685333817 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272522722 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27654415 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275965846 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27482894 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277726187 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275196611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275134164 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274217618 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276755708 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272257247 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27579301 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276835151 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278488297 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274069865 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275652874 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276174821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273621586 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273506697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273870974 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27982336 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276106165 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277215589 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275240711 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276629431 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276171821 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274553414 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277125288 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273424732 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274799003 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275930988 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277386571 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27661502 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277442196 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274952778 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278645636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277655659 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276306332 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276840475 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277782439 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276465951 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277472585 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278719652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276738643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272988841 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278004432 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274494462 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276414651 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276972145 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277159223 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277921354 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278483278 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276066301 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278985327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279041309 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28036636 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280276236 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276911928 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276092518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279520214 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277483334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2776447 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281672203 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278090103 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277044709 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279822244 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277489005 seconds)
  done (took 85.438793346 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277418985 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277957026 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277713638 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277456164 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277433577 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276762689 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278112791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277496535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279190855 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27725622 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280506077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278460064 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279475802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278636859 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279363827 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276901414 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278405574 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279003312 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281540054 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282664342 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280465054 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280430973 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281453894 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280947206 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278765564 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282666339 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280086448 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281405022 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280105517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279584108 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280602903 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280077754 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280868169 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279641398 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281545315 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280031209 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28012198 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279080563 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280085901 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283938688 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279604419 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282084156 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28200979 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281118091 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281813623 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282028545 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283660706 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280361358 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281842488 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281584837 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282533674 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283264342 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281653794 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280619256 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281514422 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281011877 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281983715 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282899109 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282472085 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283733924 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282565873 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280646118 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285673689 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282686761 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28347867 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281418136 seconds)
  done (took 85.703079287 seconds)
done (took 1766.424744515 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.449689948 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.401940093 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.28269581 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.299089781 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.282062516 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.301238018 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.298310076 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.282322497 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.284850021 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.284908223 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.284639452 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.477111798 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.298391381 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.282673422 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284360919 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.382406869 seconds)
  done (took 26.364003289 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.316954942 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.293585735 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418427648 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307315226 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.316794284 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.492081757 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.348496349 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.291879459 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.486159179 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.309639443 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.292895451 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.313829041 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.293837701 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.280731131 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322470499 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.491286459 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.568997456 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.282831302 seconds)
  done (took 28.61387992 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.799953308 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.301755117 seconds)
  done (took 5.290012112 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.311466083 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.291578844 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.292697467 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.290300639 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.281109254 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.283202744 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.289672275 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.28828657 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.287457033 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.428903752 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.292741462 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.303637617 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.311791027 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.290135549 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285862814 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.33583989 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.440286661 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.290815014 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.286882618 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.297045546 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.292001313 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.382325854 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.335384045 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.286845029 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.429306788 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.289324519 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.293068866 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.298056574 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.433453988 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.291194016 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.291848139 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.293454942 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.295913111 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.193164124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.769404654 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.303775221 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.316686171 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.299656122 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.286787483 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.448295018 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.29390945 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.298597968 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.292384463 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.763349396 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437110466 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423888146 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.302945136 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.295739041 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.29609192 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363326383 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.295375852 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.294652394 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.339174504 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.18005285 seconds)
  done (took 83.091887857 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.325964075 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.284923476 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471724681 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.30682278 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28604645 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289402762 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.283190843 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.613751306 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.288465914 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.28717827 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.596411906 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903436579 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.306554536 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.33865636 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.149921776 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.349081184 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.287260245 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.299948991 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.288116721 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.28603406 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864509277 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28713152 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.301303191 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.355235357 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.329895126 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.854755202 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.29129009 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.289809791 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.304029734 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.284948174 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.859897751 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303749239 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.343399471 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.284868967 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.584674133 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721664823 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.684862988 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.294319408 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.329535894 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.290578335 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.308601956 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.84306564 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.701127534 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.290697535 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.288461693 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.850904313 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.291777856 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.299796145 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.298459698 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551783557 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.289141877 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.289547239 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310375202 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.292362062 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.288346584 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.368340033 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.360958014 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.861322759 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290381388 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.284990198 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.314354256 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.291176279 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294167842 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.28848791 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.288066077 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.703057104 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.489732564 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.296433716 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702240253 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.855658551 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.3071148 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916680907 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.305510938 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310738793 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.481435934 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289729275 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.28802942 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.869858822 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.297326453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.285892813 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.687568113 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.295291814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.60349899 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326154435 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291801468 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882539205 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.304402264 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.295559339 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.292384836 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.286369522 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.291020236 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304869704 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.589407136 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.316525599 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.293482066 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.288988089 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.293445573 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295431872 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.291648606 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.295865639 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915540086 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.313217637 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.292831166 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29696726 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308964408 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.29403189 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.28981542 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.292619517 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565637188 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.304841326 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.296352327 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.292587184 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.289662506 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.297355612 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.367001679 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.303214122 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.655731643 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.29789866 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292982963 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.311946538 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294652779 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.327288052 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290173818 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.304487382 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.21930636 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.580950872 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.317230649 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.288935642 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294207436 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.295086433 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.291931937 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313934398 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.334171052 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.2996455 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099350998 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.34504944 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.302685814 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.295487352 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.301160684 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310946072 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.294663368 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.296876916 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606372231 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.590199732 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.495053749 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295257837 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.298674434 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.119442308 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.343726068 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478375709 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318171556 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.296376774 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550191077 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.502653772 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.297381607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.292447977 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.299279667 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558816626 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.298456472 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61790033 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.893874014 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.313043515 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.302209071 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.113318841 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.04735463 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.300466652 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.300218325 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.605809892 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.313748563 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.297991557 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.29723239 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299124538 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.298264912 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.304681465 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.306042822 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.29799236 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.298682299 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.620235703 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492646328 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.319190772 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.306026818 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.863619109 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339551333 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296387692 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.328309037 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.29646933 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.301510278 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.36301828 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.29702994 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.329721994 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.302773245 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.29785416 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883170443 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.300037658 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.302357855 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499207393 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033460787 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.316383891 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.298633286 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.315910168 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.206245113 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.885574296 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.322006905 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.663039079 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.302304495 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341757812 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301583757 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340785466 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887881305 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302509416 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32216409 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01894324 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.317828031 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.715835295 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.301543269 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.299335621 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964844239 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.317558577 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.302315767 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.298822415 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310818683 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602449037 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.303550623 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.328785596 seconds)
  done (took 491.55975 seconds)
done (took 636.100211456 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.302354869 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.302731729 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.285914427 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.3056888 seconds)
  done (took 10.402680672 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.313532928 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.310512144 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.313889634 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309595191 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.3137024 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.310091424 seconds)
  done (took 9.081390357 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.305026806 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.308049939 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.305932529 seconds)
  done (took 8.125116924 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.539273975 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.327302953 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.660230513 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.339235952 seconds)
  done (took 9.073830279 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311213942 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313572439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313427891 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314311995 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.314182612 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.315034154 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.314562927 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.313889064 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.31580396 seconds)
  done (took 13.030237119 seconds)
done (took 50.914349852 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.316451779 seconds)
    (2/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.384169642 seconds)
    (3/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.368229257 seconds)
    (4/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.332080025 seconds)
    (5/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.319601118 seconds)
    (6/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.319972029 seconds)
    (7/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.31893005 seconds)
    (8/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.30938331 seconds)
    (9/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.398931448 seconds)
    (10/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.331212722 seconds)
    (11/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.652354255 seconds)
    (12/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.320650376 seconds)
    (13/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.06962187 seconds)
    (14/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344148559 seconds)
    (15/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.464981419 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.346513392 seconds)
    (17/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.290299096 seconds)
    (18/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.305635258 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.336269997 seconds)
    (20/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.015803509 seconds)
    (21/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.322764272 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.495685741 seconds)
    (23/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.43906791 seconds)
    (24/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.370190808 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.36464181 seconds)
    (26/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.96702442 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.419902586 seconds)
    (28/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.416353534 seconds)
    (29/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.362335373 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.319795678 seconds)
    (31/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.319634446 seconds)
    (32/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.412808805 seconds)
    (33/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.489910928 seconds)
    (34/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.958761727 seconds)
    (35/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.428615686 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.489578258 seconds)
    (37/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.410499714 seconds)
    (38/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.538419145 seconds)
    (39/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.373534751 seconds)
    (40/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.541371243 seconds)
    (41/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.331780054 seconds)
    (42/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.304583441 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.33542454 seconds)
    (44/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.533182977 seconds)
    (45/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.296533345 seconds)
    (46/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.393269356 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.321155946 seconds)
    (48/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.321260529 seconds)
    (49/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.55556077 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.424379262 seconds)
    (51/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.968982011 seconds)
    (52/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.41587317 seconds)
    (53/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.32850095 seconds)
    (54/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.456125078 seconds)
    (55/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.292733033 seconds)
    (56/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.400430761 seconds)
    (57/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.446373417 seconds)
    (58/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324426332 seconds)
    (59/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.534389214 seconds)
    (60/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.969207132 seconds)
    (61/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.53218872 seconds)
    (62/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.534875097 seconds)
    (63/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.474534203 seconds)
    (64/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.224486438 seconds)
    (65/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.353355761 seconds)
    (66/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.298349635 seconds)
    (67/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.552094224 seconds)
    (68/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.961362827 seconds)
    (69/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.501589014 seconds)
    (70/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.523793458 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.326067645 seconds)
    (72/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.425714893 seconds)
    (73/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.330068254 seconds)
    (74/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.312876683 seconds)
    (75/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.367037248 seconds)
    (76/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.320721731 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.333857702 seconds)
    (78/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.31280436 seconds)
    (79/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.507048553 seconds)
    (80/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.437029259 seconds)
    (81/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.321264137 seconds)
    (82/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.298599877 seconds)
    (83/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.365841718 seconds)
    (84/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.372842446 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.334889309 seconds)
    (86/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.519745062 seconds)
    (87/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.399738624 seconds)
    (88/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.360973671 seconds)
    (89/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.403307074 seconds)
    (90/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.398881795 seconds)
    (91/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.374428592 seconds)
    (92/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.340153876 seconds)
    (93/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.32706958 seconds)
    (94/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.301704741 seconds)
    (95/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.472498179 seconds)
    (96/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.401130184 seconds)
    (97/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.405749104 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.340398103 seconds)
    (99/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.470107527 seconds)
    (100/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.975863135 seconds)
    (101/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.50623368 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.373993601 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.413865525 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.346867928 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.426461467 seconds)
    (106/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.341216972 seconds)
    (107/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.376418319 seconds)
    (108/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.472874918 seconds)
    (109/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.431158969 seconds)
    (110/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.155351078 seconds)
    (111/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.474562037 seconds)
    (112/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.455334846 seconds)
    (113/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.332982858 seconds)
    (114/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.029028379 seconds)
    (115/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.413512755 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.328735025 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.385167246 seconds)
    (118/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.077061246 seconds)
    (119/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.342607731 seconds)
    (120/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.306740793 seconds)
    (121/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.081695192 seconds)
    (122/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.31688432 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.408882514 seconds)
    (124/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.45022621 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.313746269 seconds)
    (126/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.465873651 seconds)
    (127/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.074315716 seconds)
    (128/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.342248328 seconds)
    (129/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.684583741 seconds)
    (130/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.448926454 seconds)
    (131/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.372614258 seconds)
    (132/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.332196778 seconds)
    (133/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.97002909 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.468864663 seconds)
    (135/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.350806474 seconds)
    (136/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.394060006 seconds)
    (137/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.447075648 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.438077604 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.368085279 seconds)
    (140/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.332066313 seconds)
    (141/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.329611947 seconds)
    (142/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.478366058 seconds)
    (143/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.393311604 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.394141579 seconds)
    (145/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.143122848 seconds)
    (146/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.321152549 seconds)
    (147/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.326660007 seconds)
    (148/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.973304608 seconds)
    (149/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.205059318 seconds)
    (150/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.100703604 seconds)
    (151/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.319933994 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.432333109 seconds)
    (153/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.394740533 seconds)
    (154/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.40637369 seconds)
    (155/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.321020119 seconds)
    (156/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.33600113 seconds)
    (157/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.07755772 seconds)
    (158/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.047169481 seconds)
    (159/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.403391584 seconds)
    (160/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.202429018 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.433344681 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.339821978 seconds)
    (163/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.384050272 seconds)
    (164/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.085419087 seconds)
    (165/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.3780862 seconds)
    (166/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.349949819 seconds)
    (167/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.725209286 seconds)
    (168/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.346611497 seconds)
    (169/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.373571724 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.396150242 seconds)
    (171/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.458368109 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.457608159 seconds)
    (173/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.32146692 seconds)
    (174/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.407198601 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.328240564 seconds)
    (176/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.399623373 seconds)
    (177/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.421636567 seconds)
    (178/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.33982836 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.379660109 seconds)
    (180/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.428736517 seconds)
    (181/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.336459187 seconds)
    (182/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.341660574 seconds)
    (183/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.393302451 seconds)
    (184/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.304945822 seconds)
    (185/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.334470027 seconds)
    (186/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.025872014 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.356320461 seconds)
    (188/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092988735 seconds)
    (189/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.38760976 seconds)
    (190/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.384314459 seconds)
    (191/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.425306059 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.333175711 seconds)
    (193/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.403284646 seconds)
    (194/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.316037792 seconds)
    (195/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.69687168 seconds)
    (196/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.517639814 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.376039038 seconds)
    (198/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.529929429 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.502476098 seconds)
    (200/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.325094229 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.409345279 seconds)
    (202/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.482970349 seconds)
    (203/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.481125939 seconds)
    (204/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.426172298 seconds)
    (205/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.430870383 seconds)
    (206/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.424105285 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.422615794 seconds)
    (208/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.505628792 seconds)
    (209/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.226142391 seconds)
    (210/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.348825244 seconds)
    (211/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.318379822 seconds)
    (212/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.330728751 seconds)
    (213/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.372237063 seconds)
    (214/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.330898527 seconds)
    (215/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.334731196 seconds)
    (216/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.519931881 seconds)
    (217/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.407224251 seconds)
    (218/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.543925099 seconds)
    (219/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.427580157 seconds)
    (220/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.480614314 seconds)
    (221/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.470180312 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.39252159 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.462172642 seconds)
    (224/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.598201361 seconds)
  done (took 365.931908374 seconds)
done (took 367.136352619 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376830961 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.505596774 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.348838051 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348160733 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375046354 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.338520999 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.363057028 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.337699826 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.332715619 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.331770323 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.32150531 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.349300271 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.350269322 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366432244 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.443751743 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.340173889 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.348935557 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.332724799 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369393278 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.390177041 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374465121 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378219553 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.342028599 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.348137614 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378024146 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377483071 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.351962227 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.329173941 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.324740236 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.372876029 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.335140607 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.348889322 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.379090253 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.38389649 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373887106 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.335196592 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37658004 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.509799228 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.366887308 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.364895799 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.335848477 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382225349 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.341835972 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.344026477 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.385233042 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343926535 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380988715 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.461774353 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336617935 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.328237724 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376381711 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.396675548 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.339467163 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.330437249 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.327114935 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.452446484 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.336599265 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383556954 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.337578665 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377837625 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.447913055 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38156965 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.394735927 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380127593 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.336930973 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357623294 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.336971347 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.394619984 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.333082241 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378010569 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37945587 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34252385 seconds)
done (took 107.609766542 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.463913323 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.325775215 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.495894838 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.335735637 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.504289958 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.48697034 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.333481556 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331374608 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.331068422 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.150964161 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.333370271 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.343348839 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.326054582 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.3338387 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.468161879 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.33583387 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.332331472 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.041899368 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.339460036 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.48007667 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.335362608 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331749827 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.331300114 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.164395768 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.325778021 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.32919297 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.482850071 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.335301746 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.056002378 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.329237372 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.333121019 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.059466407 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.482256497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.352260202 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.345181423 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.343492176 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.508314297 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.352932695 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.466656903 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.465405144 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.49792034 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.376651073 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.332343146 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.337114943 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336880635 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3387374 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.33414374 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.361429681 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.338823537 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.33540567 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.047536332 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.345974503 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.33281044 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334816304 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334213516 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.368180283 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.336685728 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.338303846 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.486020601 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.337763829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.468927649 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.169961211 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.157596584 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.338773464 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.336850002 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.33700728 seconds)
  done (took 108.713462576 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.406767421 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.413991807 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.462185179 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.357402812 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390383001 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468812327 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.357096936 seconds)
  done (took 11.089434066 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346641377 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339820328 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38801493 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.389170694 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.338601915 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.554670796 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341585685 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.34867091 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.337360568 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.418115277 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.343130492 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.338804279 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345468913 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.335795548 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387432394 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.351647282 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.456368853 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342762811 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.342185783 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.49559342 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336926124 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.346330269 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.412554219 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.352267992 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.343304474 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.346571777 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.290893216 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342646776 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339403266 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.341678492 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337931635 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.447331158 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341009333 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.336443271 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336345031 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.50112681 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.340007411 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340155089 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339626103 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.340917554 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.341386501 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.343254588 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.342583842 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.338781875 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.34136957 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.364442673 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.342680465 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.343195758 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.342610348 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.342375976 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41586035 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342604785 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339029757 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.343889217 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.420729349 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351412475 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.344159113 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.339548533 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342703634 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339334699 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.498985598 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.394060445 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.342482022 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.393660908 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346699303 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.342169156 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.3425262 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.345703704 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436401221 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.344964119 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.393997757 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.339215293 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.568578933 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368520505 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344506884 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345761465 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.347333345 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345518631 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.342382817 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351895702 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.342370238 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.34647257 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.351678552 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343207599 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343105285 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.529129207 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.503651895 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.344718373 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.357386932 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.350767524 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.342885916 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.422140919 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.347304765 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.343543178 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399625637 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.463906028 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.425986754 seconds)
  done (took 139.009243148 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.358030085 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359263339 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.347391798 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374908748 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.349761344 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35042556 seconds)
  done (took 9.377052382 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.350270939 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.348962895 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34783304 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.346417878 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.34539155 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.349598047 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.346544641 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351981556 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352036304 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.348513483 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.345851576 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.34716537 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.350088063 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.347846996 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.351849425 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348344421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.348611898 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347147886 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.346495758 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347518753 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.346952589 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.34768952 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349365212 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.352077201 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.353702003 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.348866966 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370595691 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.349314739 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.347535164 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.352641722 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.36783137 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.347554917 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.349555017 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.355769128 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.35556443 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.352224868 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354160107 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.350850456 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.346866482 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351707538 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.35010164 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351542364 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.350067752 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.348754722 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.35267244 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355466066 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.355698981 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374022952 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.351358823 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.354261178 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.352090342 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.351617327 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.351897613 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.353159693 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.35595758 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369839419 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.356066386 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.354028501 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.351280214 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.353469564 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.354653775 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.352232382 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353597738 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.354116306 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.348559363 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.352456077 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.353584822 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357978505 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354799766 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.353006814 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353703301 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.351164526 seconds)
  done (took 99.594534783 seconds)
done (took 369.010048837 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.315206014 seconds)
  done (took 4.558642244 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.660241514 seconds)
  done (took 3.908643066 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.295641366 seconds)
  done (took 24.549817847 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.44689459 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.36113518 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.364595968 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.340532183 seconds)
  done (took 10.758648604 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.711199272 seconds)
  done (took 3.954552516 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.343284466 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.341211304 seconds)
  done (took 5.929372538 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.698436987 seconds)
  done (took 3.943698846 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.850039499 seconds)
  done (took 4.103363349 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.344319366 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.356682814 seconds)
  done (took 5.953270585 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.353128538 seconds)
  done (took 3.597476525 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.965025716 seconds)
  done (took 39.209380335 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.348776438 seconds)
  done (took 3.600097951 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.381197239 seconds)
  done (took 3.626388022 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.285574168 seconds)
  done (took 6.53055089 seconds)
done (took 125.462789153 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.345351742 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.342863344 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.340548397 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.342020381 seconds)
  done (took 10.612066302 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.405016026 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.404516753 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.404934996 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406928627 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.403918047 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.407199246 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.378960727 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381053762 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.407495692 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40456982 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.405928095 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.405114962 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.408025503 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.380435632 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.407406918 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.407164457 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407676121 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.407349859 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.3789398 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.405730646 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.358542399 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.40823312 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406493778 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.357228863 seconds)
  done (took 34.793646992 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.875395939 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.433557236 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.512052165 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.408539546 seconds)
  done (took 7.476241573 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432151143 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.43478413 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450990756 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492180285 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.497931651 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.446450865 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382869595 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.375176642 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.362775252 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43331267 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.483691988 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.425989815 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519921832 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.35733474 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.563714306 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.355987662 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.359076358 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.435184238 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482774476 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.504709032 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.356529325 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.436356524 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.442503059 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.427278392 seconds)
  done (took 35.706214442 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363434005 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.37017134 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.356397946 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.37210093 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.358009525 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.355572685 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.356581792 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.361398526 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.356037831 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.353577218 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.355442088 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.37378074 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.361235668 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.356621596 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.364491009 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.357279937 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.362142642 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.362757064 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.358044533 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.364201416 seconds)
  done (took 28.467998369 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.349638907 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.35156694 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.705002169 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.609479402 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.355013797 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.350446107 seconds)
  done (took 13.974064992 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.436720376 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.608818312 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.358351423 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.77820834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.864321703 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.361082743 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.358975939 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.646693314 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.016209544 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.986964721 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.422361129 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.440028049 seconds)
  done (took 20.532447971 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.368986778 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.353065467 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.357283084 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.370674518 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.422744188 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.378903318 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367869337 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.353571339 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.42602167 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442839685 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.380427832 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.42547949 seconds)
  done (took 21.900322465 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450287763 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352623117 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367849421 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353201271 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352816712 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200437001 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368563208 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155716332 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.377931676 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629220726 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357960868 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449654866 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614131417 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365591092 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357375759 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35566875 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590627857 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896645565 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354308067 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37090535 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385926135 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356504242 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373241255 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599075047 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357385049 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356069991 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.617731324 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35671042 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681918946 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372364957 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368011443 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355972298 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632163407 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078211637 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475023628 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599194169 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37086908 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355619986 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.359833299 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.357329095 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371056577 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359705232 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369291305 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357185893 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358075365 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370500748 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170774384 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.383042797 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.356008267 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360615241 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659360326 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458230902 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.363793628 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361523601 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393041577 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35801192 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.363776602 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462174379 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944559613 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359070265 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376282929 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.361895029 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380768154 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357973949 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05015008 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.363065431 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.365368345 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364209537 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359634376 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37311858 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372399824 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359734789 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.383135052 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360119677 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198962709 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370472624 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363014942 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965953996 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363819948 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.361206321 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596224214 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360819776 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360193374 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.357973467 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361139577 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176740529 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370744307 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.3456582 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382903428 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161693263 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624370033 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383407633 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392524223 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582772991 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.344028933 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361592164 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.366241824 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363316765 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378132888 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.170385529 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379647895 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.359198695 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622853873 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.574286365 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362968441 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.353946269 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916449862 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382376393 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.375278269 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365307498 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606499169 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.024271302 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380450295 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360764967 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40102478 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361534706 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226962326 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367995317 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.462964381 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370017449 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668016309 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.278631685 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367116932 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431650068 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368799202 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365285998 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380576839 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363178116 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365335875 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.601528824 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38258664 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.375690075 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.364728347 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367488123 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.361333007 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379173382 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.366318027 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589418235 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365240563 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638802648 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365476103 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364328504 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362140555 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.58535374 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.361325653 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.718845529 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629858573 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364497586 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367175334 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377869876 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384994333 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466991128 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389613843 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.366892319 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62203756 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373526382 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.369559333 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363458376 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369161501 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372922002 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.373460902 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374052189 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029779001 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342974384 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371378484 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26315881 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.381950352 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434015563 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373499557 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61520427 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.37149205 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369728446 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.369065538 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.36942738 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592708258 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377442003 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.369392077 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44955981 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.918821479 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052063532 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382136734 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.369526138 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.365790008 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.365268551 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366191345 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366889108 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370341699 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614978613 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384849935 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372521659 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037324771 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370609333 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368721849 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.376244925 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382086738 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.374458213 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370614241 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.369533119 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365000305 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372129162 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.382797143 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513671289 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.383328646 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369070252 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.886618338 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375164858 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369767479 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371598531 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405791689 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371596152 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336746457 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635988849 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381161484 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670226454 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373660853 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.385688622 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.368934191 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382941862 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374078338 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.389652215 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375233488 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.38313928 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371594423 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374874351 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946218121 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233173067 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990573285 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411723191 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.373027455 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372999716 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186812565 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391993969 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372018368 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638423031 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184946312 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391677412 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924019077 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.391364676 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221474051 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675888556 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606721376 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373478032 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.385127151 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68019594 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587452963 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408117889 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371861782 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372493474 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.355712302 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024009884 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393072816 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448179615 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191090212 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400368064 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370567489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.445549024 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38491004 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842800773 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394955721 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372986205 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375284136 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389479166 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337777698 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380223893 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373697057 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067824193 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38781054 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.933079915 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39339407 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623782797 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.386501444 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.379424368 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.369832366 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.369865726 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.628842379 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679406892 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377726599 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389740072 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988411898 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.243350856 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.382086174 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375253098 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236462051 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380991205 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70811673 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.381211443 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.382183098 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379212562 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3764602 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37798825 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.374296833 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385635065 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347185786 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925927226 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.374434521 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397005128 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377689437 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376768662 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633005951 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.390504014 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049756188 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607138606 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382931645 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398804508 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.38258985 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380912547 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.361708871 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378645585 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375376112 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397192775 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599509614 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379948024 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.365210605 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439772195 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583685925 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377907788 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379847816 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654727578 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.373646809 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.395619093 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242591439 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41298414 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381829991 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376697745 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384090724 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397457046 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446352447 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627627183 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.389041145 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.388831521 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847852941 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402433751 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375309729 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.39296598 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475598167 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380516715 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.38807442 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.151760898 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034720777 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182908121 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.031669148 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673730674 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376240674 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390608878 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380467323 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539720193 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378822631 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652721747 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378069198 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.384972972 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400637968 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38791472 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376845687 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594167195 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656646877 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381198819 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380647304 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383940842 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.382244673 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391742831 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.59626733 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92978062 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9906861 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380859089 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381527778 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.202951323 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674397313 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382016281 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381424732 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419466235 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.407437233 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.399133032 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.390818429 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395746243 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523788137 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679099596 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111396382 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411841554 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.411309536 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.901252543 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380883818 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637398298 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390194806 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631249568 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039046476 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.162589367 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648990011 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454378418 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634596221 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.382652183 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546056586 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.396703201 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380911953 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384220464 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38225933 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.380129869 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396385577 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066544091 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654700754 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.38820764 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.394270551 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412206218 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.395332888 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610940108 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220132964 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615889861 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393822604 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391252867 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386576519 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066319314 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695302192 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387188368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.384987913 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663025129 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38654667 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40853977 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.073074268 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.38380443 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017969957 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.358844864 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408622805 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403808597 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.185338671 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065294025 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.398783013 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959287705 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387576241 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384373182 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661216368 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.392229669 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38673641 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664360521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.393607084 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401929435 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633522271 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.059339384 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247334743 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.408625995 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40959274 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.389378598 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388708986 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471154399 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384054392 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38338173 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.874932517 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407290313 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38861802 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395535567 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.384324985 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384481244 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.387566656 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390126396 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.390742183 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.37793711 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.374860386 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415336843 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511115706 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045364176 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407515415 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059150897 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.719125251 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647675057 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387226676 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.376129004 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.393428391 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392409629 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390662928 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388213133 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387046268 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003593584 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.388119864 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.401944585 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396972329 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.390715035 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600016589 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405386189 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636451352 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390968643 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406225047 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.374918951 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391839446 seconds)
  done (took 981.800243472 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421246061 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.406666281 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.40916245 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.412266566 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.457147879 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.504208459 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.470236464 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411229337 seconds)
  done (took 20.777287029 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.390159693 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.401091502 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.40081918 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.39694892 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.409161766 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.933015242 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.407543749 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.400866906 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.409657872 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.39481557 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.389210876 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.374782304 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.395955724 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.407788586 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.379543685 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.399244054 seconds)
  done (took 33.182842614 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.651285255 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.629250372 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.880267192 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.459110036 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.428282938 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.390940437 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.749460082 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.421103433 seconds)
  done (took 27.896927449 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.406931859 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.404307985 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.404618953 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.404034852 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.403244751 seconds)
  done (took 8.310733475 seconds)
done (took 1246.673941405 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.398633279 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.403262887 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.396761683 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.401309419 seconds)
  done (took 6.886496584 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.377404199 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.37654535 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.379062044 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.391663702 seconds)
  done (took 9.81285242 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.216004908 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.13217631 seconds)
  done (took 5.6342896 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.895367799 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.895960681 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.897639693 seconds)
  done (took 6.978398741 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.726824506 seconds)
  done (took 3.017121783 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.313681186 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.395017002 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.078829526 seconds)
  done (took 8.076922383 seconds)
done (took 41.689341592 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.396726199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.73125632 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.552813179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399019278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.553747683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.548689276 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.219639817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393860727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401910377 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.398118111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.40629445 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.549475159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.131599053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.73440954 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.134022101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.642582076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.55755958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.409554055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.39826058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391507419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.23279168 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.409980808 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.389715718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402138241 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.553072282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.541294815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.395430347 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.643342921 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.411211385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.40350482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.542707248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.398305711 seconds)
  done (took 83.564985391 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397859787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391709222 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.39273558 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411977518 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.393157896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.411724929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.411239174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412872669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.406701673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396855652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.400325076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.408586538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.404741305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.410058228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.403963174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.407321432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.394914786 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.408034113 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.392239332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412339271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.393424382 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41097477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393801538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394202554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402194325 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.392506135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.423003675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.394472242 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.392880731 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.408582092 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.396078418 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414664057 seconds)
  done (took 78.178227897 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.399604655 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.39416697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.40382792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399409131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.410814568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.398282366 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396138492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39520095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393820627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.411943302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.405116201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412038436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.397234412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.395248304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.412730191 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396036144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.415186912 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.395508331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.396501146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416592351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394001733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399777196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393688886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41390368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.396343689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.400218564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421824301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396377919 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.393222917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.410364996 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.398072931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423957746 seconds)
  done (took 78.178431936 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.680907488 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406960107 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.40727008 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.399657212 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.406760537 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.406775656 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.401971217 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.684339291 seconds)
  done (took 15.089557021 seconds)
done (took 256.298082289 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.412309998 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.980633947 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.44380375 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.401846912 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.426244507 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.428706524 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.65731027 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.442656679 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.652574467 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.419892907 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.423242938 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.402273536 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.323175074 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.568797894 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.336871934 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.396194608 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.41448287 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.400162581 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.082437924 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.70591297 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.42753259 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.403901552 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.327978233 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.413829275 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.403966551 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.496165759 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.521247505 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.63281968 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.580988015 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.497856327 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.996028022 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.400167461 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.431312458 seconds)
  done (took 66.148597325 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.411938027 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.527805687 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.410154249 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.411938108 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.530377917 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.410271026 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.411007173 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.408980615 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.409809091 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.411441783 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.410973397 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.414123261 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.416357433 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.453335259 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.535384523 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.431139838 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.413817625 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.521576567 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.411587777 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.401954489 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.452189659 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.413035262 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.412433064 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.455216347 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.411342608 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.412254327 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.526024412 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.412222973 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.408930504 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.525534279 seconds)
  done (took 44.482029842 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414025748 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.05491373 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.234084223 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41786429 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.412474653 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.414547707 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.75341637 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.412422425 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.418480599 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.416232649 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.970204235 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.417018356 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452599973 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.262631205 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.415983667 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411525137 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.414871924 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.414513716 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.086222305 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422486625 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.778024639 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.414516029 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.758370581 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.42428938 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.434726928 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414078419 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.418255827 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.347617413 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.41673024 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.97133175 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.313762227 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.74895723 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.278368212 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.251373327 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.314932154 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.416246578 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.413823467 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.979416136 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.41758477 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.416953283 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.757069259 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.417974059 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.250818497 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.145859666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.430466807 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.411054912 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.337588705 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.971200088 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.703996068 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.42093775 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.276289583 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.420932766 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414433033 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.416273874 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.706483975 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.419672985 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.416002066 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.422043819 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.418183706 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.760768642 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.418289085 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.417412875 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.087570584 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.418551421 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.08595021 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.419565495 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.423138942 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.438861085 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.257054408 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422537349 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.148599547 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.433348199 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.415441217 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.977605672 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.086247039 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.424316155 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.421859898 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.095318645 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31280993 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.756330368 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.423347032 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.321815358 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.764470032 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.420703383 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.416554141 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.423839796 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.416262394 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493803603 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.756489037 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.094911008 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.147759997 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.440155412 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.761142325 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426887227 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.420035897 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.428415978 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.417078157 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.420121065 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.252014976 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.152907088 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.437293894 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.425067355 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.158771539 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.43924681 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.763430311 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.425576059 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.267356236 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.422427632 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494719313 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.420806141 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.428511779 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.442857592 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.765563111 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426312506 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.419980202 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.139769567 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.003279571 seconds)
  done (took 201.708804748 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.415883262 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.411316994 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.413186843 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.427464124 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.415337814 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.423373152 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.413040612 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.415952523 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.421059939 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.411500516 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.414068158 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.424224272 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.420349636 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.415628883 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.415381115 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.424878215 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.427113711 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.416122671 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.411752451 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.413295401 seconds)
  done (took 45.65745426 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.423430629 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.066873721 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.045820351 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.419521017 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.419622266 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.425528183 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.487721145 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.421809431 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.421837647 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.789567687 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.622531808 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.440268422 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.42140978 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.422484015 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.05391652 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.413428668 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.77071495 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.067548063 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.42036036 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.069981705 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.405653408 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.42237807 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.423622304 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.105755602 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.786163983 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.767973318 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.49176854 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.105483859 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.421816218 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.421498217 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.087581331 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.420651941 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42645853 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.051724106 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.438760851 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.438627077 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.42420822 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.493377674 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.492748589 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.763622146 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.133334923 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.74725094 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.434459748 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.617144144 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.424669603 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.41238646 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.058935332 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.438735899 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.414084398 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.424190559 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.429686624 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.034894003 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.438605313 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.033863872 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.436863332 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.431195324 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.064237285 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.035305475 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.050077452 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.622173464 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.443172141 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.756291859 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.420443796 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.064019779 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.438319147 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.427898953 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.426532408 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.630833428 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.082752546 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.755353138 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.768069764 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.767560233 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.424706906 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.49402772 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.440053191 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.842044425 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.491097463 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.882485943 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.769499346 seconds)
  done (took 131.330727079 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.720040602 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.540671856 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.866662518 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.0718279 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.417557748 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.559585782 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.5474802 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.699268839 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.418361554 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.517198167 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.140431308 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.525799903 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191053295 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.502574405 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.528408647 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.582547795 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.850813174 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.418427681 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.090095423 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.120798799 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.4419853 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.538051463 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.993206685 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.662718785 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.420359896 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.990097138 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.42783244 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.149044964 seconds)
  done (took 55.245433364 seconds)
done (took 545.864971061 seconds)
SAVING RESULT...
DONE!
