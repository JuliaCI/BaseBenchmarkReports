cset: moving following pidspec: 17200
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.254556605 seconds)
loading group "string"... done (took 0.467828665 seconds)
loading group "linalg"... done (took 7.609682477 seconds)
loading group "parallel"... done (took 0.172712282 seconds)
loading group "find"... done (took 1.183984133 seconds)
loading group "tuple"... done (took 2.115878299 seconds)
loading group "dates"... done (took 1.339043231 seconds)
loading group "micro"... done (took 0.247449245 seconds)
loading group "io"... done (took 0.663129714 seconds)
loading group "scalar"... done (took 42.004890993 seconds)
loading group "sparse"... done (took 12.90523784 seconds)
loading group "broadcast"... done (took 1.112286204 seconds)
loading group "union"... done (took 14.282926675 seconds)
loading group "simd"... done (took 4.76904816 seconds)
loading group "random"... done (took 9.70674327 seconds)
loading group "problem"... done (took 1.961964524 seconds)
loading group "array"... done (took 22.452539869 seconds)
loading group "misc"... done (took 1.419388964 seconds)
loading group "sort"... done (took 3.580576346 seconds)
loading group "collection"... done (took 19.412068197 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513787505 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136785891 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13180701 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147472274 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203014397 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143171102 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156112306 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114301773 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.966747547 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179491261 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152745235 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513282656 seconds)
done (took 5.103056674 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224554892 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093894587 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103336397 seconds)
  done (took 0.865332668 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07762972 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144127643 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094416471 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078050791 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095143752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078102576 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094707975 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078195013 seconds)
  done (took 1.33719296 seconds)
done (took 3.186226115 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.734456217 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280934705 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202046134 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460865989 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194972304 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214418196 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677790513 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.359162069 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252251635 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099447784 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143898643 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389636286 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136748824 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676120919 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08954321 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123734246 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177436055 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.468014787 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082465622 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110149338 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116368286 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141569184 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129486215 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090635496 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184169892 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081729146 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192919914 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10837474 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080909032 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289327217 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20170065 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685165636 seconds)
  done (took 10.88778931 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110574025 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133291579 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097380165 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137438276 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132896495 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099342344 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085839838 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096693674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121426303 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175745234 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114840613 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136170733 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094816273 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081976889 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115378064 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244438047 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122078754 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105225483 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100910088 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103419354 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122410547 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112200262 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108510948 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092935708 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167011052 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221699209 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113569758 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126850714 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097029339 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11178159 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142472591 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142144617 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096013144 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080188628 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173275206 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124677438 seconds)
  done (took 5.13071702 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186933978 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121010557 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167333712 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163547538 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138932193 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158926208 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112012014 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24424506 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109554978 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164562652 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139846167 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116635015 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079793558 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098248637 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094570958 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.670338804 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122289807 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154384014 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115937204 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102537294 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083934734 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36449119 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102414371 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080475478 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098184614 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064801279 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158077511 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099008312 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.141595875 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120650631 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082559744 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134493073 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207510013 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.159111205 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108285119 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136291112 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097637069 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078741831 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177888198 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095879713 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086197471 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097977697 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118727705 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077712686 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134142985 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096751849 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080307402 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204478303 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137638588 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095625531 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095324073 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.951286418 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181234337 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089665309 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097431301 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321558434 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097844433 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097997356 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07767458 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26912442 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182241373 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098131014 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079374069 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096938865 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080484178 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406209368 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08040153 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739554996 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089131025 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107237853 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082175192 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096081865 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103401422 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08857147 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114187752 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07929341 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099651025 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079063917 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096620653 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081484302 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10836177 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101787943 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080092292 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163544552 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080072813 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114692126 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126916659 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083622665 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095356041 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130182168 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083157858 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096516704 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132613434 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080611757 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108616954 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098125838 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141662606 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080756787 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.173179535 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080081967 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095197374 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11155464 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100417939 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129728944 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112250014 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098384554 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086052717 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095208668 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077560446 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163618058 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079398421 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097386887 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081472991 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110585109 seconds)
  done (took 22.555844921 seconds)
done (took 39.249800239 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32606123 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102328898 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102434509 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101955943 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09970998 seconds)
  done (took 1.478547051 seconds)
done (took 2.201286185 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286563047 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171568269 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09486517 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166249549 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093237456 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172881419 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159976695 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111319781 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217324371 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077834435 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163082244 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094217135 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077015718 seconds)
  done (took 2.634110891 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093691522 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113735553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082692898 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11012439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076325091 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110996465 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091468142 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116737693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109235957 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084955068 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093286504 seconds)
  done (took 1.80252558 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093554102 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112211284 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081565008 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110356222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075384128 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109614241 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092039692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114574482 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110136484 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084764327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092927348 seconds)
  done (took 1.795419217 seconds)
done (took 6.944933788 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090417675 seconds)
  done (took 0.803673284 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.919219326 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.868006028 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111763054 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148304438 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.300595049 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190131597 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.470431125 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124202931 seconds)
  done (took 11.056015736 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115468834 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102232509 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100656253 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083134457 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.114043882 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086178469 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099032292 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102445523 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086509362 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101819436 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082412216 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10072475 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100835578 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084708031 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100512924 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082040505 seconds)
  done (took 2.325983894 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119025174 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117225539 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106412583 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107865701 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087380547 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104148974 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105897631 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088186671 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101221492 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103341517 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090490458 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105592874 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103452985 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079060684 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105107418 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107429216 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085036779 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105467367 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106000194 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09082794 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106478721 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094653527 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086800849 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10568129 seconds)
  done (took 3.242030734 seconds)
done (took 18.146849027 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159942063 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108407329 seconds)
  done (took 0.992951363 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095219199 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112587275 seconds)
  done (took 0.935273873 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096829721 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094892613 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122339955 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109427572 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079650309 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095054357 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118452373 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079947649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096836012 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079993937 seconds)
  done (took 1.704965122 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081967632 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109197737 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100930612 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094297641 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104249391 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094695778 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087710358 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098064625 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109162111 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077079227 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102378182 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113832772 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086428222 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116251704 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104878146 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083091655 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101828183 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098244156 seconds)
  done (took 2.495169141 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079253377 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097041174 seconds)
  done (took 0.906874611 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081284913 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094121565 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081898146 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096846296 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094244269 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076796605 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093814784 seconds)
  done (took 1.348790168 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.468827119 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134950993 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255048055 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084795303 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119213168 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304075566 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098374114 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084281178 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103336271 seconds)
  done (took 2.438570697 seconds)
done (took 11.552254661 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092434398 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117384596 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11220089 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465975342 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106164702 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097300086 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160188999 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252599915 seconds)
done (took 2.141206593 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149770328 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326740707 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11500643 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068870782 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096859856 seconds)
  done (took 1.345123613 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079636658 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100266194 seconds)
  done (took 0.915979321 seconds)
done (took 3.151724702 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081567873 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132071667 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08060827 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095860505 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080588327 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095577207 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078438126 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097932321 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094586052 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080367744 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094674394 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080971376 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097207454 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080670243 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094364792 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077313977 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096398962 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077500205 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09648607 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077337558 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094805517 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080149956 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09417226 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078108094 seconds)
  done (took 2.908756409 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098894144 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097773596 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103027922 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085621844 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102325954 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086283001 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103038565 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097638521 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085523708 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099255408 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10104491 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084697121 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100078668 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084179963 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099667926 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101041573 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085874561 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098049584 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08250691 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101121766 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102077996 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080289036 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101896384 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102435457 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084266997 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100213245 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082592197 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098417305 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10271893 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083844976 seconds)
  done (took 3.577220141 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084764525 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094721398 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077639751 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101898032 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07717976 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096384505 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076980683 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095713469 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079326499 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094828494 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081047662 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094083335 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07751251 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096346297 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079754142 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098618244 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107344434 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078620201 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094724032 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079080327 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098416621 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07873489 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095466516 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077898418 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094344708 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077307125 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09536553 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078154826 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095976424 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077815691 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098654146 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08150117 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095309591 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085453935 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098627354 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077762294 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098521969 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078355396 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095488193 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094509549 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077375024 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094334718 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077067263 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101363076 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078179398 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097332112 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078254833 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096261317 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07852163 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098574324 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077838652 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094750044 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079894537 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096074965 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098766543 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07702479 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095278631 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076967851 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095597013 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078191649 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095064884 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076880299 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097126266 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078499233 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110464401 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085633035 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094489289 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080622911 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096501919 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080399869 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096671692 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109095917 seconds)
  done (took 7.134802809 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082798405 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106717242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080194872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097093041 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075856769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095338795 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098991406 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078391493 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097552845 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084368691 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095443617 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079675833 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096794816 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107510952 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079051006 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097585007 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085482313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094217967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078351867 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098774896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079026236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099107918 seconds)
  done (took 2.733054201 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209358072 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105480623 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141802939 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106541222 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084899068 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105974881 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102380801 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087938306 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101717523 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083655833 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100012177 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102598963 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083765224 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099822083 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100606709 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085565138 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101905271 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084301668 seconds)
  done (took 2.637389187 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093375341 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099157549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102995855 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098396754 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099068724 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084235064 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103918204 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107394391 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082370633 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098608122 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09054057 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099972135 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100246764 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080693105 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101235734 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081343533 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100937009 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081804191 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107704621 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104226696 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104471644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0910675 seconds)
  done (took 2.865110842 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096232581 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099959582 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117504626 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083281899 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095040527 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079840513 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105564316 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080977123 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106699069 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099977387 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081793183 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097115219 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087870648 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098262573 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103202142 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081479396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100246446 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081327461 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100139747 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077980121 seconds)
  done (took 2.625924221 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102373179 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09962674 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099510269 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091680136 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099340988 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081841635 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10891618 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100091708 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082382128 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124780798 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100263198 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082954278 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109510521 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104366493 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099310499 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091812608 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108546813 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109851562 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082222031 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099596605 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12455163 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083243862 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10842048 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099953151 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.191607748 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099857297 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099195648 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088936667 seconds)
  done (took 3.627978519 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080917725 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098776317 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078955139 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096740629 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078728793 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097070651 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078434353 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095977649 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081128613 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097200099 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08188942 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099035922 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081404589 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098748557 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0834746 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099061035 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081182541 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096564684 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079442434 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09577862 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081774931 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099151752 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081471788 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096352445 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07983899 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099230895 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078502209 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096070949 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080687961 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096282196 seconds)
  done (took 3.425138241 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090349096 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106617889 seconds)
  done (took 0.953192342 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079014768 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114039241 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079384938 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102886119 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086744569 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100163182 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108662085 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086140999 seconds)
  done (took 1.512237444 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095764901 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110109705 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083235775 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111651023 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110512741 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094701683 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160667452 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100348275 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087394135 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097665422 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095582006 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098890509 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105096971 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080951156 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105366876 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08860482 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096444947 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087784443 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102831025 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096958877 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083511054 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11026619 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084571416 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096804914 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08284087 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.1102816 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109704119 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083464854 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102126919 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108166906 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086975828 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09323184 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082520655 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100423171 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080249397 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108583313 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111869565 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084328714 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109189556 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083256987 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110695244 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095123415 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086887717 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105338462 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092764715 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100099445 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083026655 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09486584 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097143122 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084165548 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095675269 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082228735 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094275025 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090184876 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103199235 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112552464 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080746493 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100990007 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085290293 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103026831 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088353175 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101635337 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085141369 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09983804 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106706403 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086217874 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107016138 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076950894 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093769919 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080651448 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108359525 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121646109 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090260626 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101005276 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08367192 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097532849 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103380212 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083700526 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106461993 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089866315 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099369085 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105965316 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089960976 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099490799 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08472881 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107276345 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098515861 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083953989 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096901523 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097225054 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099027831 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080166359 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097319419 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108512689 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085745446 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099314033 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080393313 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107092681 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079539216 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100951785 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084376606 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100679712 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109039165 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087844142 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106274711 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107231906 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089508233 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100557878 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084993313 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096666484 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083717696 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101844808 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089011222 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093734438 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102551521 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084064426 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10056389 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089716028 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09829159 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082831721 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10709046 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106830397 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082167187 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097462205 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085468592 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100541308 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086338242 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107429101 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09962057 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078225402 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095796976 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086565145 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100421404 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086811215 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105803449 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102734763 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077085753 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098110856 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086324218 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107384006 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099993626 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081896034 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104156627 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083008996 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10014705 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088416028 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101435735 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081196172 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103402057 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102087993 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077653301 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104472662 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085491971 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098435502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086419652 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104592212 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103228581 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083997828 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10009607 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087941573 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101318292 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081474712 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099817617 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080973143 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110483569 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102968203 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078144782 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097205959 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090366834 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098773831 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081965781 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099016204 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102311985 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083560243 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09872215 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083122533 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10245145 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094432921 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105865767 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101835967 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08772818 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110484517 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082301938 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103058465 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100211535 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084280581 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101675777 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089434253 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105933047 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105801775 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084519849 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097169188 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08883771 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107753092 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081937418 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098431772 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081784625 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104200501 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106772968 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086253234 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102330167 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081049243 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100647029 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104613741 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085330462 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099532483 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081603711 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105505941 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081500062 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107979079 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101508475 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091668243 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103978344 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077689416 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10547466 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098922061 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088658515 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096532506 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080899768 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099915534 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08435385 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099419204 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085817218 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095291489 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090280047 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10871611 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101088099 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082455492 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10097249 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091470602 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10228145 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086860817 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103181826 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105968184 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095905726 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100371484 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086726093 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109847628 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101353643 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076536213 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105553604 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080846744 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100048694 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081978488 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099827847 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085970194 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109726783 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106206184 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076619054 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104082413 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081182799 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099523289 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078039805 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107064593 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104213603 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084030168 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109285666 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084453037 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10202678 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086921105 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101826625 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10278134 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084063195 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10453802 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084415501 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104027139 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082629421 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10275655 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100107929 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080539178 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103250883 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085750199 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101844819 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089293884 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10089535 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083075679 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103737582 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102669203 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083980216 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101319335 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083036043 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104644627 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084471858 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102218144 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085420429 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096930138 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108209136 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082743634 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108786631 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082798347 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097218116 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088124107 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104692128 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107242856 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084387231 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102903455 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084556605 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101216626 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085567522 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109495816 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098683047 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091966165 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10659071 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083617519 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104642739 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08327196 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102626994 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.0818572 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102816055 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102955016 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082973985 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10073719 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087458246 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104334247 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082975564 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102722454 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102659415 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08278538 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10251838 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078342291 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101071752 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082982806 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101256872 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089807103 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10240001 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103881721 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081654276 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102826563 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082320684 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097771945 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091318064 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11037168 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103013127 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090545955 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100595072 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085101796 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111137468 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096040053 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081393642 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099676596 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080647022 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109937769 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083791803 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110098717 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082878901 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101607097 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099296483 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084746832 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100441469 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078034197 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099192315 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086755402 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104238119 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08144854 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102028281 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08565485 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102898915 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108792556 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083598078 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.1028164 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084066606 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098909189 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081357014 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100362507 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086478269 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103206189 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099524781 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080555053 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101328591 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085634909 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102818289 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083206675 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103117791 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097932494 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101078308 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10479961 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087368601 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096198649 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08658146 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101958524 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082486774 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101122754 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08733104 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106090232 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102647214 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090324019 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101755965 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08420534 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102484644 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080581069 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103116678 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10185634 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08448838 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100622228 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084229947 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110376981 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081267407 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104063409 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083084227 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102784861 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105966278 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08494808 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103463986 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091171587 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104402488 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102464041 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090295634 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106331443 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08659608 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103179931 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084163693 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108013596 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100632726 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090925344 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101774193 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084485642 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104511339 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081131024 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10131148 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083132402 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101176179 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106115955 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084653289 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100712997 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082827372 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099367138 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085252065 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106821605 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109739072 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086326475 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104969948 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07923327 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099368971 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085180617 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099413661 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085126063 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105491526 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108427705 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086363938 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101902716 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082885221 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109186372 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08967399 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106693589 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099875846 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087694991 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103641495 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085770836 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103366576 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083117675 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103662464 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107020613 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085095908 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101931685 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091698887 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105558851 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084201491 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104145138 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083974318 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102326807 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09767569 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084868301 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104039416 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090457144 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104901126 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084047597 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111982896 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101829022 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082998898 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106671235 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082830252 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108837745 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078868497 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104366232 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103389232 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085047407 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097556263 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083302244 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099808932 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086568357 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101618343 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078448151 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111047618 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109401823 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085508646 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100779719 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082287661 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097329249 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079292645 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101987304 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0849701 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104596807 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110721994 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08301177 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101648289 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079045441 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102303576 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086949323 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105946794 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081032868 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098567626 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082549766 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10457917 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109053413 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082395963 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102123292 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087530619 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105336751 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081050585 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106700372 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099160125 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087416395 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112858228 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085511044 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103530348 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088420585 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111585794 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103345208 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079410406 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104379326 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086175193 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103049859 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085275953 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103505632 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116483831 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086850986 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102046327 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083632391 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106420006 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083535548 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10978853 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103637145 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085023237 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107611042 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085043167 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112844814 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105371966 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089432082 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104828948 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086201339 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102167334 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083351494 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101670227 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081769353 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103742651 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103674556 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088350145 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110883977 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08231944 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113671175 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110835243 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088385398 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098862843 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083344399 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101851661 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079579378 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104502519 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081640673 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101227383 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100634311 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083059884 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103209395 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090395379 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104560132 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08559561 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102952424 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077433721 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10430826 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10503846 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087395209 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099939172 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08510753 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104572471 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089061121 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107852045 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083982478 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105615174 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104656345 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085620223 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098472445 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090290032 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101461496 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086844647 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102841694 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084380619 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103653036 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106699258 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089906327 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104574852 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08627375 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115492515 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106663407 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081625201 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100235774 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08963049 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101026929 seconds)
  done (took 57.67211978 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14603881 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0809065 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098255782 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079618898 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113620659 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099443524 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079202769 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099383176 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080614741 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102298854 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078821886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099249862 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109880199 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124785782 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093277764 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104310016 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078961155 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099950828 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098249182 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080944811 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108827943 seconds)
  done (took 2.861708627 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104523353 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117281195 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114458445 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119553691 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090170174 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114965942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114226737 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116196363 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099426945 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110613106 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118252902 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115427943 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091616298 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109783022 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110660561 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094190302 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118343151 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108753365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115307762 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095238048 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112911223 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11451943 seconds)
  done (took 3.211791654 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084942114 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102111137 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086340251 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097859704 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083526498 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09809944 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088651582 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101612255 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087768443 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103258623 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082694528 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102657308 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104377624 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078978779 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103259338 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08177388 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153018253 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107627717 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083216465 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105622176 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098305511 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086373425 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099137751 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080411621 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102312285 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088961229 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103765346 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082535307 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103295338 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082615659 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10355057 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081520056 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105095937 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103188179 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083816135 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102893146 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08397439 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102951852 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079824882 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101067886 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084589745 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098787042 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084896364 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10460696 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08247976 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102161018 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084697517 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103928911 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099679032 seconds)
  done (took 5.466319581 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104731256 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16160797 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085876986 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144662847 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121924178 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113273155 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088457164 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142669516 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102839627 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083672445 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122758384 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120524533 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103924965 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09077256 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10861333 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104082525 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086276618 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102094682 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088514449 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104374602 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109156529 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091604536 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119905596 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118110096 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108276029 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083668652 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103080556 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108492334 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098722377 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110031911 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109916901 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090916355 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121031788 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105432254 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084145055 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107299519 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123340209 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084499627 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107506364 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.1012417 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088094524 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109535595 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110055107 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.1029461 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104850843 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108346846 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08548757 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10164574 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117699265 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08754757 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113287223 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119338191 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08901496 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105390756 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110260966 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120545022 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085203184 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102067811 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088243961 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117728981 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101926949 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088909909 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119345693 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106295637 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09266665 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119411709 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109248282 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108293971 seconds)
  done (took 8.131954595 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09335264 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111319135 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121731451 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120764442 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091329809 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111917866 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110775769 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091626175 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111509196 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117239117 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111288377 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134239543 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087202244 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114809982 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111416862 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091770598 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111904545 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111709126 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091315126 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110913263 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110991875 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121526973 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09265294 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120697758 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141818508 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106025426 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091654314 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112124593 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121485004 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110737618 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124770106 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091723477 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111159557 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120369078 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123888995 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091936134 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103992485 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111855312 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091821559 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111768583 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105940041 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102090952 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112090203 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.1052318 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091942214 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112919347 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121091817 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124610837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11470352 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09738835 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112758806 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121632114 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111239099 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091475797 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121182241 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148660055 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120915429 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121746532 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111379294 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100922028 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121787162 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128780586 seconds)
  done (took 7.691050962 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108035237 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115614523 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117909478 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099816112 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083197648 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109681673 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082828015 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102756768 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115217504 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095060358 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117189226 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109310895 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112120116 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097150028 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109879693 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112592323 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089696661 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110489375 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11482738 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109700923 seconds)
  done (took 2.93662717 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093566034 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124525199 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085831172 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112000896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108329285 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091040086 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107746295 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107235782 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085800935 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107985563 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096383622 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116554252 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105752195 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091546358 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117395179 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11104704 seconds)
  done (took 2.485747675 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096959208 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117469279 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120846343 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085007991 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104038006 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081094605 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105832685 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100992591 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082296529 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121641886 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085015076 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10922781 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104912535 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086765585 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101672816 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088609726 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10105262 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083131556 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105055074 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119863971 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096082746 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104050635 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10556843 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08775913 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105178019 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090814739 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105651983 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102827175 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083630045 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105091458 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085454293 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112722711 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102025424 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08389806 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103854462 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082884845 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104715503 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08590787 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10926476 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105402393 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084081419 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104281395 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085019994 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106860545 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081225659 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105914698 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101432768 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091883111 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102763766 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08580259 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105430624 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108190521 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087135716 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116251164 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089087643 seconds)
  done (took 6.246693095 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09893256 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109393658 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081125905 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10317812 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088369193 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109103272 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108691853 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088514533 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107287827 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084033418 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107053194 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090591565 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108448778 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108734055 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087300484 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109748078 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081275032 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107439722 seconds)
  done (took 2.611657304 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091721847 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105197281 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092329709 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105693026 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085589342 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108897687 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081208117 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104546501 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103729129 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086213865 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10598346 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088536099 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103879755 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088881461 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106649092 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085120446 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108264615 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105139917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085416573 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100855996 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08786011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104539263 seconds)
  done (took 2.967466096 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119578912 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125747609 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093255739 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23534224 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105006301 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136077461 seconds)
  done (took 1.647876896 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10991763 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121706955 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105938226 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108848288 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116367747 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107391979 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088395384 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107581383 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117963124 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102098152 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109109224 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117922595 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118105815 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097559268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114772746 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114364102 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107870315 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087980994 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106040204 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128928879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087493147 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119602718 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10806634 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086983676 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108627562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118029556 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117759049 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12223322 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087541892 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117811604 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11428612 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087903851 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119034284 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123078319 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109282381 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098773456 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10818326 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12943311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11539273 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097508335 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108845388 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115627301 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097737851 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114092194 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11825367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108272832 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09446125 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108124612 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108036556 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136577966 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094627108 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118579312 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1153779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11891651 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11769326 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135541004 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102611837 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117937438 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11564312 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122643951 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117284106 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093862199 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11845355 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122503734 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115119523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117697129 seconds)
  done (took 8.155786188 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102384437 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126716853 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10823783 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123249207 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097817905 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108052864 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107342068 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088031166 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108500122 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107624056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153204725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089191789 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118386991 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117852688 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108367087 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088944555 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10894096 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118111161 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088222726 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136020649 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108773173 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117819699 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118146297 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097534183 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122579514 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115030866 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108494717 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087706226 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108412128 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10872968 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094221451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108290756 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117309706 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087184661 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117450536 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108797135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088937129 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115502432 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108849667 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115172712 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097811545 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128610217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109195639 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107704136 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122604158 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088748655 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108972848 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087826997 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109056125 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107003206 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1023816 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122634184 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12344949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118571022 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108564388 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088531616 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108648578 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109347696 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087923748 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115239833 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118149797 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108501638 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136912231 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088720945 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109338258 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118262964 seconds)
  done (took 8.032307858 seconds)
done (took 154.856424805 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099239667 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137129595 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09653153 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168770656 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106680931 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120205783 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13853211 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097695669 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106578614 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086154972 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107463866 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087395659 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171857474 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085373107 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107489418 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108797508 seconds)
  done (took 2.663764582 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200556078 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254958311 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102600391 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106050985 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089551473 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111027288 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104919656 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092044166 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109928196 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085896272 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109305652 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087574659 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105894472 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087515167 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110584323 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088733158 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106783428 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08880298 seconds)
  done (took 2.885243747 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113687515 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146330819 seconds)
  done (took 1.110426767 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119513509 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180680979 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318098478 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155684437 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107286237 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127781271 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15681026 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131757774 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198591289 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123779357 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12266564 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097879487 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140716468 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115517665 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094774587 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118003045 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142749958 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092807982 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116109068 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116436646 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117390865 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10722164 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115992463 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093869371 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181340372 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120328896 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08554649 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106703142 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115860214 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.0957796 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113715269 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124998825 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098828848 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176080927 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102523018 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176759217 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098175501 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115073534 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115678715 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092409326 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119703598 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119180572 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104719975 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118817204 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084513452 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119507889 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106995903 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085771059 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114672891 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097314083 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115857245 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113139592 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156071988 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11929872 seconds)
  done (took 7.553103116 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79451169 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164207872 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091090957 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88620521 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139192175 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104267336 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782519991 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134664464 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235392593 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763250447 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134540319 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12267049 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229432541 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238539438 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931860209 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308996134 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672920398 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10327711 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150429889 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153417876 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119607942 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13752011 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131689422 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428452648 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096040636 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113156071 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117907859 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100572164 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159014397 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126138597 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115069283 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179412996 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246550218 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207404215 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116556399 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090467575 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112598925 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170510651 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268538092 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214283812 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181655409 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087773024 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112370326 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122232356 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111113234 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109421172 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166255485 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195060333 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174362851 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092348149 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12176256 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121033303 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120964622 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166109173 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120392055 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293073934 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326220262 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112207005 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121410472 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105338682 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26535927 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123746086 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225012562 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117413728 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212776044 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112825677 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784467435 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190189709 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090037758 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117829184 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120133234 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095099259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121935344 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167815682 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392739568 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125550263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093664022 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112067186 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210165329 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125932355 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111422245 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164449896 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11659333 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099740959 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12623991 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123021198 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171575112 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231177721 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126004719 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120279139 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094467764 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125186185 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11665234 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213024016 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221352857 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163637446 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212443025 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12382692 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164494785 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191965647 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099253778 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194516855 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098262755 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126792231 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122804508 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217286669 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145409713 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102437832 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117701335 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119024886 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149957087 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126759563 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09792095 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190577359 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458653228 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168990484 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10986242 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128112146 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099267687 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182855348 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097471858 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259681053 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122279395 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171324154 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12021278 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088096222 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121446907 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166437858 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123184066 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121450786 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101401736 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119998172 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236852189 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219236217 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125493316 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223471951 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185158322 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119778452 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172812738 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122468366 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168844921 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120715998 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121961856 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09601777 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796129785 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12408734 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098819748 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117118627 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187584736 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111719192 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103025564 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126619676 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109641293 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751658125 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128803448 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122475982 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102595167 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119403981 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122271952 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095229461 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116985733 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162104448 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231797158 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121577683 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12031162 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103112181 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181655253 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095573943 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126611992 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125310766 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126211377 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101527499 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116503357 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124980118 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171857367 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16369609 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221813785 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597711501 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09095647 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124637364 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230375467 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090460731 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291358082 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120955933 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226530084 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166386386 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122389119 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319387984 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166257388 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189413506 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127294264 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174974661 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087606514 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119392185 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168763456 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113688357 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11807285 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16419384 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127081728 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102438575 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.971661921 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113707947 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225708101 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109840145 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172112734 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116791265 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099294401 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294877806 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111847786 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107495874 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186902253 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094723472 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125700044 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.718509031 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10447491 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123068243 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118834322 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222917119 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164660285 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119017264 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098359296 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122090386 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164086945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206639455 seconds)
  done (took 44.179826414 seconds)
done (took 59.236057591 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275470825 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213433404 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258791326 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169499304 seconds)
  done (took 1.864097114 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17043518 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148052845 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121397814 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108183029 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150109976 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086303879 seconds)
  done (took 1.657207839 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351430167 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269750033 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239232026 seconds)
  done (took 1.737281156 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.29041829 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.255551191 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356613323 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.41994182 seconds)
  done (took 2.314465616 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21075808 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131694424 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110545488 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104341741 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196738134 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250344196 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14125871 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202630199 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121914412 seconds)
  done (took 2.392850018 seconds)
done (took 10.843309324 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.2466445 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.218763085 seconds)
    (3/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.210118138 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.138610893 seconds)
    (5/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.169562493 seconds)
    (6/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095894377 seconds)
    (7/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.256276311 seconds)
    (8/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.237261935 seconds)
    (9/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.203654606 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131852967 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099454845 seconds)
    (12/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11915082 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09398557 seconds)
    (14/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.195794521 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.153808618 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109579425 seconds)
    (17/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066363213 seconds)
    (18/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.193088271 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.231074949 seconds)
    (20/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.189457231 seconds)
    (21/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.228141654 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.248477245 seconds)
    (23/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.122881633 seconds)
    (24/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087551993 seconds)
    (25/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118043615 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.161684335 seconds)
    (27/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.213430572 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.227600995 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.089920366 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.141430519 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117898672 seconds)
    (32/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10232388 seconds)
    (33/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.190516234 seconds)
    (34/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092000567 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125019387 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.250021779 seconds)
    (37/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139544734 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067148674 seconds)
    (39/286) benchmarking ("sort", Float64, true)...
    done (took 0.234500424 seconds)
    (40/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13151648 seconds)
    (41/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.176972606 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094407342 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117741908 seconds)
    (44/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147690998 seconds)
    (45/286) benchmarking ("sort", Float64, false)...
    done (took 0.171701948 seconds)
    (46/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123595926 seconds)
    (47/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12270279 seconds)
    (48/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.094654637 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088982932 seconds)
    (50/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114057707 seconds)
    (51/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093799452 seconds)
    (52/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.258433955 seconds)
    (53/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.163958762 seconds)
    (54/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.155403161 seconds)
    (55/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.19344812 seconds)
    (56/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.143495378 seconds)
    (57/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.146312512 seconds)
    (58/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.196864217 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140098487 seconds)
    (60/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098784821 seconds)
    (61/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139941601 seconds)
    (62/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.185916278 seconds)
    (63/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096524022 seconds)
    (64/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117606161 seconds)
    (65/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.184801116 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.176222512 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112116571 seconds)
    (68/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.148853366 seconds)
    (69/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199586726 seconds)
    (70/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102016004 seconds)
    (71/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.1153994 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.111793039 seconds)
    (73/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.140444807 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087191793 seconds)
    (75/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17104564 seconds)
    (76/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066530147 seconds)
    (77/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13915086 seconds)
    (78/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085749506 seconds)
    (79/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121222012 seconds)
    (80/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06794606 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135978176 seconds)
    (82/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141399716 seconds)
    (83/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082873773 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090229924 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119294266 seconds)
    (86/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066854113 seconds)
    (87/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.169221883 seconds)
    (88/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168572493 seconds)
    (89/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.134102825 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.116652396 seconds)
    (91/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137981359 seconds)
    (92/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114244517 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067634713 seconds)
    (94/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09562686 seconds)
    (95/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.108852708 seconds)
    (96/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.189474797 seconds)
    (97/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.150604125 seconds)
    (98/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120704029 seconds)
    (99/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097203221 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.168941066 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066813833 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157639964 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181882927 seconds)
    (104/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071224484 seconds)
    (105/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140440588 seconds)
    (106/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117703545 seconds)
    (107/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067104566 seconds)
    (108/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097527685 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 0.204322002 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095591141 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117609877 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106093884 seconds)
    (113/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.145203548 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.136473844 seconds)
    (115/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124817912 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134858151 seconds)
    (117/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.071300191 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126409819 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093009776 seconds)
    (120/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136437617 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118723337 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086611086 seconds)
    (123/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117100153 seconds)
    (124/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.14934469 seconds)
    (125/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12594724 seconds)
    (126/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171394115 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094935377 seconds)
    (128/286) benchmarking ("sort", Float32, true)...
    done (took 0.231611474 seconds)
    (129/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090145574 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068771511 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110564365 seconds)
    (132/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.167429057 seconds)
    (133/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138709614 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087162409 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118046717 seconds)
    (136/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.153968018 seconds)
    (137/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075817963 seconds)
    (138/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136872929 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159822662 seconds)
    (140/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123383367 seconds)
    (141/286) benchmarking ("sort", Int8, false)...
    done (took 0.189254425 seconds)
    (142/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066244018 seconds)
    (143/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090573176 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.09872322 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119412108 seconds)
    (146/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163383271 seconds)
    (147/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233736054 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148593915 seconds)
    (149/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091805686 seconds)
    (150/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067720888 seconds)
    (151/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092978153 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116526492 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109150496 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159206396 seconds)
    (155/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.100911877 seconds)
    (156/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068885822 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122531742 seconds)
    (158/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088575521 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117374685 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094432779 seconds)
    (161/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.098690001 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067383507 seconds)
    (163/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.120330597 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109965986 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093986559 seconds)
    (166/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119706639 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16436179 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087860669 seconds)
    (169/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.100230924 seconds)
    (170/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068283864 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119264644 seconds)
    (172/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092885379 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091170873 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100986516 seconds)
    (175/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089547664 seconds)
    (176/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086754237 seconds)
    (177/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116369737 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067075926 seconds)
    (179/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189849574 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093869906 seconds)
    (181/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219741961 seconds)
    (182/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091867948 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069120415 seconds)
    (184/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067727658 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.22360534 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111538247 seconds)
    (187/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174772909 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087847668 seconds)
    (189/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110060922 seconds)
    (190/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.119687816 seconds)
    (191/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110497921 seconds)
    (192/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068636315 seconds)
    (193/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067318886 seconds)
    (194/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185922053 seconds)
    (195/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111246885 seconds)
    (196/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.077575901 seconds)
    (197/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111494512 seconds)
    (198/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.10067975 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135609722 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087321417 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120564804 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118267558 seconds)
    (203/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067724423 seconds)
    (204/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094801153 seconds)
    (205/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090976702 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088704653 seconds)
    (207/286) benchmarking ("sort", Float32, false)...
    done (took 0.17362734 seconds)
    (208/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112335385 seconds)
    (209/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067057243 seconds)
    (210/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093049989 seconds)
    (211/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234915558 seconds)
    (212/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122264568 seconds)
    (213/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114535321 seconds)
    (214/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.383910203 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112185175 seconds)
    (216/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098237086 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116389403 seconds)
    (218/286) benchmarking ("sort", Int8, true)...
    done (took 0.223591608 seconds)
    (219/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089758994 seconds)
    (220/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093852887 seconds)
    (221/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088925214 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110005776 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094848067 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109981568 seconds)
    (225/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096377586 seconds)
    (226/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091824648 seconds)
    (227/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08755491 seconds)
    (228/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115859565 seconds)
    (229/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096476233 seconds)
    (230/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091204448 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067162037 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112205953 seconds)
    (233/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.129252028 seconds)
    (234/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136195192 seconds)
    (235/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089059427 seconds)
    (236/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112101401 seconds)
    (237/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078056685 seconds)
    (238/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.093626744 seconds)
    (239/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094416274 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11051624 seconds)
    (241/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075808444 seconds)
    (242/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068310138 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111583605 seconds)
    (244/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086366863 seconds)
    (245/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112604201 seconds)
    (246/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067260726 seconds)
    (247/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.091808777 seconds)
    (248/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067523351 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087752792 seconds)
    (250/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101266461 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094084329 seconds)
    (252/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138516508 seconds)
    (253/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06754785 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119148546 seconds)
    (255/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094073613 seconds)
    (256/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.100440629 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087858257 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090410553 seconds)
    (259/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093949024 seconds)
    (260/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067225041 seconds)
    (261/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091066914 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088445493 seconds)
    (263/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090791759 seconds)
    (264/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089880049 seconds)
    (265/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.09006842 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095362111 seconds)
    (267/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116034751 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085745093 seconds)
    (269/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067056939 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109160272 seconds)
    (271/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110385867 seconds)
    (272/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091237278 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114576655 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09541435 seconds)
    (275/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091432724 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087021169 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11570932 seconds)
    (278/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094862084 seconds)
    (279/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067527936 seconds)
    (280/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092178058 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086765015 seconds)
    (282/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117412148 seconds)
    (283/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06756127 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115913151 seconds)
    (285/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093934271 seconds)
    (286/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164381094 seconds)
  done (took 36.233373767 seconds)
done (took 37.113844269 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10003002 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148140046 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097498149 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136667088 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124135333 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091520896 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118667255 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098403528 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123946979 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125509104 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098245032 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093170188 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097760325 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120459547 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096676515 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138954044 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126526399 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09385764 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118869134 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085632838 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119449491 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089278281 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111798885 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069799924 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121668873 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094304072 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117294049 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120134871 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087247246 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110384758 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091056543 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117794717 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086895151 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124546853 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093629481 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119527009 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096769517 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120403323 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111603396 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087049327 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119088899 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087006097 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117616265 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095155528 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115837323 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092820342 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118443141 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099088741 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139325941 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115736504 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095338239 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121276698 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097490735 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118026744 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091198526 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119399413 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092625943 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1402187 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119937468 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092035623 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120534513 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095577918 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116980845 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095399749 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119564386 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122054974 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098052347 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116485571 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097444329 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116034926 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087898695 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119938347 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090436234 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110961994 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096095908 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121342551 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085841004 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116758854 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117613636 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091906588 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110013743 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089978996 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112021924 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093280113 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112167524 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069928173 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114336779 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093553583 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110166071 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096396122 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116687963 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094503726 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11295234 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099329478 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110985339 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092729695 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111078518 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087331723 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113593505 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091354177 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111176697 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089993506 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119916998 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089028862 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118013617 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123405927 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086595365 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117483307 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086562056 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110727263 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102435991 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121372723 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087872624 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116581664 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086828223 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118905249 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086491398 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110882676 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088046174 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110447296 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093417827 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111631504 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113456244 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094713973 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124784418 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08759479 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115179891 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090617203 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110862045 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093429508 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111326508 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087982769 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113286574 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078115745 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114519537 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087294816 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11875798 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090623222 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120622971 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089022399 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121269819 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092389214 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118568851 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092786091 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110849467 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075014575 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117193956 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089762317 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11335945 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087639976 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114616991 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087120276 seconds)
done (took 16.968784378 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088041219 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183834984 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152037315 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142489909 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107219766 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112218992 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122706442 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118801085 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114002805 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143227776 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11118527 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132348545 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147670385 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087146377 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111830278 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091289269 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113545993 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102921673 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146738396 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13358263 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163874615 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0868814 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147355344 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135568603 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122113345 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105778102 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112704348 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092047655 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11526846 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113464336 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133076453 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114971025 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088082256 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134675859 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104993163 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120344201 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08757423 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119004512 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087376557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112710941 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141075795 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133736636 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09325405 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117767807 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092401617 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114761248 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089083057 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122043066 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099040455 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11672347 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126581802 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156223072 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092015886 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122478781 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086931861 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123088328 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122219227 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090432829 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112433497 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09054844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112674846 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091353704 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127511323 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142226617 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091426377 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122030621 seconds)
  done (took 8.619759762 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105098455 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139708094 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105812197 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131294572 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112297774 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088604871 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113264169 seconds)
  done (took 1.736049271 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088895787 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13485628 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111558659 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137314966 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132511539 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112043109 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124489759 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088770314 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133481319 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090486823 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134023546 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15040311 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090120639 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122008144 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138391699 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088584105 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138032876 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088892834 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118009692 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112921058 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117816964 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135502637 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091901062 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113611889 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104006605 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113688744 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162389662 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094695497 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115277852 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093096529 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112147459 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151391258 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103262499 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126045978 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089140389 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129989821 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129046619 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087056058 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125994829 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094790941 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127892067 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090069677 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115683385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087491084 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119059291 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099262119 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117969674 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090814034 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11777221 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134697158 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090260281 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.14594958 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090144291 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118748804 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090436561 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120632136 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098018503 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114564922 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133782543 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09091433 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131838767 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105999343 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128719705 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131276717 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092294801 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.1281524 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103163931 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117579931 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091220015 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118857836 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106760961 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112413814 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116225796 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099761144 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116606528 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113234661 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137900646 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091682032 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125678509 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.1147161 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090107383 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114188475 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113590245 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118309152 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090094494 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11881141 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091760193 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113127052 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089358923 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118303129 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087784086 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116318212 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095795442 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114916587 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092447863 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131182747 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115600052 seconds)
  done (took 11.862458803 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090551683 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115931644 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091962012 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114799356 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091064322 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114927081 seconds)
  done (took 1.571662468 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115235965 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118103133 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104302447 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121479473 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156530947 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104207175 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130364663 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123908921 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109129986 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127558498 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129744546 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105445772 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13626459 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122553196 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103482689 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120647464 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104503389 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126142066 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127761859 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097210667 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13792046 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120978874 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097477686 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132393826 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118204209 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096786094 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126198466 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103388394 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128154999 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123601017 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096847497 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118974852 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097416675 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123564386 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130580892 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096773336 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121249573 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119517971 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101276904 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118901448 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105001605 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122908067 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127375873 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094707872 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124522934 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121482093 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094616816 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125796916 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103798519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119708904 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120119889 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096544327 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12086653 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09515273 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12351713 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126003628 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094068053 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130239135 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12204584 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097086469 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11917976 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093527395 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125586694 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118564885 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105040699 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120253218 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122279475 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097121254 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122553555 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096845161 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119905444 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093981413 seconds)
  done (took 9.25074826 seconds)
done (took 33.980540896 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685871319 seconds)
  done (took 1.637559864 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813036949 seconds)
  done (took 1.766462027 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.880125228 seconds)
  done (took 17.860794937 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49268615 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576610749 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992737403 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179258279 seconds)
  done (took 3.193688224 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.942733556 seconds)
  done (took 1.915672528 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28346758 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235548394 seconds)
  done (took 1.479246517 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770073594 seconds)
  done (took 1.739814377 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.392600889 seconds)
  done (took 2.352045107 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326606576 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184184801 seconds)
  done (took 1.478774265 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550023719 seconds)
  done (took 1.517968716 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.994637048 seconds)
  done (took 10.965264436 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267982863 seconds)
  done (took 1.249392547 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303291027 seconds)
  done (took 1.275716368 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.508651582 seconds)
  done (took 4.481843439 seconds)
done (took 53.879472069 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099109509 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128324158 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103227072 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124627422 seconds)
  done (took 1.421789573 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101143304 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121961202 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101064615 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121870135 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12677619 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096137664 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123647731 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101040529 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121269122 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097306008 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121366901 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120709897 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099623309 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123890645 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094254835 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124174968 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099657995 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121877246 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124127614 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097216673 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119878361 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098773572 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12561885 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095143402 seconds)
  done (took 3.654445719 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101180131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119330025 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097152349 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119549197 seconds)
  done (took 1.419328747 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100736622 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132254438 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106271759 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125744162 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132484169 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106116758 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118155219 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09260047 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120256372 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099363519 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11707933 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139505245 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106914717 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125125591 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102404119 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115486994 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091516186 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132076633 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124994243 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101826155 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118504808 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099658814 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115705663 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108844942 seconds)
  done (took 3.710371312 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169725487 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127477601 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138836468 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09575049 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16062691 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141082147 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08879733 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141708825 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088143403 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1313078 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118633652 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133027148 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130487664 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088613556 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114100011 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088388342 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129752973 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129627745 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091752058 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128773547 seconds)
  done (took 3.421637788 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09847257 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117792275 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088975605 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116729586 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099679358 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122302372 seconds)
  done (took 1.626693974 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09188156 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115614637 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091076808 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115184416 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094516902 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115564684 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088605633 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115096864 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089454115 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11515075 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089360753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113695392 seconds)
  done (took 2.218098149 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.506278879 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119987117 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120524642 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088907625 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124552456 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089849832 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129721435 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092156175 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142579173 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089111781 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115905309 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09108192 seconds)
  done (took 2.692452232 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236504109 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125931602 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284119487 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365095278 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157235151 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165935693 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279423083 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163754179 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197958046 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150002755 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229929212 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1966634 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151899858 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191275581 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138290523 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145112601 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18989108 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251196918 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152763248 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211898398 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20731306 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167548453 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179635624 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150992467 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112665873 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193951233 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096121551 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12948725 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235161391 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179289589 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190481315 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161455734 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147802527 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237960783 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249773431 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196296402 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281993474 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135056178 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167597527 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142952337 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264828841 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138731802 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234353164 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156972517 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10535915 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221314898 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16707608 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17689482 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14593707 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139132209 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198523028 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241375529 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193256955 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13979894 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297978465 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148402603 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157512035 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189920071 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252209103 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228289593 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189963114 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122602125 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188221958 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191492269 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212146671 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153170211 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183417675 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147680293 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18381039 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189863186 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16703268 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205337122 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179990068 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139614079 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171043512 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173259237 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173704581 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259073485 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186354755 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122584401 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169303904 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14979708 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131188305 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168098781 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126215307 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215945702 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143793165 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164069698 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209956409 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160651244 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162007622 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22113203 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18494737 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148566903 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084580165 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154549914 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156180908 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175554642 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140549486 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159573362 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1580746 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130567643 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169157901 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098683329 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211707883 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092201528 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174427001 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184687106 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127710765 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161883999 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154030314 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150413094 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177641034 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201261538 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141890591 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134440585 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211448235 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177074598 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141839516 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178591363 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229467702 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119148032 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149718843 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228206505 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217951314 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141590096 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229791242 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152803776 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108497055 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133947923 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181461574 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156227676 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162615157 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134097966 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184796559 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232905719 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100183143 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139700415 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195562063 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134275588 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131885479 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154487674 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120205152 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138772808 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143112297 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145114938 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176386634 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179559018 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155862569 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167271608 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151663633 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24974016 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14102054 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152602637 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122815697 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121580696 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194793597 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227171166 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104824378 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234259663 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172628023 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199889644 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195731622 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109517385 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178849854 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131739419 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09346628 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221483116 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169336814 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163593051 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197112933 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222802788 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180873697 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184555114 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1667902 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201799247 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138382225 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183730624 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112179202 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161112197 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15941542 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123358857 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111870022 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136437853 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150700161 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142574284 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133876955 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199081918 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171764237 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216538891 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159268032 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121576243 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207681949 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102864854 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177693909 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205875763 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119627497 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226288928 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194401301 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186816235 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144367315 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227730144 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09377628 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126305188 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14261899 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17019673 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107557979 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136182352 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16207363 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181124057 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207566104 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171831788 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206510353 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200828705 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190071864 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095432114 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169422321 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185234005 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176519382 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180153228 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141111634 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151630098 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178120622 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155863658 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255796591 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169802537 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176312601 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205960008 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151075168 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132872675 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151542263 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178561004 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153367579 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177220704 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146998176 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139390894 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16007624 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103444148 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160978084 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212055644 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163507932 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189214117 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151020869 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186572484 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129468693 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162597213 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161298579 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165207876 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081000291 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201611586 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203618687 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147650467 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167479786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188465281 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132027478 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307623374 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235449112 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195672427 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137829837 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155721867 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161313542 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162351374 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171666085 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180161509 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159536814 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189002533 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160099031 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135924053 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111519866 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150474046 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154244152 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133500293 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149363944 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177551369 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13794799 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189178599 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154728224 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159970065 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173577125 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150795725 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116896826 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150637673 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242998419 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18481356 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240379447 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150008159 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179210662 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207594896 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12635896 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105340968 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134348341 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179707403 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136779027 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191695786 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214436126 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20149021 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181160311 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206317881 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112853354 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120622372 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158892309 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168468009 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204525972 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149923077 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147143401 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229953355 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110093618 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132257409 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167266346 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28727723 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145939491 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196129353 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108294261 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279095889 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100569142 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132334064 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164370909 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234983042 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109152483 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178155059 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170893312 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162456096 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164126869 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150959053 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192955033 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23931181 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200279022 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211551074 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106527425 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157422209 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174659397 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219025041 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156045725 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111271909 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232166622 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196451854 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19589523 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142999377 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169903084 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168540487 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158947181 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213870881 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107396467 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234517768 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10670194 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220223604 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153943859 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138393981 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176460487 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.1888643 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141124678 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187569682 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21079453 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108452067 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134063246 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166368658 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178031485 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154229969 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128168233 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183111747 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126571621 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196224687 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264297648 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133151559 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154907365 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119876941 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137004742 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155014287 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158948394 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140220836 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140716803 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228733643 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135305472 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192081517 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201146251 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198720279 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173690504 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146111435 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693304922 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103370434 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223180376 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120142959 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235245997 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151333853 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174394657 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160018946 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169064955 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195710541 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161247734 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231931078 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219663465 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180357003 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131536723 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157812103 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155263295 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116859437 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154318808 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169499657 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161282558 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146279076 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178036192 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192068384 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107664846 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141319948 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199097551 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149813795 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186410347 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180511731 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140459133 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174365049 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214944927 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106144706 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208700256 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209828194 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142791027 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149853082 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134971594 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.122461604 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262569599 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125528883 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189120327 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184240447 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159289685 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16880488 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14707556 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222461304 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158728037 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186835435 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143322952 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159408435 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156691815 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138511638 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103428833 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15672467 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168203597 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151750419 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160132956 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163791817 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197109035 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096469955 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145507303 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30693011 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177794274 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216024432 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137612637 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135982032 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16213463 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122899227 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.205281884 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180541183 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136030706 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108280225 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137774392 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129676071 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137116481 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156760954 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194345395 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165229051 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20637458 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137962752 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281289074 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141124515 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156166719 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090093078 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13299143 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150563127 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118315791 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155582801 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220027479 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261241077 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122527577 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135470863 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150634286 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125817864 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109609226 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165401295 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165874229 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177778757 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146424478 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.1095794 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156226009 seconds)
  done (took 82.622875166 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163936593 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132584991 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147881514 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201535478 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177001696 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270034114 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210015903 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254474852 seconds)
  done (took 2.627202359 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093416201 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146196907 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158132858 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133303289 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091868337 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120579369 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34452842 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133090138 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116985085 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121339168 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17476972 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093413407 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.55003903 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09154634 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121086307 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107736768 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09296466 seconds)
  done (took 3.754693215 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.182046204 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.493624429 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.95198972 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195311596 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159685678 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117846714 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708548172 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095382578 seconds)
  done (took 11.982152241 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115246677 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136746418 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124453652 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152695506 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141987964 seconds)
  done (took 1.756168942 seconds)
done (took 123.876364592 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097318786 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127367567 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098223422 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130615097 seconds)
  done (took 1.518414695 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09450615 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070651065 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101015062 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075844527 seconds)
  done (took 1.416139063 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191051241 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169440802 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384878439 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072406025 seconds)
  done (took 1.564448985 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114688993 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132914897 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104458454 seconds)
  done (took 1.437375894 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106724672 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129686087 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103392982 seconds)
  done (took 1.422431296 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10725998 seconds)
  done (took 1.189501772 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108705333 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137796193 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109221375 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13613448 seconds)
  done (took 1.574244847 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098896514 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126745277 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108928638 seconds)
  done (took 1.415360357 seconds)
done (took 12.974622978 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103237773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519109662 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384928493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144511478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723334812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380086126 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029274498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146216717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167025517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093462691 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140156539 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672280123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018810715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.466367539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979077168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.466117235 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676385544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120261469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11902201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094081863 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013782816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092219305 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122447516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09306614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702515092 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425150978 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095611108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.46509161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092730761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126498738 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382666353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122766772 seconds)
  done (took 17.247366515 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095224545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172881974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097648659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137221428 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122889577 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094483765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127036471 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093670751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179430398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122518693 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110496593 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121459176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125707732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095686334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141760046 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092205519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125966674 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09300844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121300845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121035914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11195041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120361789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094331764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121017462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09474524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135780798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122530536 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093948583 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121229549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099081459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127958887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095350048 seconds)
  done (took 4.811405576 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140587473 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183244129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128628537 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127442672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167939377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123278498 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199769395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118373256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182946143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123152451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139627241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092914528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157390358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122146832 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11492526 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121255655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097154096 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122551398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092556986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123056341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140399847 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093255694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122062664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09415082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123172863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108562226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123735779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120783406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093710761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127508617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100632886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123886547 seconds)
  done (took 5.140583959 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097571102 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126276516 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109522882 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139187798 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09481974 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125915396 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097495982 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123883364 seconds)
  done (took 2.001579264 seconds)
done (took 30.285497966 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110481642 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126746052 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107153754 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134304634 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103551065 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131925451 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091039909 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133376252 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133528325 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101469518 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137038636 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09166411 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123347182 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091612036 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134814328 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09757883 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132672717 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102473714 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13383252 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131139743 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095513584 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133070005 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103418151 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132631694 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104645714 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133695679 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136382106 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100007145 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122287752 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094231962 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123887842 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103583973 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12383069 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104490919 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126816615 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096648393 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123468863 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094047614 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133237301 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132911046 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100244737 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133504741 seconds)
  done (took 5.980201995 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107208729 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139790258 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10484647 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08071775 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116150263 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080359816 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137122173 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07945999 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110354126 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108334325 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074156391 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106318508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07889262 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101257058 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077247753 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075414572 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108457062 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076029382 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076423284 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105865116 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080229062 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073272797 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108452047 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079286248 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074564174 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110049544 seconds)
  done (took 3.563432639 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100679971 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134740803 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114058132 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183756859 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161273069 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100548623 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131942867 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139552246 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108932961 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120114213 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09616271 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149675172 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110151384 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130582748 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092218036 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137227572 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136002484 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094810412 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128156104 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113389472 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138356192 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103376288 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141999259 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132400788 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093714642 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123126387 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097236406 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134911457 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098038107 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132184769 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09725226 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124962022 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122931533 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105062012 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126187359 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094683189 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142421213 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103354678 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130908233 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092283621 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130353943 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121970085 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113725101 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161342135 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092248603 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129517971 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096072139 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13355648 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121550339 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111152498 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131701057 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092615418 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125432683 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092322683 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121969764 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106348973 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123875293 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095545782 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131900127 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127309527 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105968235 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124679293 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109062013 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122310502 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099870211 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122257651 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093926729 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120642722 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144053098 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095143187 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161359524 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093935361 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124638944 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101908601 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131089271 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128551513 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093509928 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137051156 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103317287 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125544497 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10196373 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126530384 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095253519 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140435057 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124255188 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095594963 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122492926 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100298866 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124832759 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095067779 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13710443 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092370514 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125809978 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110983624 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122526716 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122735033 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100987463 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126765544 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093137532 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13604454 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099353566 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124112016 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102535 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122797763 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124996348 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103884652 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126618635 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092467589 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127384366 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099234016 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124439519 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094247742 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125717169 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094605362 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132646109 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127502823 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098982656 seconds)
  done (took 14.837160676 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228143803 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215455805 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206633943 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29256269 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136028622 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115156024 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214884325 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15573889 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123807533 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159772192 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171811669 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181902642 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139525539 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.21296767 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171635959 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09323237 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143345661 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135049396 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245928888 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259942401 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143910416 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102264978 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162072274 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1612088 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138162853 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103253879 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140692441 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134620459 seconds)
  done (took 5.802107762 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108712321 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15649942 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098701134 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146314308 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149300699 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092889813 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128863352 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094656754 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135312069 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135912162 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093273661 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129746283 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101616574 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13256434 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122944115 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103256798 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132549908 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095439168 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126867355 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097782339 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134723801 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102360497 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12752533 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121990773 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103651042 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122763546 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086543318 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142829077 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122164667 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116056596 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121008522 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102129246 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136862397 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093938202 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123631823 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095432516 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126994491 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096329894 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12587158 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092171256 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123386896 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078890244 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122593781 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137393346 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100169056 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080756061 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130163418 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12852126 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096049535 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120840781 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09709582 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125434313 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097152383 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130790227 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096935597 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124250447 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096550812 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116228242 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101069551 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126252245 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085041059 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121760825 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098750566 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11833092 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101417138 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129418109 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092253705 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125692014 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098613143 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12929371 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09586367 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130316695 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090988775 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126953788 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096355626 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129364211 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125759187 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092949753 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122543432 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095617912 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075721853 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124363379 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074201065 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127038197 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09199464 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123433014 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095766949 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13072299 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138190797 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096306407 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132953698 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094716597 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123462442 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097393008 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113761382 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09738288 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140993577 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140543843 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094416261 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122172597 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108093868 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125994947 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093567156 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106556013 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102514112 seconds)
  done (took 13.004961811 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131123344 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154173399 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124368513 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111486184 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156686189 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158209158 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101067769 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131715452 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096140924 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143513705 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094477413 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132715771 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094303579 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137837535 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15618829 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103891196 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125222672 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107914902 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128441867 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169262939 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11233892 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143637359 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110946933 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125424926 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128639283 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110344978 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161781545 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107178241 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137199038 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142050806 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108591509 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161078463 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143771151 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099156232 seconds)
  done (took 5.47720858 seconds)
done (took 49.753634287 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.205085901 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.415316803 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191837455 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.14421255 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.207024023 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210828298 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200508436 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.189055629 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.717588351 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.190967903 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.449376273 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.750950863 seconds)
done (took 59.990022632 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.305816196 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.343710954 seconds)
    (2/2) benchmarking "String"...
    done (took 1.4814515 seconds)
  done (took 3.941192882 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.760636392 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.13639602 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.454348393 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188848513 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.207841659 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.479590963 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.896157034 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.557549005 seconds)
  done (took 28.03414622 seconds)
done (took 42.158994312 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.191524394 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.239774079 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.231470511 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.170205281 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.302390924 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213057047 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.556665588 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.200778531 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.206193914 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.173937314 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211363353 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.214408076 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.20626452 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.546138806 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195148537 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.191038074 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.21066206 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.684041758 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.612082552 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.20700829 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.231186137 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.226538815 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.210045007 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19406436 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.212570401 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.193980683 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207582462 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.222919441 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.741772191 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194457563 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.204143008 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.764272031 seconds)
  done (took 190.48331369 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.193043274 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.290410037 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.357941311 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.212630069 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.64585172 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.394684703 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342835691 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.724399608 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.213705992 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.199978216 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.408398395 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197627833 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.481066579 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.16827837 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.235598015 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.259664094 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.379434327 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.481094856 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.245565976 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357682049 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.19436649 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.538078274 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.470226652 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.364994249 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.229982901 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.248154219 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.198966787 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202801826 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386198401 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.315830925 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.196527722 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.219433626 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.81827318 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049369021 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205908858 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.224036603 seconds)
  done (took 149.769344509 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194035702 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.192683326 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194184095 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.226559214 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192378473 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.759518792 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773472872 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.710297622 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.71403815 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.619305439 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51097384 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.199941084 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287725469 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207951782 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196136777 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.21180838 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.23918874 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194796111 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195405663 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778168109 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211776853 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.429119205 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376219933 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.213303313 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227482508 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587439478 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196169325 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226997545 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.527563906 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245261993 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194779935 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.599895894 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.80020021 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.196950653 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308757598 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197978474 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227581443 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195335885 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477256353 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.195598065 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194832988 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196628405 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199340992 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.196906639 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.195853125 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.774875544 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200518862 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.175907212 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905272604 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200763387 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196857917 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.609930702 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.912574079 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.217691408 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196970336 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199793272 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195844269 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197374858 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.229700576 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.627097804 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296078599 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.21601267 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200104239 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230384863 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197133788 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.19883533 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213797442 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.536684529 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.255852692 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303076903 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782694396 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202122579 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297230289 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319327892 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198403655 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198248859 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199429004 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197893294 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309255792 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197506139 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.609149093 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.374530284 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217646895 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.613428009 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.301552302 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19902848 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618490496 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20384953 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198662758 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958682851 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296215404 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199482081 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198571223 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198848314 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.609024372 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784547148 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480893175 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204519539 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.571846086 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.203729545 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198710021 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.626584183 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758975474 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.899690202 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.204890768 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313561871 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.376660116 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218701776 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.20000701 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.623118749 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.20650453 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258123608 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.199460963 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.599179257 seconds)
  done (took 366.46098943 seconds)
done (took 707.830273526 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.81450786 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.806545963 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.912250419 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.794085907 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.763036247 seconds)
  done (took 10.214557927 seconds)
done (took 11.340463629 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.387328683 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387603128 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262803915 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38936088 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233796474 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.405537383 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.365769279 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.222474185 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302809673 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.283481877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301095026 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254149601 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236254209 seconds)
  done (took 18.158521719 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536514519 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517128116 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268181836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542562707 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240417357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538016682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399692758 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421385823 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414740465 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235928295 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213677112 seconds)
  done (took 16.45510069 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517349834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524349948 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268376479 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524132925 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244712862 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516331503 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403039681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42360436 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416947481 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235357319 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214496672 seconds)
  done (took 16.4149314 seconds)
done (took 52.155221433 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211813003 seconds)
  done (took 2.33802287 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245557987 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410628699 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229806 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216894996 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212449713 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213645806 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217586096 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212598987 seconds)
  done (took 11.087370454 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208447044 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20867832 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208940509 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207811532 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210833492 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211790171 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207792259 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21103747 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210298232 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21156625 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208943454 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211135083 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211707744 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.212649959 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208489286 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208611026 seconds)
  done (took 20.486275707 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211410197 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208704429 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.207710131 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.20942675 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209209666 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211121912 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209861039 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208800227 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210729007 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210142152 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.2097175 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208990572 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209844099 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.211303391 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210799099 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210336886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209243038 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209861419 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214898107 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211043819 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210721214 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210628606 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210734264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211708748 seconds)
  done (took 30.177425417 seconds)
done (took 65.217336028 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.843418328 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.954468749 seconds)
  done (took 6.927677527 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213556544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.213192668 seconds)
  done (took 3.558650019 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213515222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211833891 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212584783 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213326073 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213523912 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.21339688 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214326142 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213140684 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213415351 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21351831 seconds)
  done (took 13.263080025 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213928416 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212738289 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21128612 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21382109 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213797242 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211570566 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214625354 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214309012 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213542578 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212592392 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214766992 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211674133 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.214601042 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211957404 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213896877 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213075727 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212567695 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211742049 seconds)
  done (took 22.967641295 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214938614 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21447218 seconds)
  done (took 3.561004753 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.214304388 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211934592 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212809205 seconds)
    (4/7) benchmarking "year"...
    done (took 1.212951559 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212093396 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.21324126 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213266038 seconds)
  done (took 9.622474898 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216362145 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.386382908 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462737017 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.819237504 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21695665 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219003886 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.089511195 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220195736 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221856836 seconds)
  done (took 13.984474313 seconds)
done (took 75.017426026 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.238719848 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226660791 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.494257479 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.223767677 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.228845899 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.507194891 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.227465542 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.33650972 seconds)
done (took 37.618210411 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.226769217 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.198033927 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.961743865 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.203105448 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.292661251 seconds)
  done (took 18.7887636 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.267239084 seconds)
    (2/2) benchmarking "read"...
    done (took 1.549558907 seconds)
  done (took 4.949321815 seconds)
done (took 31.099578625 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218844945 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.217062603 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216510128 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.215137923 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218157079 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.214805931 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214780146 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21715504 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215441358 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219003689 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.214865657 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.217320109 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.21750353 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217039141 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214421813 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215464102 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218491802 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21756492 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.21703643 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215069678 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214641053 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217506596 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215026328 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214962118 seconds)
  done (took 30.328235577 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.220701946 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216160341 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216531898 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.217309752 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.214019609 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217706618 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217911482 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.215488309 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.219346645 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216104926 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214858514 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.212433253 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.21568562 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.214390437 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21591297 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213388133 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215151742 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214945032 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216022679 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213464165 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216512307 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213232631 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213618401 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215907409 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214848926 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215221037 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217191795 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.213792085 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216083936 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.214385879 seconds)
  done (took 37.603366021 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.221383586 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223183292 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218048796 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215832131 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.216986447 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216084026 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21606453 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21733213 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216503346 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.216012817 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21910416 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215856814 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.21572657 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215687226 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.216234714 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215391234 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216403569 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215824767 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215123256 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217304762 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216571611 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215115649 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.21618448 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21593386 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215320192 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215146483 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.216320497 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.216827698 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216418525 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.215172718 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21613905 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215685973 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.21516172 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216438389 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216034765 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216375016 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220406373 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.223653054 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215120317 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216855832 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215691832 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.217210644 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216546202 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21728904 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216689012 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216794082 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216690607 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216471034 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216763345 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216647989 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216602855 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217438409 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216168556 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.217258522 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217192883 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.217195486 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217990364 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.217565879 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217417514 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.21759362 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218273276 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218339512 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.21724783 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217669639 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218854528 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.218374132 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218688582 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218596524 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218855692 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218494644 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.218226758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218459529 seconds)
  done (took 88.766570514 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.21959424 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217470535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216128003 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217801141 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21545865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218955877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216408785 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219330822 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218098218 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21976904 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220009085 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218008539 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217042602 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220606885 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218864019 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216054543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219402027 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217093981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219455023 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219978755 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220384639 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217353005 seconds)
  done (took 27.938372306 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2210117 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222146806 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218760592 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220169823 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218512637 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220665349 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220518598 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222459233 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219713331 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218532395 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218409248 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22096732 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218368921 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218057334 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218542346 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220618914 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220573041 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219441805 seconds)
  done (took 23.0939677 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.218748829 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21911238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220901458 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218972646 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218610272 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221099099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219606135 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220722248 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222366036 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219573544 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222185593 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222706753 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221869877 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219646975 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221137851 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220199481 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221630795 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219213916 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222437349 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21994095 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220550415 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222734695 seconds)
  done (took 27.99112015 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222457576 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223588799 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220593596 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.220742051 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220735546 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222322683 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223341368 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220638555 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.225612519 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223156857 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220789712 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.222250599 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221918456 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222365963 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.221325779 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221374793 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223747741 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222930432 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223193862 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221005051 seconds)
  done (took 25.582291405 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225000689 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226112935 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225320193 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226265279 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227581051 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.227059406 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227213468 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224984892 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226351819 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226687414 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.227415127 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225825517 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225910931 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226239677 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225783685 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227180819 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226174162 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226281365 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22648712 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226805403 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226337677 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227782044 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227406464 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226222294 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228172793 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226992952 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226780868 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.227655413 seconds)
  done (took 35.484357805 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226563911 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226868025 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.223603305 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.225238983 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.22371539 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.223512811 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223945477 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223517472 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226814046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223080084 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226287931 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.227667725 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225782655 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225584691 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226250659 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.226508137 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226696586 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.224305409 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224013113 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224259241 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.226610649 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227012532 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226560267 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22372734 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223995755 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226778105 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225047254 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224732393 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226985244 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223599818 seconds)
  done (took 37.90159313 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245514895 seconds)
    (2/2) benchmarking "in"...
    done (took 1.245440542 seconds)
  done (took 3.634560865 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.225550008 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228157251 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.227934087 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225084355 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225018559 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22715327 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22731779 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224830455 seconds)
  done (took 10.953746447 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228769016 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.229700692 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.226727979 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227691804 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22848925 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.228123553 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234855808 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.247250795 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227546449 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.23016584 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.234762666 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234575416 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230899208 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228149023 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228252872 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23036581 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227073402 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.230753627 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.229186674 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228232584 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229173102 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230233695 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230405437 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224596295 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230237307 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239136036 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.251054638 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227797781 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227967768 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.231418464 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227700967 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226034589 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.228946257 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230382753 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227840024 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.229113607 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237694611 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246766488 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.23407178 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248954688 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229743748 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225791423 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.230396633 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229906693 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230668662 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.229903692 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229125463 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.226850394 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230037068 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232668259 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233972762 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228817034 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.225508181 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232389204 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229806007 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236421123 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.249157855 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.233369438 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.239345146 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.23846261 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.262745783 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.255034181 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232630034 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230247804 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240537554 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.254371388 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238126066 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.246896906 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.22792998 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.229830748 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235846725 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262797249 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25588342 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230432839 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233280224 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230672088 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231328498 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231664382 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238528555 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.25366564 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232044986 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232365765 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246097334 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254533263 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.232250878 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.232188668 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.232698994 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232984008 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.233087615 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243063188 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.24977044 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231486472 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.231379888 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233121303 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233131192 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.233316625 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.231173031 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234061113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231423055 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.232797441 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233663841 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234599449 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.241565091 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232930411 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232565289 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239019543 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.253346546 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23219665 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.238817044 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231968323 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233893937 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.234978676 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238545583 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.229633898 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236431722 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240647015 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.234434515 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.234799756 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.233398742 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.233462641 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243905533 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259545608 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233934499 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.233265403 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.237793197 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.244980017 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234201103 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236916415 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234198309 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.23103759 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.23051917 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2356654 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233220045 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.235198633 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234781459 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234552359 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231542019 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234243968 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.234416601 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.234893654 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.235549553 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.235762903 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.236293772 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.237265379 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234561027 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.236418009 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.241283741 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254923756 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.235801767 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.235737954 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231760625 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235366821 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.23687411 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236872669 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235444188 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236620472 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235277872 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.236135327 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236828998 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236448634 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236236246 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237049265 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240667577 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236891462 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239650317 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.236568741 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.232765401 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23696208 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236450924 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.236737639 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.23774291 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.236434078 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239136959 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.245944968 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.237289371 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.236756308 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239644951 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237175181 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237633906 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237676107 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240534887 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244895255 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238420683 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244231918 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258179427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237987312 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237777485 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238137377 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.236491816 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238517133 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240810967 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.245915764 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250542186 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262639579 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.237744523 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241861511 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239440325 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243295722 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241615311 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238124556 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238866596 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238497841 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238478459 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238601283 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239843475 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.239365606 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.238137162 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.239578372 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238462236 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.240450991 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23859391 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24015079 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239916813 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236129822 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238370233 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240368456 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.240082285 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236235841 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238747183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239440009 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239340069 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239792815 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.246919426 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.236125106 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241774102 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241559591 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.240613239 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.239008971 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.240483456 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242020648 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.241135721 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247798675 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.25933335 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.241337501 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247788685 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.260127523 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240027523 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.243716167 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240459519 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238615314 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242768427 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.248509988 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.241661002 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241901114 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.242957297 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242254464 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241183646 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247498752 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.257936826 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.242736944 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241270418 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.243431018 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239254893 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243034945 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.242548604 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.243158303 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243673164 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242869515 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.242477281 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241616044 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243988898 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.242202789 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.243015518 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244655062 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248861338 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.246225089 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241011626 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243991745 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.244866113 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.244809884 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.241614347 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243068052 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241710936 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254187711 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.267721083 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248161479 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264306588 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.242413938 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247015518 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.261951285 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246351927 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242447358 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243181927 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242411702 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24431379 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.23886341 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243043426 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24323868 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244350767 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244419327 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.246706781 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.243335332 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243396105 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.241560983 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.243209657 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.242948218 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.242211277 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.243752286 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.244569225 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244968706 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.242673739 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.242461325 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249261989 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261619466 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244065558 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.24357435 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.243697007 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.242106494 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.243395052 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243043642 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.246988993 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.251633153 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.246903595 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.251760882 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.244943267 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254257805 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.243999526 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.246382922 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.252266979 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.241436728 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.242456408 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.243921008 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.245838331 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250712026 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.264977955 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.245200869 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.249231666 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245659143 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246136177 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244243587 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.246342045 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244470424 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245435497 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253215169 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263773865 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.250261124 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246646674 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241168728 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247150783 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245823397 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244529748 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248695691 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.246799645 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246614923 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.245070308 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.244723452 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.245559505 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.246693124 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245824798 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.243465562 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.245820927 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254005035 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.266897037 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251059795 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247448732 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.254535893 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266941379 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253571324 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.266312491 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.246170851 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246329346 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.246426624 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.247031883 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.245419054 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.247447445 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.247600586 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247386838 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250137689 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.247564777 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.248863411 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.247215112 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.24873391 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.245580787 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256776967 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271431911 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249467178 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251895516 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.243479453 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249465387 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.252136742 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.249249984 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.246946868 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251711334 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258370128 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255291774 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249006584 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.24915456 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248070868 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249456753 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.247608632 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.248355138 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.249887149 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.247972998 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.248604988 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.249754637 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250608547 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.247660019 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.248255044 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251075487 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250496505 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258319824 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.269371329 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.249640877 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250630403 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249437196 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.249662909 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.249898994 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.249263717 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248681707 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249014547 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.250807264 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256467565 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.256046805 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.252243219 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248952987 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.251212229 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.248981691 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.249864907 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251563008 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.251608379 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251644007 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.250069859 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.250692606 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25015445 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.24936724 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.250813445 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.251198881 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250805348 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253616841 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258701611 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251116779 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.248059587 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250733635 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250539556 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.249360042 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25120575 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.257683945 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274428649 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26221343 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.260360556 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.255705584 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.251370399 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25458337 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.259888272 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.250194518 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253800081 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.253086938 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.252500201 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.253154589 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255213994 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25419559 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258641653 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.2725338 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25092996 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261223868 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271430842 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253421833 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253959081 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.256170834 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.252149551 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250245001 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251770321 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.252655048 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260255849 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.273136064 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254608431 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2533418 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252315695 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.254858593 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259653355 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253282736 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255751119 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250635795 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.253369416 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254090364 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253689581 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.251061813 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253938718 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.252730815 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.257692711 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260551361 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.25122657 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256316194 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.25429498 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.254607036 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255032548 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255171124 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250936258 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252044535 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.254721306 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256529299 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.254441602 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.257545109 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.253924315 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.256251801 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.256620912 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255836275 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258733717 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.264599982 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.262823709 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.253054002 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254065969 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.255560458 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.257769708 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255421818 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.25607859 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255855976 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.256147542 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.255865922 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255713875 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.255048615 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259755066 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270865315 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.273723005 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255040723 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.25689802 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258017305 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256355609 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253005252 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.257359566 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.258606157 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259742472 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.264053606 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.257308828 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262221856 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275123463 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.25764794 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.260806399 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25989801 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263469785 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.259741272 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258756474 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257310725 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.26209992 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.272442403 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255820689 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267513039 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286757132 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.277905788 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.258366417 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.257881476 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256899289 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.25946233 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260290423 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.260741279 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.257488552 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258267217 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258407312 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.259350747 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26376299 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.260193604 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258877153 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.259654432 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.258835487 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258946012 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.256085421 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259909352 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257497872 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261011707 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259065561 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.260924868 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.259663805 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272466329 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.286168251 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.259276726 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261192752 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.25659404 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.264391756 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.263212741 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269905449 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.267016932 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260585574 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26019724 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.260608832 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260301732 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.25983115 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.260208385 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.260094652 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259576095 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.258647733 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27281968 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287444809 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.264912139 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.26029994 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26242333 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.260736055 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26138517 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262072265 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261783147 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.26186949 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.263574376 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265552066 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.260837831 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.261376471 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.263844478 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.2680905 seconds)
  done (took 744.228414975 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259026354 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259094856 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259069945 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2589276 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258670786 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258545629 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259485127 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259263396 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.260514059 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258706163 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.258670671 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258391236 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259182916 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260743475 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25926591 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259792016 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258285129 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259468376 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258967404 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259543558 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25940896 seconds)
  done (took 27.616583939 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.262148813 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.260526997 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260169239 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263116538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260358154 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.262694713 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.260799102 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263249871 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264364898 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26057168 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263810676 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263799959 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.26097935 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.261416023 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261867496 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263549464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264099417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260471115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.262817877 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261598116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263101096 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.261334677 seconds)
  done (took 28.941447243 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.265041562 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.264874871 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26300449 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.261720552 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.264499599 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.262116609 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.265820181 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263265738 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.264169559 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.265552567 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.264152335 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.264881071 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.271435169 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.269294701 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.267370024 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.265340556 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.409154686 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.265016416 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.266377479 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.265017029 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.262512315 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.270508698 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.283696803 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.262431658 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.264693546 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.266697658 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.265662378 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.26609232 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.266758264 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.266614518 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.269889351 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.265979188 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.265339774 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.267767795 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.265876162 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.267560547 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.269562835 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.267608051 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.263346315 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.265675566 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.277138177 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.286969405 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.267727712 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.272496016 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.286576716 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.266213618 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.270110436 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275666683 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.265284693 seconds)
  done (took 63.437769503 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.266604672 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.266992454 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.264442838 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266896145 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.267472219 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.266997192 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.267896951 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267513237 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.265087456 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.265039293 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.268154662 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.265942384 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265597186 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.268009192 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.267965446 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265130571 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265848067 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264272773 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.265724126 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.266160761 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.266017409 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.267869161 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.269307114 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.265099339 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267971051 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.266227535 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.266645993 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.269346119 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.267219589 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.266432632 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.269031556 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268864864 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.269645659 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.268408625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266255497 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.26991066 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.270910194 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.266945458 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270720986 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.266327954 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.269770371 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.270040063 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.269509334 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.270121702 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267203776 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.269068653 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267220771 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.268085332 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.267212229 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268287922 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.269617291 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.267065905 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270339388 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.267348738 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270661086 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.270450616 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.268819782 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.268246462 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.270516101 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.269194646 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.268613663 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270363331 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.268251658 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.269882063 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.271848813 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.268945949 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.268117676 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.271138104 seconds)
  done (took 87.403628353 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271703429 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.271174131 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271689916 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271392079 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271584868 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.271220498 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272049015 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.271581441 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271300789 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272236769 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27174833 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270569434 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.272182217 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.271595976 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.272384262 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271866967 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.272621789 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.272431503 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273102742 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273224453 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.272120003 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272648371 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27337475 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27263533 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273254614 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272965709 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27258269 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274029646 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273182408 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273825646 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274379689 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.273817926 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272952858 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27389191 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.274526885 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273801865 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274006466 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274092118 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.273811657 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.27511923 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274867061 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274223482 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274983934 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.274825876 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273977828 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275260143 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274260727 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.275553763 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275127666 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275536 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.273085163 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275022523 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274594822 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275665891 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275598438 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.274671076 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275780292 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275543061 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275557599 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275283614 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275611739 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.275062898 seconds)
  done (took 80.143049206 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275550082 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27457507 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.271964779 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.271846065 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275993027 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274491315 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276461477 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.276799051 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276160325 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.27550069 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274836157 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273244534 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273430654 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276522557 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273013683 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273735403 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273989882 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273108503 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277342971 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273723941 seconds)
  done (took 26.678840412 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.273685085 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27566741 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.273981881 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274246788 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.276328555 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.274778415 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.278652581 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278794005 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275459771 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277753233 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277442424 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278228378 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275113748 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275803305 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.277476869 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275237535 seconds)
  done (took 21.607019797 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.274068599 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.278247516 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.278481923 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278442982 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27524733 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274752745 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278062371 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.276866051 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.276111833 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.277532259 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.277914475 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.278663936 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.27745105 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.278234701 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.276396669 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.278846949 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.276241517 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27690872 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.280236123 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.280803775 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.278134181 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.276796612 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.279813713 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.280137262 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.275715287 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.276636724 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277718439 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276935884 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.277150432 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281681411 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.278219563 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.278287998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.277866041 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.278102068 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.280341193 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.277082925 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.280561105 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.279461062 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279411357 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.279946171 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.280187685 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.277639931 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.280021179 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.27998528 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.278225767 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.279786466 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277109295 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.279347148 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.277373106 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.277615606 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.280650304 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.280547687 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280177604 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.280205841 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.280954616 seconds)
  done (took 71.499633516 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280927396 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280706096 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.27896291 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280803547 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280036151 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.279003313 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281520724 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279819271 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278430563 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281859304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279089767 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282758947 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278604078 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282292015 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278899095 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281734917 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278870356 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280359602 seconds)
  done (took 24.236442665 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279791689 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280068813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.282920557 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279635683 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.280373476 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282097319 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279912032 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282671395 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282710362 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.281701459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279808542 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.283907116 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282947365 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.283834283 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280778315 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281079965 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.283619394 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283643654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281331623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280668463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284140823 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283709651 seconds)
  done (took 29.393357593 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.283998725 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.282781856 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.282871488 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.300211887 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.302208502 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.305508082 seconds)
  done (took 8.951643478 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290876273 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283754258 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281581448 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285310048 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283761973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280885471 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282299895 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282415123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283550558 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28310756 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282066963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284460908 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284319755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282782832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284363798 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284924482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281516303 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281989046 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283133922 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28583439 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282220514 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285248604 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282188638 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283297884 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283594606 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282687574 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284648025 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283804974 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282316748 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284967236 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285698459 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283645177 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285314681 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283666428 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287390371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286008354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28412392 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286743699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285653759 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28410879 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286340695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287533539 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287054611 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283413718 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286921861 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284109897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283350267 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283910258 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283661204 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287269646 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287797884 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283552781 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28677928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287444311 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287978251 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288323343 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285774756 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284566757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288246177 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285031855 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285311024 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286451291 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285050265 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286842982 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287937427 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286458406 seconds)
  done (took 86.015753421 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28472434 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285648444 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285284011 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286720352 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285676946 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284789611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285877406 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286131643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285799701 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285865295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288011582 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285808971 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285578324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285544524 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28524301 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285779254 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28659562 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286270475 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286654515 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289414657 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286957624 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286898412 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286649901 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287738003 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286827289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289883916 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287284342 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286116618 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286723227 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28691874 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286975999 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287079921 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286942011 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286373158 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287430869 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287585437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287639131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287749094 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287691051 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290257371 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288789867 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290067472 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288102726 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288421829 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288343248 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288244622 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28842328 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288676265 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287634194 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288780807 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288305357 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289390703 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289713072 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28808825 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28932784 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288790271 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289137777 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289746915 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289659578 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29111544 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289517466 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288840658 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292048149 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289332917 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288920785 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290987792 seconds)
  done (took 86.1885892 seconds)
done (took 1736.75568456 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.455964407 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.408785527 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291668766 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.290616297 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.292953843 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.310390137 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.307602098 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295037256 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.292977063 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.292902999 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.293088421 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.479290056 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.347325927 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.293950243 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.293572129 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386870508 seconds)
  done (took 42.536218778 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321786739 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30034821 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.412392405 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.317225186 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.322494665 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.484390993 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.356094041 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.304438939 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.472673498 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345171338 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.857913469 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32250728 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.299335868 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.408052635 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.316886323 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.4902232 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.550531821 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.869165993 seconds)
  done (took 29.957282948 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.756957394 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.301199408 seconds)
  done (took 9.264024888 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.318445848 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299079225 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.299550979 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299016781 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.290688383 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.29097047 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.297379545 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.29536623 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.972153933 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.424175906 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307649083 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.305372945 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.316077517 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.298337941 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.294671728 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.33374178 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.451649166 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.295784743 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.295212536 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.302549962 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.297565638 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.408695546 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.339104316 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.299177456 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.423570684 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.941786858 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.300201846 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303914714 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.430350071 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.29503696 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.299480415 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295976945 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297242818 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.911207162 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.81800586 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.324669665 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.32049107 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305643202 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29345725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458782956 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.30118849 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.303257455 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.288348536 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.805179502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442746787 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.413011737 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.464582477 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.312324251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.297438707 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.356732444 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303099483 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297144059 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324528032 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.044113989 seconds)
  done (took 109.522415823 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.30208588 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.679801294 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4562878 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.308429476 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.912374207 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.936782458 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.30690739 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.565595662 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.330421262 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287809417 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.577575059 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.781706762 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.312623247 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.323878207 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.316648734 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.297432946 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288478875 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.033229792 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.305782461 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.290899213 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779103556 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28981536 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303791776 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.44349698 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.325265043 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.732926472 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.618600977 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.724107059 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.3056519 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.287998523 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.7413991 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.308714284 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.367474274 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.28856939 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.546367304 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.636090955 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.632215912 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.307923163 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.29492288 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292425831 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.294385572 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729219066 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635343267 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.307321629 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30543881 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.732912255 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.306635075 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.290004235 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.289682748 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490597261 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.167928153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.290783264 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.602754891 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.291357442 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.585425344 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.344633567 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.365440477 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764533131 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307138211 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.37068115 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.358214409 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291857431 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291396296 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294620714 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.295542945 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.626538299 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.685862264 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.290759552 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625221016 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.751970259 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.307311771 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.801268914 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.104425584 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.310014718 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.349637005 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302929797 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.770046527 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.770593839 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.35115019 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291668837 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614633176 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.310884476 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.56704686 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.307254382 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292803238 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808073359 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.305357431 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.320294767 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.292579254 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.319839657 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.921384232 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306181335 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.554251375 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.361602827 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.29389795 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.291271401 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.325196442 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293553364 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.308597059 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.292779147 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.803721853 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.316908274 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.441308178 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310056765 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293939045 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.309737671 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.29519827 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.294608636 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510583848 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.766191997 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.31857045 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29274529 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.293716461 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.313225007 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.428633508 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.29738317 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.588292569 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.312055587 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293960041 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.312626571 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.981687393 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354552628 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294044974 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.299369226 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.183770073 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.500443042 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.314949375 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.312427322 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.296885139 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312087514 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.491945302 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315542559 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.324344162 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.299445632 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986390513 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345628848 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.305766495 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.833767287 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.29910925 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.19796432 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.31573754 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.294700695 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.577638175 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.55773392 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.569334043 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.298092021 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.312664943 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.977078824 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.328931573 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.433414868 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315660993 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.394988503 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494672202 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.444044425 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.296477017 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.899501805 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.296374563 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508891322 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.298169668 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.591162241 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.77234326 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.314895676 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299793622 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.986567272 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.038720903 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.9565754 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.301301057 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.568135313 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.263887541 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.786887661 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.298914535 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.298344814 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.761020024 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.301726365 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.303650576 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.298246629 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.298383857 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445696355 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4711499 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.087395609 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300060616 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.737553804 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.349575856 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298802258 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.302350986 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.301815431 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.647803295 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.38707451 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.300485996 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.308241993 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.295387079 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.299997524 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756120116 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.153274186 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.300916968 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446988867 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909665742 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.312670124 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.296726423 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.946514221 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.5802773 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795941953 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.344494057 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.594425006 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.320432939 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.334959784 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.859044802 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.387036111 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.759172739 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314577702 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.298659112 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874777297 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.312819311 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.355010653 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.297743311 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.298886647 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.811840097 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.313070837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.296585743 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.484220201 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314980918 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559515069 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.298195917 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.311294904 seconds)
  done (took 1101.35798187 seconds)
done (took 1293.841374131 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.298122562 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.305854645 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.2851667 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.307070664 seconds)
  done (took 26.408248846 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.312593089 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.30682137 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.308211441 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.304922696 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.309000577 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.307082374 seconds)
  done (took 9.063188335 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.338979123 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.307053057 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.30758643 seconds)
  done (took 19.169057759 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.506959908 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.547932546 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.624764369 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.433899607 seconds)
  done (took 10.331162131 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.308756186 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.308502601 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.308044591 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.309910823 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.313062437 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.313523792 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.309172378 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.310346572 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.314414443 seconds)
  done (took 13.011977763 seconds)
done (took 79.197145822 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.196650219 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.745059351 seconds)
    (3/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.405827286 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.316297017 seconds)
    (5/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.41135083 seconds)
    (6/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.428337604 seconds)
    (7/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.811844085 seconds)
    (8/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.533232422 seconds)
    (9/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.281044594 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.566120807 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.3590285 seconds)
    (12/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.321421212 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.336999927 seconds)
    (14/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.522891069 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.942244813 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.210660959 seconds)
    (17/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.735653683 seconds)
    (18/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.343396995 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.305711518 seconds)
    (20/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.291793722 seconds)
    (21/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.818558524 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.029031611 seconds)
    (23/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.401385252 seconds)
    (24/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.353002586 seconds)
    (25/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.330635662 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.007341323 seconds)
    (27/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.518084865 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.320892558 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.722315469 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.727615148 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.421352953 seconds)
    (32/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.427865385 seconds)
    (33/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.284255493 seconds)
    (34/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.509754273 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.50577092 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.284373432 seconds)
    (37/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.140488906 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.300642948 seconds)
    (39/286) benchmarking ("sort", Float64, true)...
    done (took 6.303431339 seconds)
    (40/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.244652863 seconds)
    (41/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.906154081 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424334614 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.5679953 seconds)
    (44/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.485640392 seconds)
    (45/286) benchmarking ("sort", Float64, false)...
    done (took 5.58363742 seconds)
    (46/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.30892885 seconds)
    (47/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.440503735 seconds)
    (48/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.285040599 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.361066136 seconds)
    (50/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.390278885 seconds)
    (51/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.068285188 seconds)
    (52/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.38380799 seconds)
    (53/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.304331542 seconds)
    (54/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.579095759 seconds)
    (55/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.286257475 seconds)
    (56/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.52798038 seconds)
    (57/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.484738031 seconds)
    (58/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.301183828 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.31411129 seconds)
    (60/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.32877396 seconds)
    (61/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.312751307 seconds)
    (62/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.315605321 seconds)
    (63/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.315359693 seconds)
    (64/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341310269 seconds)
    (65/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.303965184 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.296249282 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.333919379 seconds)
    (68/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.662427904 seconds)
    (69/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.310047345 seconds)
    (70/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.327805133 seconds)
    (71/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.647515762 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 5.469655363 seconds)
    (73/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.485864812 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.671366991 seconds)
    (75/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.095742628 seconds)
    (76/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.120214977 seconds)
    (77/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.805400529 seconds)
    (78/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.409565133 seconds)
    (79/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.416717117 seconds)
    (80/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.108571155 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.412982925 seconds)
    (82/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.10412508 seconds)
    (83/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.287620544 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.351531269 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.307195282 seconds)
    (86/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.506000188 seconds)
    (87/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.076671716 seconds)
    (88/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.082019784 seconds)
    (89/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.538049163 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.307628393 seconds)
    (91/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.757213445 seconds)
    (92/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.371682394 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.288136293 seconds)
    (94/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.339875822 seconds)
    (95/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.810808871 seconds)
    (96/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.295271385 seconds)
    (97/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.684507574 seconds)
    (98/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.3420396 seconds)
    (99/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.396545788 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.327464437 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.293636991 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.288084731 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.397573071 seconds)
    (104/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.309220187 seconds)
    (105/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.756684278 seconds)
    (106/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.335381607 seconds)
    (107/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.30063779 seconds)
    (108/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.322073022 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 1.825600106 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.353660993 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.58932756 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.701039485 seconds)
    (113/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.672457527 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.188240787 seconds)
    (115/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.437787807 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.683081842 seconds)
    (117/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.313009219 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.654206662 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.051628463 seconds)
    (120/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.373416148 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.57303831 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.718689466 seconds)
    (123/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.43602718 seconds)
    (124/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.288810875 seconds)
    (125/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.688172477 seconds)
    (126/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.302264969 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.412240777 seconds)
    (128/286) benchmarking ("sort", Float32, true)...
    done (took 6.3096675 seconds)
    (129/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.495385718 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.289997206 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.953456159 seconds)
    (132/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.832077803 seconds)
    (133/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.632559066 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.058168575 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.337052756 seconds)
    (136/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.564698703 seconds)
    (137/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.699131481 seconds)
    (138/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.160308099 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.345496837 seconds)
    (140/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.017079395 seconds)
    (141/286) benchmarking ("sort", Int8, false)...
    done (took 4.356062994 seconds)
    (142/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.051255145 seconds)
    (143/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.272032864 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.337559536 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.341033264 seconds)
    (146/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.312255876 seconds)
    (147/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.329596411 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.354448314 seconds)
    (149/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.401140075 seconds)
    (150/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.857916974 seconds)
    (151/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.397842367 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.057145758 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.220610013 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.412464781 seconds)
    (155/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.670780698 seconds)
    (156/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.326657384 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.951547774 seconds)
    (158/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.330946335 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.77361505 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.328719437 seconds)
    (161/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.695700439 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.835016163 seconds)
    (163/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.915631805 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.946728655 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338031298 seconds)
    (166/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.312932304 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.324090505 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.720051804 seconds)
    (169/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.110657124 seconds)
    (170/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.822179662 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.360977217 seconds)
    (172/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.416370531 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.547317231 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.543511517 seconds)
    (175/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.31323721 seconds)
    (176/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.559902812 seconds)
    (177/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.060926134 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.294653727 seconds)
    (179/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.427850274 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.377933393 seconds)
    (181/286) benchmarking ("sort", BigInt, false)...
    done (took 6.312589013 seconds)
    (182/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.911332019 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.304930466 seconds)
    (184/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.301870288 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.459824865 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.391673089 seconds)
    (187/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.284980088 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.183228348 seconds)
    (189/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.396103601 seconds)
    (190/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.136154725 seconds)
    (191/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.055825108 seconds)
    (192/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.295207975 seconds)
    (193/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.521817391 seconds)
    (194/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.293056433 seconds)
    (195/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.354352864 seconds)
    (196/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.595915755 seconds)
    (197/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.366412011 seconds)
    (198/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.423783992 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.330539055 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.887194275 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.972211928 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.531386536 seconds)
    (203/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.295973822 seconds)
    (204/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.324016191 seconds)
    (205/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.294740344 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.330206417 seconds)
    (207/286) benchmarking ("sort", Float32, false)...
    done (took 5.341356306 seconds)
    (208/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.413223798 seconds)
    (209/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.670860695 seconds)
    (210/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.694928129 seconds)
    (211/286) benchmarking ("sort", BigInt, true)...
    done (took 6.313922139 seconds)
    (212/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.326152288 seconds)
    (213/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.378680942 seconds)
    (214/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.128579703 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.235144547 seconds)
    (216/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.340381413 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.339073353 seconds)
    (218/286) benchmarking ("sort", Int8, true)...
    done (took 6.316005534 seconds)
    (219/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.338338349 seconds)
    (220/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.301803621 seconds)
    (221/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.435529503 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.356869266 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.34103436 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.888067681 seconds)
    (225/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.400359031 seconds)
    (226/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.296634707 seconds)
    (227/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.329546865 seconds)
    (228/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.350380008 seconds)
    (229/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.414057621 seconds)
    (230/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.795836868 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.304485232 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.502839417 seconds)
    (233/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.052571899 seconds)
    (234/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.34479963 seconds)
    (235/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.375095547 seconds)
    (236/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.317961501 seconds)
    (237/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.753203204 seconds)
    (238/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.93591119 seconds)
    (239/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.348877685 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.318383057 seconds)
    (241/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.741408782 seconds)
    (242/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.318259284 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.571996991 seconds)
    (244/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.720685428 seconds)
    (245/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.403582926 seconds)
    (246/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.317072181 seconds)
    (247/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.311507541 seconds)
    (248/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.311170631 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.145327906 seconds)
    (250/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.726703898 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.36270079 seconds)
    (252/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.457781355 seconds)
    (253/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.30536276 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.69907675 seconds)
    (255/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.343674838 seconds)
    (256/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.614209424 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.727761698 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.314561228 seconds)
    (259/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.343535341 seconds)
    (260/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.937697631 seconds)
    (261/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.149207066 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.452397452 seconds)
    (263/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.29843155 seconds)
    (264/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.405504563 seconds)
    (265/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.683543053 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.418221944 seconds)
    (267/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.344911372 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.401285574 seconds)
    (269/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.552126921 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.432276675 seconds)
    (271/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.335756785 seconds)
    (272/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.431436664 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.347358331 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.159118583 seconds)
    (275/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.143538618 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.763952893 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.36111986 seconds)
    (278/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.329033484 seconds)
    (279/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.312560709 seconds)
    (280/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.308243215 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.146554697 seconds)
    (282/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.345899608 seconds)
    (283/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.100103802 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.34285609 seconds)
    (285/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.405500563 seconds)
    (286/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.301080317 seconds)
  done (took 931.096883605 seconds)
done (took 932.315011068 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.353759949 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349345047 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.329491188 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.351387245 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.442792661 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.353973192 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.340919112 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.333126729 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.37881935 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.380829884 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.330259188 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.354038536 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.332199559 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.330376479 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.329661448 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346107049 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.366357125 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.332292277 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.347782492 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.340847802 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.349132118 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.330445801 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.38179317 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.355997846 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.337319835 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.335089316 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.334389106 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.351520847 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.443073125 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.335695047 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.335640686 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.343911017 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.368401401 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.331162736 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.328279292 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.351930982 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.344129307 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.343694294 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.338015642 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.363508081 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.769270036 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.347792846 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.334000677 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.334203686 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.334318952 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.337632028 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.334820511 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.340624209 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347466934 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3477904 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.753346529 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.363712049 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.335327856 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.335293259 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.344882465 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.333996516 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.338801286 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351566149 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.351852328 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352019005 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.366463616 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344851943 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.337255663 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.35015339 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.341729881 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.791087934 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.345584233 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.339788322 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.76490282 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.356232637 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.79074265 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.358731435 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.336501 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.350314899 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.367663548 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.363853296 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.331235781 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.336106074 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.342657599 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.333485507 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.346871505 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349210249 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.34193252 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.337163352 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350947934 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.360009613 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.347951821 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.33756484 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.347001698 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.357076088 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.343745923 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.3478919 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.340041044 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.332321635 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.346532643 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.340684183 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.339200156 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.339528556 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.342489557 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.34759035 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.792051933 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378899013 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.334394742 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.335202751 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.337188838 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.351125397 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.800962488 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.361555622 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.360612747 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.385445187 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.339034805 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.381473762 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.347358459 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355102526 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.346875625 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.34254526 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.334342891 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.385386206 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.817694193 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376493779 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.339426206 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.337182442 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355655405 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.341300715 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33576628 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.400120657 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.346737146 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353911482 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.460146876 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.350917347 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.37127141 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.337227091 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.342362506 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.362868065 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356710384 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.369750389 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.342864313 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356965205 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.354936454 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.337560728 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.351485893 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.35045266 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.34202403 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.34607552 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.33449543 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.363890865 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355264205 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353967868 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.361290884 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.46094397 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.338876831 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.388398198 seconds)
done (took 226.080276957 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.401064053 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.337428653 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.424595987 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.337672283 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.440399055 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.438505094 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.334896962 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.336214019 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.335350134 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.772635204 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33561678 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.335488271 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.331666013 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.336359999 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.421122034 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337891512 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.336387126 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.679160315 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.33970505 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.410136545 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.336826942 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.334967996 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.338819158 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.719814858 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.339252368 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.334619261 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.409234727 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.33841604 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.682832429 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.332472735 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.333339271 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.684351751 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.432525529 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.35577598 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.348392991 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.345541511 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.440910168 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.357343401 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.421742973 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.423008516 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.425790984 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.378674275 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.341311738 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.337528507 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.342213812 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.342511026 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.338711367 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.367325834 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.34287985 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.338689867 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.682421674 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.350237187 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.348917775 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.33753129 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.339151359 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.362927265 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.338293738 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.343463118 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435055354 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.342000769 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.405535658 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.721050707 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.740264919 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.341188358 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.339656137 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.339508579 seconds)
  done (took 148.900617426 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.409081014 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414325184 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.454329894 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.359102571 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390193218 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.460674633 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.365122937 seconds)
  done (took 11.0999905 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.348789101 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.342412147 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392036264 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391855111 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.343216966 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.521913387 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342915875 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.353871675 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.339864829 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.395628794 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.345198451 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.342837105 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.350412758 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.342365683 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391885177 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353849677 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.458643589 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.344696651 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.345474626 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.49426454 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343161867 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.350842382 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.395646425 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.355001951 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.347288001 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349575579 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.155030515 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344835375 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341085186 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.344284553 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34164574 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.421851616 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.345199997 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.338890651 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341949976 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460341377 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.34566921 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342552538 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.345618851 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.338351812 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.344879918 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.344257566 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.34511756 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.342890509 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.345499468 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.367679417 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.345759565 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.345412536 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.344756098 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346078638 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.396487501 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.346631887 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.343897476 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.342807072 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.401291983 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352469131 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.348350734 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.343757053 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.346578795 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343221502 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.497882922 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.393758925 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.346400945 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.393493892 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347091568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347262174 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.348200843 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.345990305 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400747783 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.346123309 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.393901026 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.344861537 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.535273912 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.370610215 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348618447 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.350629545 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.349344615 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34869147 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.346832172 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.353060322 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.344501255 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.348803124 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.353278408 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345493893 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344834897 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.516840438 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454663916 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345833899 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.362557179 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.355427924 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.346538235 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.401231643 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.346996941 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.346166629 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.40076366 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.463905624 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.402357782 seconds)
  done (took 154.769022673 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.353269963 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.356031149 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.350294825 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.365252952 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.349499648 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.348486021 seconds)
  done (took 9.376152093 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.351486228 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.350030577 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.348584157 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.349799846 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.349119947 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.351208635 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.349358891 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350056144 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.35394602 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.349177709 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.350807319 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.350836809 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.350730341 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.350842975 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.351335088 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348764707 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.35187871 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.346938675 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.350353544 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351167662 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.454760405 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.349830688 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351597668 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.35162937 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.356383363 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.350815391 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357680932 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.349971709 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.351646474 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.357568721 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.37067278 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.351568593 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.35273424 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.3575871 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.355360484 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.352637931 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355498618 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.35387981 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348753212 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.353119101 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.351968882 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352872272 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.351730527 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.354247863 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.35416538 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.356113151 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.357458906 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359677654 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.352983166 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.353705712 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.354206442 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.351975137 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.353901163 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.353264343 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.354643176 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374389931 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358483852 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.354215036 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.353283581 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.354580472 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.355733137 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.354940868 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356123767 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.357232862 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.351697344 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.354706123 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354524545 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359382835 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354171697 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.353887102 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.356817571 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.352075499 seconds)
  done (took 99.815881447 seconds)
done (took 425.206597463 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.749459683 seconds)
  done (took 8.008083236 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.437697805 seconds)
  done (took 7.698255725 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.957329026 seconds)
  done (took 22.223567775 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.411830312 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.392173077 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.350680482 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.367607137 seconds)
  done (took 26.781353286 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.594605827 seconds)
  done (took 7.854562572 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.346932956 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.347366311 seconds)
  done (took 13.955062229 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.961446907 seconds)
  done (took 8.221722877 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.392683956 seconds)
  done (took 7.659581148 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.373757002 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.387767035 seconds)
  done (took 14.035553557 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.327955892 seconds)
  done (took 7.589507408 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.41619706 seconds)
  done (took 11.678205765 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.346300929 seconds)
  done (took 7.607839627 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.413879299 seconds)
  done (took 7.674130296 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.387079377 seconds)
  done (took 9.646363345 seconds)
done (took 161.892524877 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.347775283 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.358234111 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.359901212 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.358126495 seconds)
  done (took 26.683983697 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.389280788 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.389727131 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.390934083 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.400214792 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391813402 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.389193117 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.384312615 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.39405233 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.401212178 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.39268963 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.391022999 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.392201983 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.389275982 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.382593775 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.391536031 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.392985552 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.40114767 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.391856643 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.382872957 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.392780448 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.357868968 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.401901061 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39315416 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.357685031 seconds)
  done (took 34.604950079 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.878792163 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.428433993 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510172848 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.409407887 seconds)
  done (took 7.488263257 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.408382865 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.410875957 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.422217759 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.461635096 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.487423758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.420214007 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.383756267 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.378639382 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.36606981 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.411691157 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.486967553 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.427533714 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.493491542 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.357827849 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.544950807 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.358747841 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.359226641 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.409747132 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.461946792 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.4855466 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.358702709 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.410439395 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.413324689 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.428261024 seconds)
  done (took 35.410246427 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.359355592 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.377578094 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.359699903 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.356721621 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.365450961 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.35785073 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.35777209 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.359488784 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.359540458 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.364894018 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.358635953 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.371578135 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.358170928 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.35946696 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.365259712 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.360201026 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.366218108 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.360008246 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.36012492 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.365560091 seconds)
  done (took 28.508186698 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.352871671 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.298660485 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.705349164 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.609083679 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.354486556 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.360990364 seconds)
  done (took 28.944958905 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.431385064 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.586637092 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.360222431 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.722443265 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.824738502 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384750231 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.361020151 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.602980549 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.926622361 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.922384581 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.418681609 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.429204089 seconds)
  done (took 20.236429918 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.356851121 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.362916877 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.371526228 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.377970467 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.415875925 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.381921178 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367543536 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.355758866 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.425373752 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.437394706 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.381589931 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417307569 seconds)
  done (took 37.918628544 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443131831 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471649832 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.314644675 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380376632 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100064785 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567982092 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.402681127 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108633012 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386893668 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629778906 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356383068 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454112124 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611815778 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365943002 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364121923 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.351972553 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605758072 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83947489 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365347826 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.388961836 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391398783 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373726747 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.483458658 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.597776723 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596728536 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.334833464 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.619302624 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.134493607 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647584063 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380211324 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369393017 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35721293 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631642814 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020535078 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48256088 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572982117 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39003439 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.98753819 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.350169847 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.372369473 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379793975 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370593818 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369078533 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358964253 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292960354 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37011675 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103509986 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392225629 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.069474471 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358924494 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621956258 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463612805 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.362597852 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.929603418 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40444294 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.374554781 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.363893528 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452992305 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953025207 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.658909123 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371346411 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.317639152 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374075491 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39605486 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005688591 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.383094614 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.365607234 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364298605 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294662186 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.3994442 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386627026 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508144991 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.386397827 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010288192 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055991107 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38037479 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.317372114 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903953041 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363013944 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.303063821 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588701134 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137815666 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296530544 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.302602804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296460898 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069882451 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377199746 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.917757365 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391004971 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082705268 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597404731 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405099872 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385258382 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585959659 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.241501422 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364474996 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.36729899 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497220914 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384779447 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065924019 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316016531 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366761878 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618171715 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.573913019 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371023026 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.374720472 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874890555 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404276245 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.387415981 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365182373 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.585786087 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.973886385 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396744018 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.669573924 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38833794 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.138915336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10605342 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379919439 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.374002231 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365590655 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642016661 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.140045533 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.531258165 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432481133 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369937957 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364708199 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.42395727 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.221838793 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.245864964 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.564871042 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398751828 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.381762016 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.367134931 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308298841 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.362919081 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389779068 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.152669599 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588292458 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366072542 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664833924 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300597053 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512587303 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375777033 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.58993839 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.584260155 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.396898261 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624696613 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365733256 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400921098 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386294116 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385913166 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466584628 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38936713 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.366894889 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630816046 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.369489805 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.370596041 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.585436242 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.152959411 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375762497 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37306082 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389660734 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952284243 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362040406 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37175238 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256292453 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.380559894 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434805113 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374049641 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58447334 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.635366446 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393170482 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390371457 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.366897835 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591501023 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377950727 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.411889478 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456219009 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.854486681 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981919125 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397875433 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.302279889 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.079448658 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.061201638 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369744819 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.561648597 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368759705 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58484043 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408545684 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382498316 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958098267 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387943858 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.440910972 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.384438808 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380240533 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.374061912 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369671159 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.622578533 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.712594471 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380596093 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407934292 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513991064 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.383387579 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304426497 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.887582299 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374158036 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370583653 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.145433844 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404990876 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.434616306 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182419931 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648578578 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374451684 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650400899 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.549307798 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.412576152 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.366566464 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381769704 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390511438 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.403455017 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388036432 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.382679108 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.440427523 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.819275761 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937882679 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106016469 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932041527 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671634581 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.401823408 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.279077985 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107405778 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334255176 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.02829465 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610566884 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119684288 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34330512 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864758019 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.627227915 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172113609 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638626852 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611005365 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653050312 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.404445422 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648929449 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592497346 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408266241 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.387175713 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310679346 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.653419467 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930299201 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391971466 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454224774 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110705016 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401112073 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175916725 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.439838256 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.101128973 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794257373 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.945521528 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.761270541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378156753 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392647123 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181298081 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396904301 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898352368 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005682777 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392555088 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.874345886 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337368101 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592927971 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412605634 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.372398103 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.940324126 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.372384231 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.630543036 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6405347 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316332501 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386835262 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921687183 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.247085512 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.380516047 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374631705 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127214432 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390465212 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67589683 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.398189505 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.639249531 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396952643 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309108098 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310814443 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.067858526 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385810737 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356078598 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878933724 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.401528481 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379495653 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387496795 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230218513 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632020591 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.390241888 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964761246 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618853801 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377950123 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399987336 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.379670418 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376675842 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.367701727 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.27149993 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613132954 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447750556 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607956355 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.347046304 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.288694366 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.44568037 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614462758 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259659474 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381074109 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630085426 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.115540113 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.378467769 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088262634 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420633873 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387247325 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.840806978 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39600563 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39902123 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467045885 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596832527 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.417319495 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.389268924 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79129149 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407568354 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404964652 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.394195881 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472866624 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.723438505 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.659421428 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.159489821 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970486968 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136625844 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989585176 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666918704 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389971378 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38064387 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312521503 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528838941 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.90562339 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652573038 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509742244 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.398132228 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402930508 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380818667 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412833569 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601379044 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654789342 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.248918851 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388378256 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047361083 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.262579573 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391766875 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.592574226 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885694064 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972438349 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507361169 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383083599 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102939759 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674226656 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.471581231 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381362076 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970337242 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.38191375 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.112433943 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.396718285 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390764974 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538589702 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648978889 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062004489 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.420741971 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.538386108 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.154519716 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489718149 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647823824 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.85107147 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603048365 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000109004 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111446985 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655897768 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454074111 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603430136 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.511673418 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530105584 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.383591892 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.274250491 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38286942 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226535586 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.092529531 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.392722558 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98412488 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672288123 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.387536638 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.382686527 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415434117 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.39258167 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605045508 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098836099 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617806724 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393682952 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393941554 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.954595395 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983878076 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6796811 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330201145 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.388989155 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631843387 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64696216 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414193535 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.839117883 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.097162624 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941108447 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.356523962 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405643015 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384582994 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.113101553 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995844978 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.694079262 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905571669 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.052210608 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388522832 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666688895 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.389113437 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386397526 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6699712 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.388966198 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393845927 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616913642 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.010289126 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197592028 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.396119462 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.527250565 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.332954995 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.612024616 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445433909 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332258885 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389094601 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.809207337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416217299 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515433441 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399559604 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.384980958 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411834691 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.152919738 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66109625 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.394730325 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.374500084 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.374977108 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403680262 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488865826 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958607215 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412727338 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.060024379 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.737462938 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644460359 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399987646 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.377494049 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.391748898 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387361922 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102884656 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356381778 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397623549 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956968602 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.397560357 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.406783717 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39304443 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.605921358 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600549326 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389034496 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619807855 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42508982 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4115863 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.288597213 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.156879256 seconds)
  done (took 1679.303658992 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435480108 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.442176955 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.427785297 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.442192007 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.419029204 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.516005509 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.484741392 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.507568597 seconds)
  done (took 52.972521485 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.390662001 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.554776941 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.420181637 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.392867951 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.408138474 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.397001497 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.86513047 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.410786518 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.399933707 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.398494127 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.404286446 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.395498621 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.065490648 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.406625213 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.399968284 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.381969443 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.398772924 seconds)
  done (took 66.396633373 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.576664488 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.438618728 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.478765486 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.407281152 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.431976819 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.407617479 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.451307775 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.422744149 seconds)
  done (took 53.914634257 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.40838951 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409779843 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.408505304 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.40951767 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.410033645 seconds)
  done (took 8.346059685 seconds)
done (took 2081.992606586 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.395351245 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.398862035 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.39423688 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.398947809 seconds)
  done (took 6.88692723 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.371686048 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.079783619 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.375817876 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.386730847 seconds)
  done (took 18.51468193 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.394754098 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.397290516 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.103484882 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026746124 seconds)
  done (took 5.431715864 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.141937261 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.153768277 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.136917334 seconds)
  done (took 7.731623191 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.389191533 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.398355746 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.401063939 seconds)
  done (took 20.487300872 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.680389785 seconds)
  done (took 2.980041448 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.539054863 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.587686404 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.707479977 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.714526018 seconds)
  done (took 7.848706495 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.774319004 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.765040755 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.584827084 seconds)
  done (took 6.422785281 seconds)
done (took 90.397832303 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.258454523 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.770620235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.60104577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.274043199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.621307845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.601592117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.600437385 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.236238483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.738364229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.727598892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.275200408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.623742088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.551316839 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.770865855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.549172758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.770667593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.624348803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.304528637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.917340721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.110250389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.602505183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.872396258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.100443799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.893542231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.625528295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.552837254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.452679038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.772265842 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.091133891 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.468077589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.552498649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.288466602 seconds)
  done (took 193.500321322 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.393405629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408724918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408049296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.392896162 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.394484559 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410021582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39402736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.410555201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.415215035 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.39392503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.400123702 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.406110152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.397610911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.407136243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.393571954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.396372698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.398990195 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.409734233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.400355271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.394457807 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.393979431 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.393834432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427836917 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400967976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.397657187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.393385047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.394736452 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412400577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.395177258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.411838145 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.396766318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.395057648 seconds)
  done (took 206.140612427 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.395158832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.394872805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.397273702 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.395159102 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.394350607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.393911866 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.394533294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.407853816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.395157114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.413218999 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.412823375 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.395721819 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411046445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.403933332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.400077172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.41017411 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39484394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.410313366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.412807895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.40790209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40680646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.403003646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.3961678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.395193324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.413838366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.4172725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.413847061 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412994471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.396817823 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.396773671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.396532155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415701895 seconds)
  done (took 206.209806672 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.597804641 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.402221169 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.404886795 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.357179262 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.403740798 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.40349565 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.398882442 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.594935867 seconds)
  done (took 14.867788032 seconds)
done (took 622.019500392 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.684553214 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.401855746 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.602727699 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424284283 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.179939591 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.444148552 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426340595 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.595366157 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.332113257 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.603370237 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.695243505 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.438936972 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.838914959 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.421621717 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.680004722 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.523649965 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.277587047 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.404397777 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.744520423 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.957820565 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.684802378 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.909732135 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.618560678 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.325038909 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.857025288 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.906971722 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.135166131 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.270411909 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.441093508 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.749232189 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.070438448 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.400254766 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.487684127 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.486891563 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.546032082 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.522648937 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.391855745 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.492608049 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.626161537 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.676429705 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.94982967 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.149746208 seconds)
  done (took 94.682642852 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.38963571 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.389970642 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.388138413 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.389932653 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.390894808 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.389392434 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.391895898 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.388317747 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.388481132 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.390171104 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.38870401 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.391342929 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.388949269 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.390848341 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.389739588 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.392753554 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.390221547 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.391666999 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.389553863 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.390561936 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.391053617 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.390930251 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.391241659 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.391562316 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.390497125 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.391107268 seconds)
  done (took 37.456603938 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.409711057 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.658322891 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.821576923 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.415291545 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410810453 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.413109715 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.489227964 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.410474091 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.4115928 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.414758338 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.582334906 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411667061 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446110338 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.855668722 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414164998 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.410046495 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.411429591 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.409674395 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.668356121 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418721823 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.512886842 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.411197161 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.491358211 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.422033845 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.434249389 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412108598 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.416667557 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.977209576 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.430804586 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.581173381 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.217001452 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.495722752 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.915350075 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.850545677 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.22200372 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.421751905 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.412277376 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.587130659 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412302981 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.410733951 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.490858997 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.414720087 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.834004575 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.06992364 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.43042699 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413162761 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.999237025 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.604138509 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.663083974 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.429224633 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858992906 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.41576776 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414499514 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.41459139 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.665867733 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.429355005 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.412712825 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.977813082 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.437586178 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.491822877 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.41383206 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.413913804 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.674672419 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.413808775 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.664942391 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.416573014 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421355694 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.43502834 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.837481786 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41727035 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.092488537 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.432987942 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.414171647 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.583936684 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.664541579 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.033413395 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.436627807 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.68231432 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.932263548 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.509334272 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.418306787 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.970711614 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.513669232 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.419180397 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.417157314 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.416983717 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.414990121 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467084321 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.494225346 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.030297149 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.101548144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.005883804 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.51451763 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.429555727 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416063948 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.984362868 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.444717097 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.416926997 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.831672926 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.092931021 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.434255025 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.42273931 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.097027334 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.435868162 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.495828211 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.422679369 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.845893067 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.417871765 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.468294769 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416745615 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.422342561 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.439367086 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.498563398 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42005506 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.417077427 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.065626529 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.615859153 seconds)
  done (took 186.127183515 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.425765761 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.410398526 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.412530039 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.427960236 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.411786248 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.419263169 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.411485438 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.411196542 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416969642 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.411275915 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.411262998 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.412632913 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.411902523 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.41862674 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.42445717 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418959174 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.02642683 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.41141651 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.417998987 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.411373769 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.211231632 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.421034139 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.420787576 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.411906307 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.413448299 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.411476254 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.421937021 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.414710961 seconds)
  done (took 154.36861247 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.419722217 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.004924205 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.446581518 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.55238296 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.440176364 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415522367 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.550633242 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.480370293 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.43753139 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.4177599 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.416681366 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.724294679 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.419871991 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.940111606 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.613049459 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.569216952 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.939798196 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.437467088 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.418124979 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.418314204 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.553832991 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.424610571 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.72557726 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.988158003 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.439439785 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.988426201 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.404094093 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.421274898 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418259219 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.990562201 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.434662741 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.724160018 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.4990401 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.481320407 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.008815253 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.966717998 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.967001982 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.572251543 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428118001 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419515903 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.418553167 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.404761283 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.994405129 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.440612679 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.423051297 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.984031856 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.440454229 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.422969883 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.426759756 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.420476154 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.481972769 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.50142311 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.749103117 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.997869697 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.516888549 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.434565375 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.556900975 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.80516894 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.42611889 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.942618604 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.405431417 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.00040242 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.442657332 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404980117 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.422873872 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428423109 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.573624087 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.559757294 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.952386523 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.441138742 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.958943161 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.600081297 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.421167877 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.421652151 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.425681735 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014457569 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.986185783 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.601775139 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.55952798 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.62238416 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.408249262 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.424487122 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.406251461 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.502734493 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.424677774 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.002015414 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.977492837 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450232323 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.425582255 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.425170942 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.425545219 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.606430756 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.036850165 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.529701904 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.934930883 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.751637686 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.73783265 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.426636882 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.484864407 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.4441657 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.745038972 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.426691349 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.483419243 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.86111472 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.735552677 seconds)
  done (took 169.351658419 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.67251717 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.686860663 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.525738169 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.5756127 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.043829171 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.001480782 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.719905785 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.566980984 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.53683343 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.69257577 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.611438445 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.52309787 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.640448011 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.50291993 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.167740219 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51228105 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.53472564 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.574415669 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.585508328 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.457183874 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.10245004 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.709391916 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.61365109 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.355268249 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.526764575 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.186314941 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.992950971 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.947467843 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.599788597 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.794529259 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.978970843 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.574881118 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.408279567 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.114385095 seconds)
  done (took 68.364521218 seconds)
done (took 711.658025688 seconds)
SAVING RESULT...
DONE!
