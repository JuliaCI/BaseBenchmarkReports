cset: moving following pidspec: 25341
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23086193 seconds)
loading group "string"... done (took 0.458464384 seconds)
loading group "linalg"... done (took 7.512386483 seconds)
loading group "parallel"... done (took 0.168239559 seconds)
loading group "find"... done (took 1.168628079 seconds)
loading group "tuple"... done (took 2.116596356 seconds)
loading group "dates"... done (took 1.333971695 seconds)
loading group "micro"... done (took 0.244610625 seconds)
loading group "io"... done (took 0.73225398 seconds)
loading group "scalar"... done (took 41.83112694 seconds)
loading group "sparse"... done (took 13.05055973 seconds)
loading group "broadcast"... done (took 1.15836211 seconds)
loading group "union"... done (took 14.331990591 seconds)
loading group "simd"... done (took 5.137022931 seconds)
loading group "random"... done (took 9.727129689 seconds)
loading group "problem"... done (took 1.986639376 seconds)
loading group "array"... done (took 22.495478926 seconds)
loading group "misc"... done (took 1.443834897 seconds)
loading group "sort"... done (took 3.584583368 seconds)
loading group "collection"... done (took 19.489344977 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.51960922 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137296067 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131709405 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148222262 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203026476 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144557736 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15944765 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114903979 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.95675143 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187087906 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155464884 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517691355 seconds)
done (took 5.128774423 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224406134 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095557597 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105125214 seconds)
  done (took 0.88073233 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076978801 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147296101 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095273822 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078273027 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09617877 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078824258 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096231046 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07852698 seconds)
  done (took 1.354671104 seconds)
done (took 3.229367951 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746842139 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.284476697 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205732547 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.471955535 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195683344 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216671048 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683416219 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.369133995 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251409972 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099963539 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144466629 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392115811 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13695906 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686100614 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088279582 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.1222033 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177396333 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.46701898 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081973313 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111138985 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116061774 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140873666 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129386886 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0931277 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187917466 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08352438 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198437037 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109721752 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080593075 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290406321 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201574909 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688575552 seconds)
  done (took 10.97767108 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111998081 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135391199 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099866396 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140159777 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134713347 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10124958 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087513862 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097409809 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123656009 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177537338 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113780909 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13547078 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095396715 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082441945 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114820693 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245382462 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121585676 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105657039 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100949404 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10546953 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122730989 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111869003 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108561766 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092156514 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167546573 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221250407 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113055327 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128079692 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098953951 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114512524 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146259125 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144182495 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097400285 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081381981 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173913543 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125808421 seconds)
  done (took 5.176019352 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190381331 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122341836 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171654051 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16657415 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142051697 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162300392 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115011242 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24836124 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.125604596 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164375349 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143229494 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116412597 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080402373 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099244325 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096260386 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.691107227 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124014696 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156976317 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11684698 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104139832 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085082475 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366191519 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104547853 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081126334 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100331869 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066765401 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162162024 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100758435 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.264476845 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.082823637 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117491035 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103209214 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127482945 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116239847 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.125325353 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127776874 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137325835 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080170411 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097354562 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178125651 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088106419 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098310667 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119703942 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132487362 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117938396 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099272273 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095938045 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204540306 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097098715 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09773785 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.957185253 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181461865 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091133439 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095287422 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323321632 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09989552 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097820083 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077737648 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273859448 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183507084 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099714411 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081236569 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098210685 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077464765 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100255282 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389892296 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098425739 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.719887399 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084035648 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.112637229 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083598764 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098379558 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104362957 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08796197 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114262397 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079997835 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099481867 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080884463 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097877525 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082123369 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110861849 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101999594 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08166082 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16543164 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080718402 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115831134 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128506332 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086493833 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096916623 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132222716 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084673576 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099087002 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135285057 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081665687 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111579246 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099871481 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142625051 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082683724 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.183973663 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080337089 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126151904 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09990797 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113432586 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111153998 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098435411 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084177083 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093607715 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076572299 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095543338 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14717951 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095732298 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082233835 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099768475 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107920321 seconds)
  done (took 22.748697772 seconds)
done (took 39.586031942 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32754601 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102646603 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103555815 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102081747 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101664298 seconds)
  done (took 1.49599138 seconds)
done (took 2.226215516 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.29236416 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.177411197 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095652751 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170543774 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095159081 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177944595 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163414959 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11302915 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.22274209 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0770361 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166092213 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095263616 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076873838 seconds)
  done (took 2.683301923 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096419523 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117157122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084174579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112596268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077696798 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112739267 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093595052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119021203 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11042183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08532173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094928546 seconds)
  done (took 1.832314404 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094895446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114663446 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082085255 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110772798 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077661013 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111196678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093026548 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117047326 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110512452 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086880188 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094409588 seconds)
  done (took 1.820754363 seconds)
done (took 7.05867714 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09155047 seconds)
  done (took 0.813243482 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.931730873 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.845551392 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111456963 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1468821 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297726129 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190673394 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474385361 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124903551 seconds)
  done (took 11.051568132 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.144466122 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082700208 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09999472 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084073459 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103212659 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085213389 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100561382 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098220436 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083747321 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09837862 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08131298 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099825761 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099969032 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082382529 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10236027 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08588578 seconds)
  done (took 2.326124776 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118525267 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116483552 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104431958 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107866106 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085486315 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104082606 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106093483 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087459564 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10064234 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102751087 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090492285 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104378198 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103050714 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079747188 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104794701 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107047801 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084957743 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104322483 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105298952 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088314812 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105793605 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09454259 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086512698 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105302457 seconds)
  done (took 3.237116487 seconds)
done (took 18.154454535 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161452903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107547618 seconds)
  done (took 1.001947128 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09624642 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110890204 seconds)
  done (took 0.94473057 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099504422 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095816864 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12032363 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108857304 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079824193 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095353745 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118235198 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079738547 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095368106 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079859118 seconds)
  done (took 1.712462071 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083235127 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109268897 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101434367 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093859242 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102620754 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094100695 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087290087 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097433655 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108499554 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075916716 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100505671 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112614553 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084404924 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114974841 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103156622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082772809 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100936987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098122301 seconds)
  done (took 2.490280318 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080979299 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096828446 seconds)
  done (took 0.918057036 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081964819 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094700793 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079792584 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09614424 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093575616 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07651054 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093858602 seconds)
  done (took 1.35579336 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.455929492 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118519005 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268298398 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084209214 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120475071 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30528786 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098934353 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084130398 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10226885 seconds)
  done (took 2.434208007 seconds)
done (took 11.594815737 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093742155 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119411021 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11279016 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468842675 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109346013 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097388013 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159144847 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254592128 seconds)
done (took 2.160459342 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151304553 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331312976 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11426556 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066597002 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094388582 seconds)
  done (took 1.353906535 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081108982 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100614063 seconds)
  done (took 0.927608689 seconds)
done (took 3.183840129 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082178844 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.127940614 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079615741 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095231363 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076813023 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097801695 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077566186 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095079003 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079910349 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09586082 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095669707 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079165414 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096134418 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079884563 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093627305 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077528408 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09626594 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07745046 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093357812 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079246171 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094081243 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079759156 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093962538 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076839368 seconds)
  done (took 2.901213134 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099959739 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098635029 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101686493 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085167646 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100574575 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085083711 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101383118 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09604922 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084432253 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098295452 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099111472 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082915173 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098678495 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083446688 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098200311 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100447541 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085714227 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097200452 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082467825 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100206829 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101457028 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080400538 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099923103 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102939687 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083645663 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100438094 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081991302 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096995886 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10154856 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08326405 seconds)
  done (took 3.562832422 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085643038 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093282377 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077078075 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100927329 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077413045 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096277354 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076700162 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095298837 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078071032 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093729872 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078192474 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094489923 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077369358 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095099128 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079486078 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098224351 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107409717 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077595914 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0942911 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077228972 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097834272 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076850576 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094676672 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077619404 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094225446 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076818847 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094240738 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077671808 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094618595 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07734018 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096986541 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080624673 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095066706 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084594972 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09701793 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07723358 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097489276 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077426695 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094544198 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093572217 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076820397 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094117848 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076672249 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101330437 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078091429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096592256 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07831613 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09522217 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078122705 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097542702 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076850923 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094145973 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079583088 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095100506 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098498399 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076557782 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094891501 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07689156 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095173063 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077345407 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093082576 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076678054 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096282153 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077941424 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110051866 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084387973 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094988045 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079106775 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095852228 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079443672 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095490015 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108377258 seconds)
  done (took 7.093328978 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084204221 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10536515 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079196453 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096186469 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076454289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095835441 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097673181 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078489015 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096586104 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084145355 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094931281 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079521389 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095875533 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10673392 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07840132 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095691483 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084288143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092605937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077875806 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098497086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078402585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097766893 seconds)
  done (took 2.731465421 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21135437 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105091798 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140020387 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106403951 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081858219 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104956462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101690854 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08637807 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102615136 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083404149 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099334573 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101660331 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082906703 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099368881 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09990517 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084612642 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101718221 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084175113 seconds)
  done (took 2.63763384 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094970963 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098292744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102201238 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097952169 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097633985 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083849406 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10314065 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106461488 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083393452 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097453954 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08940574 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099890844 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099296515 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080705166 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100079496 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080505926 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100347512 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081653884 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107042983 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103856418 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10303886 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090413304 seconds)
  done (took 2.863367065 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098923711 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099683 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116996756 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083318717 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094604928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078659775 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104187666 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080270997 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106889763 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09978518 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080267103 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096176878 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087399614 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097018072 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102989995 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081343784 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100536682 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080920668 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100907603 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076002832 seconds)
  done (took 2.629566477 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10337311 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099265637 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099020082 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090888037 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099076134 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081819803 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108018991 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09927432 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081656001 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123624554 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100009626 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081770521 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107785526 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105599662 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099867041 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091261619 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109158312 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109735961 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081345574 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100017018 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124599803 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082095747 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108984661 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.211817748 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084468033 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100134648 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099861863 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08723486 seconds)
  done (took 3.636446569 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082621682 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099161326 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078857859 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095375105 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07792311 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096566103 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077738845 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096406647 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079984826 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095729112 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081192958 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09785428 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080365424 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098680439 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08402133 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098480323 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080539499 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095693199 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078101201 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095338246 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081134653 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098719856 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080954387 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096491575 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0787997 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098125258 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077729415 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095428489 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081231149 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095701879 seconds)
  done (took 3.423078888 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091658995 seconds)
    (2/2) benchmarking "in"...
    done (took 0.1063488 seconds)
  done (took 0.966608759 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079871191 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115683671 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078125066 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103477382 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085190499 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098317946 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107811357 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085422768 seconds)
  done (took 1.522018712 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097683281 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109225965 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08314798 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111781345 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108625736 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.093977564 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159291658 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100342714 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086788551 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09708618 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.093697455 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097755731 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105117114 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081863355 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104761023 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086903745 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097193991 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087614857 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101966513 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097437873 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082605264 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110350178 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083604962 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096974008 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082923477 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109659306 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108449126 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082430727 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102421157 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107723979 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086949309 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093411301 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081052168 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100058223 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079407085 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108672406 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111128617 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083903376 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108667465 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082721536 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111506722 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095253326 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087075488 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105689077 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091238099 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101314935 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082521189 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094835311 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098075945 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083456866 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094563138 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081232192 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094348568 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088641418 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102898215 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111714621 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080496563 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101778679 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08461412 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10305385 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088086781 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101437098 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08485042 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098416288 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105628766 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085557789 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107308523 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077299488 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093455306 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079402908 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108254347 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121388188 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089402325 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099767047 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083049085 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096276384 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101595496 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083262721 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10658218 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089561111 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09934993 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106626082 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088940397 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098791571 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084287768 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107452582 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098209196 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083470156 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097072302 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096642884 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098239662 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078942742 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096204355 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107547329 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084927993 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098793245 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078938125 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106746258 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078598031 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100290041 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0825322 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099344123 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107815293 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088114719 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10610158 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106223337 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088784646 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099240778 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084485611 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09600821 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0822722 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101488935 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088282849 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093173708 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10232676 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082838315 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100255431 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088626373 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098393136 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081323492 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106758648 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105669407 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08002773 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096120822 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085409499 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100699585 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084814216 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106255188 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098628089 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07680335 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094521202 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086413805 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099895627 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086568351 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105327098 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10212081 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076369027 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097798862 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085672097 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106529121 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099421588 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082861209 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104180389 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08187886 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098851055 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086646869 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101467826 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080749132 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103695103 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101378383 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077548803 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104343774 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084219518 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099243783 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085461126 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104645449 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102015099 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082963861 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098243201 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087338181 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101597877 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080204542 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099284645 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080187328 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109131918 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102173335 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077416544 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09651816 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088329897 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097579574 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081242642 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09803333 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101705847 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083053338 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097395955 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081615665 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101152584 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093096252 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105176206 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101913387 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086593083 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109767317 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081397657 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.1020225 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099499388 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083377086 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100765636 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089067939 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105790412 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104687229 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084247399 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09590148 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087575553 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107955257 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081528481 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098394159 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080845253 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103345166 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106542257 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085309427 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10079487 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080256328 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101271699 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103591874 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085054685 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100159175 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08177382 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105892088 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080866874 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107057593 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10125212 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090420207 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103625832 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077470982 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104269839 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098220746 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087642007 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095971307 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080240233 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098356945 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083250974 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099492453 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0848042 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094922248 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088673674 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107922194 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100057187 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081257595 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100796035 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091044523 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101249762 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085349604 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102692773 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104743626 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094231722 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100337445 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085087573 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110675021 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100222596 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076088669 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104660558 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08072122 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09988266 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080710038 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098395525 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084739801 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108899798 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105062578 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07663601 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103138428 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081255956 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099535917 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077842481 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107807941 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104052782 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083182845 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109400231 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083423652 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101035554 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085202064 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099917082 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101556722 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083532758 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104448488 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082760188 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103310413 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082071345 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102475492 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099354043 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079870297 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101481474 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084800838 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10046661 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088988686 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100950783 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082108053 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103578882 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101351486 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082782514 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100907696 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081694691 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103554494 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083605638 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102487372 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085478243 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096669558 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108004664 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082522928 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10841941 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083009756 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097271444 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087744139 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103635691 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106372427 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083929155 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101514561 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08501781 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100575448 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084848089 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109300345 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098258461 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09066025 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106504167 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083516979 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104191226 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082849342 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10223822 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08158426 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102335845 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101334797 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081986999 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100175951 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08711929 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103473023 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083096611 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103157531 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102105114 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082483043 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101362048 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076872372 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099808711 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082133763 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101373106 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089311018 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101488296 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103379427 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081130786 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10240822 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081925932 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097272182 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09100528 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110232524 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101770822 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090597182 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100711039 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084253339 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110630871 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094764322 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080938028 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099106603 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080260162 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108790584 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083671939 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110493019 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083208211 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100671607 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098362826 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084087114 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099781988 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076781652 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098877242 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085920205 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103441701 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081724398 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101742037 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085770842 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101933077 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107878818 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081902726 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103194777 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083781147 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09817651 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080977636 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099892992 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085406805 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102665765 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097828316 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079953166 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100645407 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084179044 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101685036 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081829586 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102314498 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097748078 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101793652 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103568418 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085987388 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096073365 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.084967641 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100757227 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082122767 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099864226 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086395911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105236295 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102491135 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089989372 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101079657 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083683294 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100558573 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080062749 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101928203 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100819617 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083191985 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100094693 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084011842 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110512372 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080996709 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103692264 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083097366 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101828966 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106003798 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084256106 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103180514 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09105379 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103756917 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103174727 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089263398 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104410313 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08663267 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102736601 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083992677 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107759253 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100365019 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091258795 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101503935 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084357874 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102724474 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080992895 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10040512 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083036797 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100874702 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105558222 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084658468 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099861559 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082264069 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099421784 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08440396 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107037809 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109864088 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085164223 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104735826 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077875038 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098904063 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084171305 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099293981 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084148415 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103868424 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107607105 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084640082 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101711393 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082165417 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108433898 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087945402 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106899814 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099723436 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087326661 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102486722 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085081833 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102535555 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082392203 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104203811 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106535133 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084702717 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100559539 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091430852 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105482865 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083878934 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104074278 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082933088 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101706835 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096491723 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083556107 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103463989 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089109684 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104177175 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082544372 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110636965 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101273757 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082838145 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105747138 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081811272 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108347496 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078479115 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102445855 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102678067 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084311215 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096489553 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082684585 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099130284 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086571197 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101135811 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078124877 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112254098 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109284835 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0853228 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100989194 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081185847 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097004341 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078062114 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101286212 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084141023 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103656329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11071634 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082231068 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100466192 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078705632 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103022607 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086124741 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104924077 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079828773 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098032211 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080875404 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103655692 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107860177 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081691726 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101874431 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086937061 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104308176 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080761191 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10576791 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0980614 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087258333 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112001587 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084997121 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103219041 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087524914 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110299685 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102904364 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078758994 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102548932 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085964037 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103369482 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085764168 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103484158 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116602797 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086996352 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100753171 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082164377 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104481019 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081891697 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109360643 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104094435 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083771122 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106297114 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085460322 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1114077 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104159258 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089174545 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104728996 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085286941 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101697454 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083006884 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100672869 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08101269 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.1031366 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103866028 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08804925 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11015701 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082224583 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112054576 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109562128 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088536622 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098439262 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082921248 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101857459 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078148819 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103683788 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081262202 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100521146 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100156764 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082237322 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101928325 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08928004 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104325394 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084304265 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10250783 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076586074 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103167802 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104436443 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08675293 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098644067 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08421892 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103355294 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089307462 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106760692 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083963445 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104297009 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10358537 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083953823 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097823153 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089861301 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10192476 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086646074 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101633802 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083507233 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104887868 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105834295 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089923526 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104097821 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086129111 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.1147183 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104463053 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081675114 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099479311 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088231171 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100159855 seconds)
  done (took 57.314849494 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148910876 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080082998 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097989459 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079060382 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112876597 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098162374 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078840282 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099186352 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079910911 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102322874 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079166306 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099170517 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108312904 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123925841 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09179406 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104163071 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097390993 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080516835 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096983847 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080775343 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108651299 seconds)
  done (took 2.864377542 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106488824 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117748416 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11426219 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118666418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089811938 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11514929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113712545 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115051448 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098172144 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110363408 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118118755 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115613727 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091571649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111848713 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109372915 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093257295 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117980421 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109954574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116013467 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093850448 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113829289 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112906769 seconds)
  done (took 3.220073279 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085976302 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101630966 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084352638 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09754355 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083363288 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098382354 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087025191 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101338429 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086535373 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102770083 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081632126 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102664475 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10401877 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0786908 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102450722 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081202994 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152111982 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106866185 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082185692 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104986364 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098208489 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085833852 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098285364 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079686486 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101970513 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087456919 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103870438 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081848665 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102041933 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081910749 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104085115 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080081966 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104485474 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10267652 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081675269 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100664479 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082937646 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102291873 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078358835 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100399385 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083470079 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098629643 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083425532 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104779702 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080786111 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101527895 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084352026 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102694753 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097266586 seconds)
  done (took 5.439689614 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105586083 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161412695 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085436406 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143102791 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119214823 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111632296 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086393726 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141317966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102377391 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081578019 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12137506 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120251676 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102614463 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089775332 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110476599 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103122695 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085055258 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10301234 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106843504 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082809527 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106916499 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.08903272 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119239801 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117361376 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106697671 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083303928 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103795916 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107982704 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095662585 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108876728 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108408335 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089493972 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120925044 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107828307 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10232189 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08634819 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121201278 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103432939 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087596905 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10068336 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086286973 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109664905 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108577041 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119505128 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083919761 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108183119 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083377498 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101244174 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115484268 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086306057 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113399267 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117523326 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107604702 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084766692 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108240554 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119156411 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083863832 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.1010183 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087278619 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116148786 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101297078 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086616829 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117366575 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105785662 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111923758 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098509661 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107893202 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106838878 seconds)
  done (took 8.068132689 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096653582 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110843366 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119811681 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119424318 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090257275 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111021268 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10991498 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090194793 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110394648 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115439363 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1092377 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132536426 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086592148 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11342779 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111144641 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090317928 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111486347 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110015885 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090968769 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110416993 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110559425 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119516411 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090585811 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120226147 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140517396 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105415831 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089131741 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109648232 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120726729 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109733756 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121984765 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089970418 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110149393 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120272251 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122978242 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090309288 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103520485 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109987528 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090244343 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11058012 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104361984 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099530891 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109366608 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104295695 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090244698 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109459619 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120121309 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12363648 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113521345 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096507351 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110217886 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12036315 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109418588 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089847538 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119484328 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145447603 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119695813 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120117061 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10956325 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098554674 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119006135 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127944077 seconds)
  done (took 7.615875964 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109363338 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115125342 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116404351 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09950655 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081804559 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107558302 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081684901 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102172065 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113567253 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093202509 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116643333 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107809055 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111023824 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096443761 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10804033 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110174887 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087342599 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108597756 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112124892 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107579217 seconds)
  done (took 2.918323782 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095134392 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122487793 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084319788 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111218799 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106993109 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090620606 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10690754 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106176411 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084497276 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107023771 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095202764 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115283005 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10403704 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091619904 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116103098 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109596861 seconds)
  done (took 2.476891924 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097982576 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118332135 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119182677 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084454029 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10320413 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079394937 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104896228 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099174957 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080174833 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119323726 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083595788 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10754506 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103713181 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084817231 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.099921344 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087062643 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099881544 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081388458 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105660731 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117554239 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096012532 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103030423 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105075487 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08706825 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103815041 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089472813 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105535297 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10182225 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082721896 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104357763 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084355425 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112876936 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100446916 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083000723 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101630138 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082765804 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103969758 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084564563 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108006995 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104081268 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083369734 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103173761 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084376506 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106022017 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079757823 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105159692 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099465233 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09106378 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102317448 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084403201 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10378268 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106962915 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085479 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115486046 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087913567 seconds)
  done (took 6.194652408 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100219657 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1082516 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079565664 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102323849 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087245042 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106805514 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107376702 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087785525 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105607631 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082603435 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106265692 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088380416 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106539658 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107349901 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086754115 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107437259 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080201482 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10567159 seconds)
  done (took 2.596700367 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093880158 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103908941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091773182 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105831086 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084521028 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107788353 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079951244 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105645664 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102107901 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085146281 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103621551 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08675047 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102997384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086692594 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104074928 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083950431 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106882103 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102144556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084828537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099806154 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086682472 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103086516 seconds)
  done (took 2.949255277 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121246721 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124667771 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09158448 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228666644 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103107924 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.130806774 seconds)
  done (took 1.636591403 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112785673 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121017652 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10481481 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106792341 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114637117 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105869265 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08722192 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106212289 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116743932 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101622364 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107589545 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116221953 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116176939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095032448 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113758131 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11345093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106613329 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087357065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105557857 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127143119 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087277529 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117255085 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106841185 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086316104 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107585071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116584496 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116731965 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120871334 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086659527 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116283845 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113546102 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086873966 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117648309 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120955503 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107795466 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097274544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107367024 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12754489 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113428524 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096555933 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109242883 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113088311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098039055 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112995366 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117314756 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107168903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09235352 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107106503 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106697256 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134080642 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093686087 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116792567 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113139494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116228192 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117328373 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134853558 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101380785 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116724925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113433499 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120890938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116353878 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093764102 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116645118 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122009132 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114631575 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11561373 seconds)
  done (took 8.078720407 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104483326 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125672461 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107094688 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121060761 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097378712 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107870035 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107039086 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087444562 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107414254 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105735501 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150979369 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087042702 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11770198 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116723695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107212937 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087002314 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1067578 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116213521 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087339123 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133555677 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107277203 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117235442 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116368985 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095504297 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120467827 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113327833 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106829782 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087311567 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108066451 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107465339 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093278889 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107874811 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11709798 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085949835 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117017625 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106419379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08769644 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113987503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107626553 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114502553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096690947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126248745 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108707745 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107225379 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121147238 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087764602 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107362657 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087057601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108610499 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105844905 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100303552 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121285101 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120901694 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117744028 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107907957 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088514639 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108682949 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107291292 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087474035 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114004883 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116275965 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107167353 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134757213 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087368294 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107649433 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117200245 seconds)
  done (took 7.956581464 seconds)
done (took 154.044780038 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100602436 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134840862 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095383811 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167020699 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10503721 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1181205 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137805891 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096655702 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105907578 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085527296 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105677366 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086877649 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170627058 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08474397 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105816403 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106604775 seconds)
  done (took 2.649752791 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202539886 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252308912 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102354862 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105955979 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.0884367 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109386364 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103757421 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091082261 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108733145 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085999654 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107939631 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086178686 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104746734 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086560487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109494458 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08790191 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106236659 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087656721 seconds)
  done (took 2.87431987 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116539235 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144969285 seconds)
  done (took 1.115246917 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122052086 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181262026 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320777307 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154910878 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106576518 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12773393 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15656728 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130771614 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196059216 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122457564 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121437106 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096807273 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141242226 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114772787 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093852221 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11912197 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142200673 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092860815 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115217171 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114562683 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116215276 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106583917 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114465476 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092983028 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180474019 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118385707 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083725104 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105967625 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114966831 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094816051 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112664425 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123772393 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097202626 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176860597 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10389993 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17623192 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097709098 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114685886 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114446604 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09120857 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118140718 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116349184 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103374316 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117669899 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084767548 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117983088 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105725628 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085116359 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114217051 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097431728 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115115505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1124722 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154320263 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116987191 seconds)
  done (took 7.515247976 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.80403536 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161820936 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089795838 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891640702 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13787031 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102735282 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787334372 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132233446 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230216601 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756225401 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133262974 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120607878 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225196397 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237409311 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925287266 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3061222 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.666602109 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101639719 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148481895 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152219324 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118216927 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137785342 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128963158 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429428579 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094810462 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111923519 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11648039 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098617453 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157707535 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123864107 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11252719 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178177819 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243321068 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205659389 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114316848 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089003857 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111266595 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167402448 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265092387 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213804797 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180713807 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086454287 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109927163 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121296369 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110254645 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107807017 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162786157 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193466905 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171841437 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091705919 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121076183 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118951013 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119946602 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163684559 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119935641 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.294028712 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32239374 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111489019 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119770499 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104755505 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263343594 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122059336 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222564624 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116785327 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21055141 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110479799 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777051366 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188297105 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089657614 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117021396 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118106737 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094661071 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120206328 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165223136 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390927331 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124054073 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092035083 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110698948 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210603318 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12479881 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109579027 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160771444 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114142589 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099659496 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124199772 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121832768 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170237087 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227762608 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123940035 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118882289 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09320956 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125178272 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114583402 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210901576 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218772183 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161513603 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209783024 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121529886 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162165395 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187822983 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096991825 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191829873 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097130737 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125857506 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122071325 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213914215 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145542209 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100971493 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115687331 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11754845 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148922855 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12630896 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09738809 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189015338 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45649936 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165340451 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108232604 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12579527 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098309369 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158696337 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116967005 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.255228682 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120891331 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168485813 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118498124 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086623469 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119888026 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163979271 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121307346 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120610521 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100886326 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118010529 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.230423783 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215805764 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121783234 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218571392 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182677492 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118244697 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170222518 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121190709 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164964671 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120114013 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120063865 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09449535 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788722141 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122136543 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098714012 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115731139 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187555952 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110512683 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102412862 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123662409 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107712928 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750889595 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125867219 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12004658 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101755078 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117615354 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120098803 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095335997 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115624084 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16047719 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229338096 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120623627 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118323962 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102902987 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179547885 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094459078 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123402225 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123930953 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123827531 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099901783 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113919016 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122520603 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16920741 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160578805 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218080359 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.595024372 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090032422 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124049306 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227761298 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089198387 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286623622 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119313627 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22235819 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163837615 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120131918 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316954711 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166175951 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186323433 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125641957 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172068177 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086147961 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11856581 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16462306 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11192624 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115928799 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161866991 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12341776 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101581196 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962429922 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111798563 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22486119 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107816716 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171425764 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094075365 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121065545 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292615884 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110881777 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106651592 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184669399 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093673114 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124483701 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.725210526 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103474846 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12219394 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11695791 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220666429 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162452394 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096408632 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118888103 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121229865 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161120379 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208680111 seconds)
  done (took 43.779758648 seconds)
done (took 58.781060851 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276348267 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21407761 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261092041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171404963 seconds)
  done (took 1.873323782 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172726768 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147173173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119208868 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107891591 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149700078 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085131244 seconds)
  done (took 1.65675787 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361459348 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27610951 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241569 seconds)
  done (took 1.758741611 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290805415 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25178046 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.3597052 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421254752 seconds)
  done (took 2.325820514 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208240837 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132096827 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111317814 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10375106 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197483902 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252356345 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142910127 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202458448 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121965557 seconds)
  done (took 2.400027801 seconds)
done (took 10.894721119 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.300481058 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.169456076 seconds)
    (3/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.253578419 seconds)
    (4/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.243627427 seconds)
    (5/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.154357834 seconds)
    (6/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.233988669 seconds)
    (7/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.12455031 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092109858 seconds)
    (9/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.157650853 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10047039 seconds)
    (11/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.254789748 seconds)
    (12/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.133476937 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115472298 seconds)
    (14/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097912008 seconds)
    (15/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198582679 seconds)
    (16/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.255908297 seconds)
    (17/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.249916564 seconds)
    (18/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182024103 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103483575 seconds)
    (20/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.230927884 seconds)
    (21/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.118316822 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068735552 seconds)
    (23/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.217620179 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.214027182 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066281854 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.223213117 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.206077508 seconds)
    (28/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170619401 seconds)
    (29/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.156809505 seconds)
    (30/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084994859 seconds)
    (31/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.143304391 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116073867 seconds)
    (33/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.19020694 seconds)
    (34/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115222361 seconds)
    (35/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066511844 seconds)
    (36/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115660813 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092236081 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.135478638 seconds)
    (39/286) benchmarking ("sort", Float64, true)...
    done (took 0.228106028 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117075701 seconds)
    (41/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066314132 seconds)
    (42/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09505117 seconds)
    (43/286) benchmarking ("sort", Int8, true)...
    done (took 0.217656442 seconds)
    (44/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174380182 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.089720344 seconds)
    (46/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065745475 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.135549499 seconds)
    (48/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091864608 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.156757925 seconds)
    (50/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109869285 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093476408 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112325283 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.107725736 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.137456157 seconds)
    (55/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148040359 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095589047 seconds)
    (57/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.156727799 seconds)
    (58/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111993068 seconds)
    (59/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093802927 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110703518 seconds)
    (61/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.161271116 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112881328 seconds)
    (63/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115859829 seconds)
    (64/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.089757124 seconds)
    (65/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067288685 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138657414 seconds)
    (67/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.140923075 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100777396 seconds)
    (69/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181375313 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.134629433 seconds)
    (71/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099821967 seconds)
    (72/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169173202 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17331308 seconds)
    (74/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094667361 seconds)
    (75/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138465468 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089572472 seconds)
    (77/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.188197377 seconds)
    (78/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145110679 seconds)
    (79/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156913191 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085750775 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.111079658 seconds)
    (82/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156797036 seconds)
    (83/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.093409359 seconds)
    (84/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219636619 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131457946 seconds)
    (86/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184244816 seconds)
    (87/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140887541 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.135791259 seconds)
    (89/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075549183 seconds)
    (90/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.123628812 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085936821 seconds)
    (92/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13728556 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110593127 seconds)
    (94/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.07604227 seconds)
    (95/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096994719 seconds)
    (96/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120301908 seconds)
    (97/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09183715 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116409718 seconds)
    (99/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.115893433 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094163221 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065725813 seconds)
    (102/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117798076 seconds)
    (103/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119880242 seconds)
    (104/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.115422755 seconds)
    (105/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11672462 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137398127 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 0.191201367 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095296166 seconds)
    (109/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140834138 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116984989 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 0.226179445 seconds)
    (112/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098664119 seconds)
    (113/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07703095 seconds)
    (114/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139690008 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115670172 seconds)
    (116/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092943328 seconds)
    (117/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172981487 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094030135 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138741133 seconds)
    (120/286) benchmarking ("sort", Float64, false)...
    done (took 0.172743265 seconds)
    (121/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086000646 seconds)
    (122/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116969809 seconds)
    (123/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114655735 seconds)
    (124/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088241381 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117956111 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094782884 seconds)
    (127/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185057796 seconds)
    (128/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111375185 seconds)
    (129/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077486115 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086018766 seconds)
    (131/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.143557182 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11629901 seconds)
    (133/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.07715067 seconds)
    (134/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085875393 seconds)
    (135/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.153089454 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085305991 seconds)
    (137/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.11816661 seconds)
    (138/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122792628 seconds)
    (139/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089199282 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109476749 seconds)
    (141/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089794064 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183047556 seconds)
    (143/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.07643298 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117875024 seconds)
    (145/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098195543 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110558489 seconds)
    (147/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.128657118 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.185597055 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109286018 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066888857 seconds)
    (151/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075893972 seconds)
    (152/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.100127306 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086306425 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108847843 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086208228 seconds)
    (156/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090354857 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.15956401 seconds)
    (158/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169775842 seconds)
    (159/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109379815 seconds)
    (160/286) benchmarking ("sort", Int8, false)...
    done (took 0.187249166 seconds)
    (161/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094527741 seconds)
    (162/286) benchmarking ("sort", BigInt, true)...
    done (took 0.231363085 seconds)
    (163/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.092149066 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085640245 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168518392 seconds)
    (166/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.141242218 seconds)
    (167/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067664012 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092980175 seconds)
    (169/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094174432 seconds)
    (170/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100794131 seconds)
    (171/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122153156 seconds)
    (172/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066224431 seconds)
    (173/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089388817 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099443551 seconds)
    (175/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119845551 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095697646 seconds)
    (177/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171498825 seconds)
    (178/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.185297325 seconds)
    (179/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06736358 seconds)
    (180/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066536151 seconds)
    (181/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.152760191 seconds)
    (182/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136800093 seconds)
    (183/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.111615704 seconds)
    (184/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174480304 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.220280549 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.10908688 seconds)
    (187/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08957847 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11092108 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110006879 seconds)
    (190/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119658711 seconds)
    (191/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068881231 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161421405 seconds)
    (193/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.185761199 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096408078 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117697003 seconds)
    (196/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.126981981 seconds)
    (197/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090148193 seconds)
    (198/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067491302 seconds)
    (199/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083548764 seconds)
    (200/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187770269 seconds)
    (201/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136758161 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135821918 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092637097 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109018154 seconds)
    (205/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.150603825 seconds)
    (206/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.098931514 seconds)
    (207/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093221601 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108015892 seconds)
    (209/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087551177 seconds)
    (210/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118147247 seconds)
    (211/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092930549 seconds)
    (212/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11127905 seconds)
    (213/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087797362 seconds)
    (214/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.191691396 seconds)
    (215/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.325186087 seconds)
    (216/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066878173 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06583381 seconds)
    (218/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089625111 seconds)
    (219/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08941384 seconds)
    (220/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09056416 seconds)
    (221/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094429787 seconds)
    (222/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.106228974 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068379823 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087495255 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.092400713 seconds)
    (226/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088408639 seconds)
    (227/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090459958 seconds)
    (228/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066134554 seconds)
    (229/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066354111 seconds)
    (230/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119355846 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087174492 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125476918 seconds)
    (233/286) benchmarking ("sort", Float32, false)...
    done (took 0.173861616 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086579799 seconds)
    (235/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09219562 seconds)
    (236/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100084921 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109564544 seconds)
    (238/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067736504 seconds)
    (239/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.065910956 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109338697 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11539751 seconds)
    (242/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077650066 seconds)
    (243/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086893825 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117366209 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.162711961 seconds)
    (246/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092904482 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109252751 seconds)
    (248/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.167165337 seconds)
    (249/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067415156 seconds)
    (250/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067802923 seconds)
    (251/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182625803 seconds)
    (252/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.075847837 seconds)
    (253/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09138876 seconds)
    (254/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067032357 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116874511 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109580186 seconds)
    (257/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230752094 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109812857 seconds)
    (259/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067755159 seconds)
    (260/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111003173 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098422858 seconds)
    (262/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.093870669 seconds)
    (263/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06669541 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117513838 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085147718 seconds)
    (266/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134251566 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086233293 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.10788414 seconds)
    (269/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066769346 seconds)
    (270/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066917498 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119110683 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091624104 seconds)
    (273/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091488409 seconds)
    (274/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086145791 seconds)
    (275/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090553711 seconds)
    (276/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.0667025 seconds)
    (277/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066997949 seconds)
    (278/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18133369 seconds)
    (279/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183703016 seconds)
    (280/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067154819 seconds)
    (281/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114575808 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091812518 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.093155862 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086745919 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068476521 seconds)
    (286/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090763667 seconds)
  done (took 35.916399044 seconds)
done (took 36.800043062 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102379753 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147368325 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095558856 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135372218 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123223696 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090650196 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118539994 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097598387 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.1237642 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124452062 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097146891 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093222684 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096530963 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118866324 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096307609 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140454152 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122093274 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093087415 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119482485 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084695834 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117884837 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088632781 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112084925 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069804574 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122614562 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094403798 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117764323 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119119284 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085900971 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10963136 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08938575 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116976236 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086503722 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122713527 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093039202 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118203531 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096078103 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119628092 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110524703 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086002108 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117747503 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086308426 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115765608 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094589531 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115483045 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091777958 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117044014 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098656145 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13962052 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114722969 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093838061 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121236614 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095340796 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116835875 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089990239 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119209019 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091788585 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13864686 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118865392 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092332508 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117779846 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095291792 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115634142 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094372175 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117776436 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119863828 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097576674 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114288596 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097646611 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11577156 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085939808 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11736342 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089536043 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110392393 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095688485 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120510132 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084849007 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.1162971 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116577575 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091755498 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109240331 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088873812 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111584197 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092858797 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111671798 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069097392 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113855565 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09297034 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109145051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094648838 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115222697 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093919688 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111339583 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097516958 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109795162 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092112133 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110512472 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086613354 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112128003 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090642638 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110372326 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089736108 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118413036 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088189248 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116352559 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121930738 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086773181 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116841163 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.0870294 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109050736 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101581566 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121285471 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086338492 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115104631 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085790163 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118096628 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085461406 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110079137 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086801929 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110106089 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092669535 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110112804 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112025042 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093589474 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124504692 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086521542 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114589587 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089802123 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110197423 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092423235 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1098704 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086792196 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112314757 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077796493 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113203978 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087428523 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117575016 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08921104 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119588658 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088604443 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11923048 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091312568 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117679504 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092812729 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109186449 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074190266 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116117713 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089356867 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113526278 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086981288 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.1140481 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087170108 seconds)
done (took 16.840328988 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090447959 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183797299 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149461619 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142812226 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106982535 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11126694 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121078231 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117467998 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113956209 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14183132 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109570244 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130776353 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148034565 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086573423 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111698856 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091362707 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113442809 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102027006 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145841653 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132501463 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162147562 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086596875 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14719626 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135295985 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121418282 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113521397 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110739176 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090409295 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115074542 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102295619 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131772913 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114802156 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087855337 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133400794 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104217551 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119853987 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087331105 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.1194421 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087454821 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111981627 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139130201 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132803744 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091708085 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116997824 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091092805 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114818473 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089108499 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120754951 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097732438 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116348131 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12622832 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155640595 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090524628 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121312665 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086103345 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123217775 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121969149 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089722621 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112494917 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089493113 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111197127 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090773441 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12716938 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141131398 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091547827 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122485435 seconds)
  done (took 8.573557603 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106815983 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140087151 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104400554 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13043544 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111189126 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088173897 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111790648 seconds)
  done (took 1.738308636 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092180355 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133936476 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111560111 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134089121 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131654207 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11204089 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1227607 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088093998 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133634321 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089279417 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133040745 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150436347 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089681475 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121903615 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136757277 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088256475 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136624922 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088344355 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115586879 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136045472 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091949268 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135243206 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090575177 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113252138 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102695072 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11388629 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161090972 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093665881 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115467868 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091409052 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111697379 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150672989 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103429018 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124605048 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088237576 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12982436 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127080776 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087450657 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.124708588 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094249168 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127471443 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089395321 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115171416 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086828797 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11821276 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099006465 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117975635 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114143268 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091257589 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133740046 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089418465 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143073277 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089218949 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118285913 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090243402 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11884664 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098398277 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113967683 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132016957 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089947526 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131529982 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104426964 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126393791 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129677014 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091680359 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126427225 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102875506 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116540851 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090036745 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116259615 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104773732 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112048954 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114984403 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098691135 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116054563 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111952222 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136294553 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089942967 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124787147 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112847471 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088987823 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114126761 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111593214 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11821308 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089218696 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117820297 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091764464 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111911149 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087669815 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118157489 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087453282 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11518272 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093903908 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114877719 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091501891 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129957266 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115304221 seconds)
  done (took 11.775349026 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092150105 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113625853 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091881395 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114274999 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090571658 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114553555 seconds)
  done (took 1.570841566 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119125453 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116556699 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103969335 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119410574 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155683776 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103785651 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129091547 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123121265 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107457607 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126198931 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128533459 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104186954 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13425551 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120789978 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103141376 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12070952 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103763557 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124184647 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125905517 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096683968 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13667495 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12016289 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09671474 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130340074 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117242749 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095094671 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125985233 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102624746 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126974381 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122594757 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095906738 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117395211 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096212504 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125475128 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12954713 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095759545 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12070707 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118463767 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099747961 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11710339 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104138299 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121519604 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126198969 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093552201 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122363795 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119281256 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093042011 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124340495 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10348256 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117482911 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117370646 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095051464 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119499816 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093926751 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122366841 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125420114 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094145553 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128872977 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120529391 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096068988 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118445571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094121311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124040421 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116916395 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104158543 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11766874 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120147975 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096351671 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120801138 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095632224 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118501056 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092950994 seconds)
  done (took 9.173559274 seconds)
done (took 33.773456572 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685106798 seconds)
  done (took 1.637388886 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.820262297 seconds)
  done (took 1.774280896 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.278004942 seconds)
  done (took 17.265903848 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498431846 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.574437567 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993477681 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176262239 seconds)
  done (took 3.196622481 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941559744 seconds)
  done (took 1.915834213 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286887049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233585243 seconds)
  done (took 1.47963341 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770421968 seconds)
  done (took 1.741708915 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.375221914 seconds)
  done (took 2.333644184 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33147292 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182356181 seconds)
  done (took 1.481677676 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549409982 seconds)
  done (took 1.519490254 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.594007754 seconds)
  done (took 11.567978958 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272618055 seconds)
  done (took 1.25686206 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307260602 seconds)
  done (took 1.280942969 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.389469341 seconds)
  done (took 4.363224297 seconds)
done (took 53.782471242 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102726274 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125891974 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101078056 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123300064 seconds)
  done (took 1.421012066 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105332654 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120769203 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10072104 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119791943 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125695513 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095479694 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122529756 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10112542 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119258535 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096582299 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120295374 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118879134 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098689132 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122106883 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09289383 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122901044 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099066576 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12000941 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122375115 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097067758 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117649384 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097519799 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123041341 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093923062 seconds)
  done (took 3.631199317 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104349534 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117767887 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095929667 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117605845 seconds)
  done (took 1.419566842 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103918712 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130209424 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105136142 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124111829 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129356438 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105159538 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115663774 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092241691 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118692218 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.09904059 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114522677 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138008309 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105815635 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123130682 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101769372 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113111261 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090759255 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129755137 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123466364 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100174776 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116816252 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099169799 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114401096 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108445428 seconds)
  done (took 3.68206745 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175198056 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126533347 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137388945 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094923837 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159798792 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139614384 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088327854 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141365501 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087961482 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130398864 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117136087 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133019246 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129080572 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087799312 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112352686 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087808368 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128298797 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127461454 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090314047 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126476653 seconds)
  done (took 3.407241518 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101173313 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117476271 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088557035 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115450755 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098671701 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120268308 seconds)
  done (took 1.62777651 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094581544 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113507048 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09016561 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113674891 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093804524 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113723394 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088049038 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113892033 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089838205 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114068863 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08875194 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112084685 seconds)
  done (took 2.211631769 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.521738365 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.1191551 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120320425 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088830716 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123621493 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090268078 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128830141 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09238898 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140258089 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089204022 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115305863 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090753427 seconds)
  done (took 2.703901825 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240268536 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123739696 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282783711 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363449133 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158832191 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163781355 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277343114 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162116796 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196239887 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148324139 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228208839 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193799417 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150687696 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189892407 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13686346 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143709892 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187132864 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250698977 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151605743 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208821286 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204913359 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165929104 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178242319 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14931832 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111335807 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191411226 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09428517 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128897047 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205081181 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202571472 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186813089 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159964468 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145727517 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234630758 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249823495 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194138188 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276892654 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133065007 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141367724 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164493915 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264599831 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138290128 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231199534 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154490533 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104187232 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219191105 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164881277 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176093182 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144165098 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13801937 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197292326 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236697174 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191547489 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137367438 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297511446 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147340336 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.155866116 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188567308 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252132069 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225517307 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187547725 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12008916 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187097141 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190099364 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184018855 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151189017 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207931704 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145857932 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181246491 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188957748 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164504386 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175738962 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.205938371 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138086079 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169603273 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171945049 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171663306 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258111223 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183779092 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121538059 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167424639 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148104935 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104358793 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192751079 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124077389 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212730101 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142845239 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162501227 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208009104 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158975761 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160227978 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216704786 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182326834 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148345656 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083633925 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152102268 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154183546 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17441702 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138361166 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15736752 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156233528 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.101973258 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193830242 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097894062 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182883912 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117950534 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172385335 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182680209 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126253848 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160771751 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151145508 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148307795 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175947365 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199459832 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13901787 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131844671 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208069109 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175930875 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140368387 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176539552 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199627257 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142967485 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148009815 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221901155 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21515583 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139614521 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201331915 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152005386 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134722569 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132905715 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180137939 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155050157 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160648417 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106336383 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.209485749 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203981416 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125160011 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13747482 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195162685 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132036748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104763845 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15238696 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146174687 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137013725 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142160726 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143299966 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172406116 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178506074 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15366051 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166536595 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149140729 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24853223 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139009878 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124017885 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147897417 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120682316 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191775872 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196399137 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130998116 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229076535 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171259703 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197073661 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167724606 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132795243 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175950487 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12855844 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093847095 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220688917 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166138087 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161420382 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194979655 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220239721 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179903815 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182255058 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164330375 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173178061 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164193756 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157001188 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137739065 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159649654 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156879852 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095466925 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.137732586 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134484442 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148914956 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1415512 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106304085 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223661629 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169809659 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187613895 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15721897 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147957639 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180271758 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128724223 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174397846 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176636462 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144590449 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224211962 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194533357 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184053371 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143807996 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223787623 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094522571 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124158644 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14081096 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169344192 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105802573 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135290338 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161873923 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18168196 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179369488 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195279841 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204455257 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171837749 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21670449 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095285924 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167296811 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182932651 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174806994 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178418151 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139887444 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149201178 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176253567 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153858149 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226103445 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168568847 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199881749 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204354966 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150208267 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131335506 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148380227 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17635019 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151784893 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175936475 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145527712 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111231673 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159073233 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.129743548 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158304029 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20950241 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161044022 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186834464 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148745176 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184750556 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12695801 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160881477 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158625683 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16429765 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081102981 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173881438 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229651566 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14594114 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166362749 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187501977 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130496657 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307346904 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233920979 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195614448 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136057939 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153361078 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158974729 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161380676 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169590837 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176895723 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158790778 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187296092 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158339126 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108164263 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138983888 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150035278 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152887715 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131809131 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146970972 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176998119 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.10958045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216105496 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153752883 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157906261 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171519597 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121369519 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142693506 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150412231 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245330839 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183301591 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238993715 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123234277 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175709598 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23239816 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124406585 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104130483 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133397489 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17925654 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135450166 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19272242 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186196462 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225354418 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180173388 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177162732 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139203824 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118733083 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155673654 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165122781 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201804012 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14740434 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146645865 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201343518 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136628608 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129847913 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165236696 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284733201 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146178863 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194638285 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07977929 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304434708 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102285547 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13189708 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162059189 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206996817 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134752045 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177681963 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170021355 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160975144 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162811071 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148793139 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191223247 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237024072 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201335292 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183283265 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132964129 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156644201 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17432638 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191503744 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154174672 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.137201806 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201304038 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22413906 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198399654 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141931343 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168936529 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167770196 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157566141 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185109948 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134456232 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236461784 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108548148 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219924744 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153096062 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137504367 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174944557 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.186547828 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139138079 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186781287 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182203049 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135480524 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132356277 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1677472 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178682658 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155141202 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126935751 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183127193 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123250093 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197199518 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261053707 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105420621 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15385257 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147467765 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135242144 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155036526 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157056277 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139076096 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.137118416 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227647127 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106444572 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218734568 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202235156 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171954111 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199874057 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117211465 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693683129 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131354062 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193060695 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146925404 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236173151 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15498093 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171109562 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15648024 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165837985 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195465936 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160031813 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230630014 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218616622 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185346103 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106167225 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157013076 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153758864 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143369883 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152142431 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167488484 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158433209 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144607783 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177095261 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162765669 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.13553204 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137934166 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197494412 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14863417 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18542543 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178497676 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138393882 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172325554 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184752321 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132674576 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177811891 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237889179 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141411142 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147594419 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105712049 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149457848 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264220136 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123554386 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18918314 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181853686 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15921166 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167365669 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14572931 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218416056 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155510797 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184973631 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140232091 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157994989 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155173472 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109632249 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130876716 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155109941 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167650498 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148777915 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160184823 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138973581 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217622127 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097001985 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144166936 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282372322 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172460845 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24138327 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136045708 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107049744 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160954183 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150288509 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174492938 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20622143 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110736799 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134030683 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135995058 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128191777 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139058197 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153588 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191522286 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165997903 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207785186 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136280341 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278360234 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14083668 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127524268 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115043253 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13075651 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120373584 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145656396 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154289572 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21757285 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230856661 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147771934 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132828655 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149165913 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097726611 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135352496 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163023584 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163836521 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176103333 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143958046 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080003934 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156669943 seconds)
  done (took 81.877902608 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168012189 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137827146 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151793456 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.245179639 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187267845 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272250914 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20830145 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250756995 seconds)
  done (took 2.689583691 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098786964 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144226093 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155875521 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131993161 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091417971 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118114555 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.338813831 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131595572 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114844947 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120964286 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171576497 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094288636 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.541804126 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090788812 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118648267 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105928739 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092124626 seconds)
  done (took 3.72289344 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.040422976 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.477567824 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.736547986 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.190486167 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157082372 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.116608174 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.679254877 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095384369 seconds)
  done (took 11.568386301 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119600686 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135190384 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122855577 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151173317 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.14116643 seconds)
  done (took 1.749925673 seconds)
done (took 122.683519681 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101930922 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126024438 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097388346 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128477357 seconds)
  done (took 1.514054145 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099875694 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070151284 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099441892 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07468723 seconds)
  done (took 1.414658449 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.18799229 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166770071 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385338966 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074517015 seconds)
  done (took 1.564924104 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118150744 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130658241 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103373542 seconds)
  done (took 1.432492287 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.111073073 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127606617 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102932714 seconds)
  done (took 1.420530374 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110526444 seconds)
  done (took 1.186051994 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.11225183 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135868598 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108295176 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134488742 seconds)
  done (took 1.568986711 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102535695 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125626244 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108701785 seconds)
  done (took 1.412831025 seconds)
done (took 12.940714882 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107763382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.510108025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383916763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142237476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719741158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380219172 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029783817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145174555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163761529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092405483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137927707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671344206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020508643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.466632413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980335046 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467372825 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674763665 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120465082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117934776 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094107533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015062613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091368368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120242857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091650378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701314388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424429419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094335096 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.46546184 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091792271 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125172076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382269586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122075863 seconds)
  done (took 17.213743314 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099835212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171690396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098067161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135373897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122110215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09392705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125006689 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093489969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178208908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120905212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109879332 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120429697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124342669 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094341447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14020316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092836892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124303899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092696574 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120451149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119558971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111686431 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118480868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093798437 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119470027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093348178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133664341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120691887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092829698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119246221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098122802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125523961 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093760641 seconds)
  done (took 4.772881365 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144860934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181831797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126922614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12564801 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166080895 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122119731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196740981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117644173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180748623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121306904 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137010284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091963337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155665905 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120526765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113727929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119644324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095675373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120843062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093260155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122229798 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138266788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092599909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120896608 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093339087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121739725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107079958 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122571053 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119489278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093102772 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125022718 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099323605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121734419 seconds)
  done (took 5.094204665 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101182444 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124244897 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107808927 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137459467 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094583915 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124590535 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096781406 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12255029 seconds)
  done (took 1.990315402 seconds)
done (took 30.150819795 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115579775 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124969864 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107130888 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132161331 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102244894 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130702256 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090531554 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132380842 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132101792 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101410138 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135379959 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091651616 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121545635 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091123253 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132671871 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09668293 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130679856 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101202508 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13557976 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130324664 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094427894 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.1314764 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103244024 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131512222 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103792873 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131400087 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13518496 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099394159 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120377215 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094459861 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.122671968 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103498154 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122676188 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104584556 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124678344 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09731854 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122116446 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093926959 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131478713 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131272372 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.09929691 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13095112 seconds)
  done (took 5.938306704 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113150276 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.137884523 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104240736 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080723987 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115512307 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079896904 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135844112 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078802959 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108227591 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107094275 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073759539 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104822698 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078846823 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099821034 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077219034 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07542424 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106138655 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075415058 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076168464 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104271349 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0796397 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072589512 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107195473 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078303289 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074570851 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.10843772 seconds)
  done (took 3.543649094 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104617245 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13304873 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113469672 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181713042 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159427515 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099296045 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130481909 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137707026 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108496121 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118448663 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096273294 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148359522 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109748629 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127850086 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091907865 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136880533 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134197891 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09445534 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12726785 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111946738 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137230716 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102897382 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140111146 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13090241 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092540931 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121904693 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096863105 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133286338 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097144587 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129870628 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096608228 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123104445 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121700129 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104106301 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125045174 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094104746 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140384252 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101740672 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129192438 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091481733 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127985272 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119644539 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113295171 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160023766 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091915896 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127892591 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094649472 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131967991 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121162444 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110551909 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129589857 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091537792 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124535921 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09051694 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11984773 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107351292 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12238663 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094400407 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131099676 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124797299 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10550279 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123467282 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108561714 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120475106 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099931259 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119602596 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092310261 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120218933 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141796796 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094567202 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159958311 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0928908 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122952483 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100753595 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127852423 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126662161 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093032831 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135688386 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101875937 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12439219 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102549432 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124681248 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095212195 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139648406 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122196647 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094931932 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121755183 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099567621 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122139209 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09435401 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134739958 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092718997 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124676758 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110304007 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120378751 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121157053 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.09991606 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125681052 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091670668 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133457883 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09819134 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122067514 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130065057 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093770322 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122829203 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102622277 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124675251 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091119013 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125500778 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098258407 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122643489 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.0933849 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12430799 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093641608 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130934484 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127857773 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098518686 seconds)
  done (took 14.693593233 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229125099 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214995755 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206117455 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.288596951 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134147605 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114274943 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210977594 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155071904 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12324913 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159282567 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169815872 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179602067 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.137469282 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.208842618 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168311842 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09424195 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141099836 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134395414 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.242946975 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256144163 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14194063 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100801168 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15997855 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158506928 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135743298 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101686252 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138673432 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132874775 seconds)
  done (took 5.744867079 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111324095 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15380117 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098357763 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143595074 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147707174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092229174 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126663215 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093529751 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13421902 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133815001 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092915362 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12794878 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100934322 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.1306082 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121225784 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103397377 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130387789 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094774702 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124539807 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097244937 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132544025 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101454062 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125261509 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119496551 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102117837 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120501266 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085840796 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141455572 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12090661 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114934708 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119045371 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101681382 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136125024 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093854848 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122246934 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095297934 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124967507 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095463159 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124569576 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091675208 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121529322 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0769878 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121156178 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135373941 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100307704 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080591925 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129279753 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127390795 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095012746 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118492526 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096140963 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12403482 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096494679 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128901221 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096023555 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12249684 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096201837 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114586763 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099734297 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123404611 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084314155 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120133137 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098786698 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11614634 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101304251 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126221834 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092276976 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123895625 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096728026 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128353941 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095610071 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128897468 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09139066 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12459141 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095916849 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128133072 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124061915 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092140518 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121434706 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093693055 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074882499 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12203663 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073537951 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12489816 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091287674 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120856975 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095519831 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12841894 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136310145 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094658439 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130817292 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093552883 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12099984 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096116264 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112062924 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096126644 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138574805 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139846061 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094507352 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120463049 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108507336 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124935855 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093275354 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10519558 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102853798 seconds)
  done (took 12.866463766 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137119876 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152130172 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123398552 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112709823 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155604492 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.1561335 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100422243 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129286886 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095155892 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141059311 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09318009 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131472057 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093823382 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137241578 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155353742 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103106114 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124386531 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108146112 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126463562 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167381085 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110951684 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141644788 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110667531 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122936306 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127109169 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110548497 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159351618 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107370974 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136536772 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140443314 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108431133 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159476272 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142252511 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098410623 seconds)
  done (took 5.442480236 seconds)
done (took 49.312648721 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.226221594 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.406855554 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.185134955 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.097948525 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.189562523 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.188980671 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197858989 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.188891725 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.46814388 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.185140123 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.451781863 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.709781636 seconds)
done (took 59.607745851 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.225060041 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.33369724 seconds)
    (2/2) benchmarking "String"...
    done (took 1.491646753 seconds)
  done (took 3.930150292 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.614726048 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.080210025 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441230656 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.189063236 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.181534214 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485843168 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.762153038 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.447891791 seconds)
  done (took 27.692654159 seconds)
done (took 41.570381769 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.1960392 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.216876094 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.221148536 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.161311777 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.301840553 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.205488889 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.474149639 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.432059558 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.182444549 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179352755 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.198989433 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.206357136 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.194313227 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.537686682 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.180668876 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.195051496 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.221100252 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.709018198 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.56453893 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.2054689 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.194316329 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.250624216 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.181213438 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.183136284 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.219315811 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.178329251 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.178245574 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.19027304 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.240153527 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.178086659 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.277087613 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.643842826 seconds)
  done (took 190.80339014 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.176697836 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.218775522 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.324266848 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.20734434 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.620970699 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.375952082 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.324248615 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.692680561 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.190423204 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.184195918 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.413519644 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.174782581 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.483384103 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.201295249 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.203468822 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.241656822 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.355497302 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.477116851 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.209953764 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.336945782 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.178066549 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.412318201 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.336657867 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.364211741 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.201285693 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.258137144 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.213799852 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.17432699 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.364428104 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.319006657 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.176585648 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.216615242 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.70312282 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.027416551 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.187947919 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.196008783 seconds)
  done (took 148.845878067 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.17478866 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.173814604 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.176091717 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.20555261 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.17808431 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.659183798 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.66044628 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.679331795 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.627537357 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.262134055 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.363080172 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.172547255 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268773431 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.190677225 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.174059469 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.193238963 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220186814 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.174164148 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.177432187 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.660641198 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.191528538 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.272936093 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.353642303 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.189024006 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206466607 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.564766812 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178485409 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204784604 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.420366065 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.499417185 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.221269331 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178498864 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.178245379 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.464089858 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.179150887 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289523001 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.178827334 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205469732 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.180131499 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.45155716 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178882638 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.179052448 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.182840089 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.763064161 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.178701608 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.660766015 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.178618652 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.042970497 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.17943439 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.179506524 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.236374748 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.695858846 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.192506941 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.179079403 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.179277601 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.17900871 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180005184 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.206193541 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.226763708 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.271404622 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.194030232 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.182054984 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207607834 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.177734736 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.181030133 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.241081638 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193697424 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.442239249 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.236059057 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.291176976 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.664291646 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181773127 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276864657 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296841751 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.180000701 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.181237753 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182574864 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.181371094 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.288415947 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.179956352 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.531192697 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.341049669 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.189420968 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.277961238 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.274522862 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.181246236 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495959082 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.180983212 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.180508042 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901716488 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274913719 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.181647591 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.183847535 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.181619411 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.538780996 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.663336782 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.346492206 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.182451539 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.164630879 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201649197 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.557965622 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.659761604 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.786583884 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.182984934 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292944663 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.344535752 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191953084 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.185428418 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.182496255 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.286539489 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.183724352 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.243013123 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.178179349 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.576568004 seconds)
  done (took 360.662500698 seconds)
done (took 701.418739106 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.771044119 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.765979846 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.873329077 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.761378114 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.729638873 seconds)
  done (took 10.005179326 seconds)
done (took 11.111205691 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.352696912 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.353998318 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.238258665 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.358707708 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.213575352 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.370269776 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.332580976 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.205303605 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.279438432 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.253978104 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.277283795 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231868104 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217981921 seconds)
  done (took 17.79228954 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.480459927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.486997305 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245516476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484917698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222132606 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483372027 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376096294 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.394970722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.384116545 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213790109 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200968507 seconds)
  done (took 16.080498788 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486110393 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.489170423 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.247363799 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487476452 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224725634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.489051423 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376485232 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.386364948 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.394308155 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211275723 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.19900494 seconds)
  done (took 16.098814292 seconds)
done (took 51.08141842 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.196708216 seconds)
  done (took 2.303492982 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.22800918 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.384926907 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.209945659 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.200157948 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.195305092 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.197115035 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.200808325 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.197492613 seconds)
  done (took 10.923926123 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.195476544 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.194606319 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.192163853 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.196537891 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.195274608 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.196002715 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.196772338 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.190832344 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.19502348 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.19373334 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.192611362 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.195770391 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.191970085 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.193750834 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.195905685 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.196724923 seconds)
  done (took 20.222096404 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.194203126 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.194686784 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.191920143 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.194773378 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.194277733 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.194025206 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.195797851 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.19350333 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.195251969 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.192379009 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.19552557 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.194429845 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.195514306 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.193923029 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.192269984 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.195436012 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.193608101 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.193613517 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.197235317 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.19401825 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.195304694 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.194722642 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.19372249 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.195994812 seconds)
  done (took 29.780183452 seconds)
done (took 64.338848458 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.760392297 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.620207088 seconds)
  done (took 6.491566424 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.196627665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.195737273 seconds)
  done (took 3.505695603 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.196829395 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.195206179 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.198023985 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.197697972 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.196557104 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.196272926 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.19786299 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.1971721 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.199069099 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.196969509 seconds)
  done (took 13.082155001 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.197109825 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.195957331 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.19605332 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.198254055 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.19610204 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.193525731 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.199484201 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.198127275 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.200241049 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.199161598 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.201830121 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.196208845 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.197194523 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.19757306 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.200140021 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.197668612 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.197526904 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198082054 seconds)
  done (took 22.673455705 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.19753412 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.198624289 seconds)
  done (took 3.510581371 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.197702845 seconds)
    (2/7) benchmarking "second"...
    done (took 1.197693892 seconds)
    (3/7) benchmarking "month"...
    done (took 1.19597981 seconds)
    (4/7) benchmarking "year"...
    done (took 1.195361763 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.196592907 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.195654966 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.197793726 seconds)
  done (took 9.48783514 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.200089817 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.375858569 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.453000505 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.789709366 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.200571418 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.202413392 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.074825413 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.204323502 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20648392 seconds)
  done (took 13.820878285 seconds)
done (took 73.683035975 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.173029595 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.206668576 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.307501155 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.197947216 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.225087322 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.536041142 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.218080561 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.327835387 seconds)
done (took 37.30960759 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.213493191 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.181822541 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.819313529 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.17683885 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.162720904 seconds)
  done (took 18.457108322 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.11749144 seconds)
    (2/2) benchmarking "read"...
    done (took 1.527309032 seconds)
  done (took 4.758594316 seconds)
done (took 30.54579556 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202505294 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.199858332 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.201826935 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.197866758 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.198283845 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.200721107 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.200271819 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.198544653 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.201715765 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.20090035 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.202258005 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.202112606 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.202239476 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202374331 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199745657 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198355862 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204886868 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.200837757 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200311158 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.204479727 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202744691 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203718357 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.199268784 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.199722781 seconds)
  done (took 29.939666313 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.202433378 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.202257877 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.20332342 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.202510582 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201375502 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.201874512 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.202933914 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.200799354 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.203884212 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.205732247 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199385669 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.201099059 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.203218652 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.200905322 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204239362 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.203204608 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.20661132 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202357909 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203520996 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.201530473 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.204112525 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201388648 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.202863073 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204169842 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.201721485 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201803366 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.204262595 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.204722211 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205114572 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.201529795 seconds)
  done (took 37.203495076 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.207885045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.21080304 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.204647601 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.204546015 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.204402167 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.204647858 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.204248113 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.204019338 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.204336022 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.204117908 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.204620087 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.203606007 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.204871843 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.204609163 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.204412504 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.205046714 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.206322457 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.205684581 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.203666631 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.205208243 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.205104785 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.204459912 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.205272608 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.205064295 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.204802687 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.202527233 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.205756252 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.205023476 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.205248145 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.204866432 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.204340195 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.205726471 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.204750609 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.206340038 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.206557652 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.204656972 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.209260889 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.213057319 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.204616046 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.205441802 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.205371235 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.206495414 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.207772062 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.206310048 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.207062517 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.205997336 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.20456014 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.204991161 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.20633901 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.207489718 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.206388171 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.207958575 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.208035885 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.205879348 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.206164275 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.205870388 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.20644601 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.208190076 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207461756 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.207874538 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.208680668 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.210142554 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.206564732 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.207281043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.206186259 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.208167716 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.206562833 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.207738419 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208305364 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.210188022 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.202087539 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.204165274 seconds)
  done (took 87.952183733 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.205278881 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.20113056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.201372207 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200896323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205639079 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.194644049 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.193051049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19655777 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194202394 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.196874341 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196722066 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.195330045 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193639374 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199294595 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.189228787 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.188120777 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.189908204 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.187433362 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.189162091 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.190848891 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.189664736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.189305831 seconds)
  done (took 27.407862795 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.182649373 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.186241296 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.181601828 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.18496016 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.181999884 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.1844981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.185202108 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.188135884 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184139304 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.179432867 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.180236353 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182448585 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.179088202 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180209038 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.181110944 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.184515376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180244352 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.17854869 seconds)
  done (took 22.384799997 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.180471647 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.17922795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.180557193 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.178383063 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.178510206 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.181956852 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176519207 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.180466969 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.17834344 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.17573985 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.178471607 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177960515 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.179628461 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179797656 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178471188 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.176856998 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.178037977 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175116702 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17833196 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174970316 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.174449195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.179398145 seconds)
  done (took 27.018285075 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.179334662 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.179246752 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.176172108 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.176112288 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.17626403 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.178750788 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.179432959 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.175987949 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.180287939 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.176610574 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.17695533 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.179061224 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.177237858 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.176795272 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.177471385 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176068855 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.179588585 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.176351194 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180287729 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.174807693 seconds)
  done (took 24.647612045 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.180784025 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.1816133 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.181467272 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180669454 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180592216 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.181173499 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.180378838 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.182864096 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.180359819 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.181072486 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.183324917 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.180885451 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18303303 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.181606685 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.18316682 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.181969978 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.182934609 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.183571628 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.183105142 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.182765113 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.185317338 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.181710906 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.181591474 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.183419908 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.18235381 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.182957156 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18423848 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.183071773 seconds)
  done (took 34.19816901 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.182045488 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.182510125 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.180651443 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.179820638 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.180558152 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.180267214 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.181801742 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.181701928 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.182244674 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.180382518 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.18301679 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.181938355 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.184036011 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.182007062 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.183720739 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.184627341 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1838955 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.183193214 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181537858 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181350529 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.183134937 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183559585 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.181816625 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.178937786 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180699396 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.184876237 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.179631159 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.180635203 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.181024777 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.176836474 seconds)
  done (took 36.552303669 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.200067231 seconds)
    (2/2) benchmarking "in"...
    done (took 1.200661845 seconds)
  done (took 3.496450374 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.179266236 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.181224895 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.180884372 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.17806528 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.180226855 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.181474667 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.18015939 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179791847 seconds)
  done (took 10.536298097 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.178107081 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.180565677 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.180257846 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.18156446 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.179287593 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.181144016 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.1849356 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.198479051 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.181931353 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.180765951 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.187586585 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.1886037 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.185088715 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182433598 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.181594094 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184235898 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.18335087 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.180807531 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.179840852 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.184743907 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180916833 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.18286615 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184766106 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.180284948 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.181718228 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.19293767 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.202425309 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.183039878 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.18225066 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.185698258 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.18189622 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.178492322 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.182775246 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.183099143 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.181562765 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.184064235 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.190781597 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.198688468 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.189051282 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200659284 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.184608466 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.180623204 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.184298635 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.182405231 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.184337844 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.183839088 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.18528349 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.179737549 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.183380518 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.185371891 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.18824041 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182112609 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.183066078 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.1864538 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.183473093 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.190799779 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.200373066 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.186744885 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.191893289 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.196121976 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.212809615 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.206566797 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.18547623 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.184353554 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193435344 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.207154092 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19164453 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.199768929 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.181999897 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.184611186 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.192530561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.212236656 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.20688157 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.185952421 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186107959 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.186200379 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182484425 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.180374018 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.189543908 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.201647954 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.181937456 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.181729074 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190654592 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206491339 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.185293202 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.17998715 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.182664583 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.182024163 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.18121246 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192325921 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.196925013 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.184302129 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.181632992 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.184213544 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.185021014 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.183144393 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.181482744 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181751034 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.180349608 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.183533857 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.183551062 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186808598 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.193449678 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.183959439 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.185433643 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.190477901 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.201209985 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182554239 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.190478877 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.182996819 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.185642633 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.184689064 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.188336851 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.17987288 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18534012 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.191453655 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.184281472 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.184702887 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.184953377 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.185620108 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193127614 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.206978658 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.18564127 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.184508215 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.188791915 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.196297825 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.184697894 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.187862378 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.185150435 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.181806953 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.181336651 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.186924026 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.184786677 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.186722818 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184640296 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186333579 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.183480764 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.185457532 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.186761592 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.186203643 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.187448171 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.186372357 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.190737283 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.184468599 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.183320427 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.185608215 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.19085111 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.199922899 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.183960977 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.184047728 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.182206977 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187078226 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.185232147 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.182606665 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.183596172 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181924177 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.183336776 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.184077866 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183739813 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.18327449 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.183296091 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.18227253 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.187892929 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.184282018 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.186413424 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.182767968 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.179992393 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.185898391 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.183869051 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.183270277 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.185255319 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.184417929 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.186764014 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.191382515 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.185563069 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.18480796 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.184403956 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18982525 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184111714 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185156887 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.189700083 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.193134739 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.185459842 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.190882187 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.199990085 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.184550019 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.185775013 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.186301752 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.185100142 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.184062895 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.186881987 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.191340972 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196813535 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.209265575 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.188410165 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.189158216 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.185856325 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.189314912 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.189836817 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.183734984 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.185626711 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.185588758 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186062396 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186674893 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.186149427 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.186314891 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.18541879 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.185053648 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.1873575 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.187205825 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.188727081 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.187679828 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.186259265 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.185334968 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187778931 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.186094823 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.186124185 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.1842353 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.184503129 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.18658974 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.187096704 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.1866559 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.191751346 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.184571663 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.188910578 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.187647569 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.186863963 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.187427062 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.189768812 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189786771 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.187770424 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193087247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.204060344 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.187817722 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194586516 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.203812371 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.186342575 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.190901547 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.189361022 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.1852275 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.18997531 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.194926338 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.187654595 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.189474308 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.187849819 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.188943569 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.189066549 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.194863216 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.203243189 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.188531572 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.188545732 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.190954948 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.186728232 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.189467491 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.188582687 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.189531635 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19130767 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190554931 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.189405934 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.19294334 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.191339476 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.190666778 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.189390949 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192925739 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.197137103 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.19553506 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.189953196 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.190867636 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.189993173 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.195922425 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.192937969 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.192184871 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.190321142 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202488019 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.211255664 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195932997 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.208824583 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.192425336 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195606152 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.207470391 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.193660613 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.188199043 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.191244518 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.190619441 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.191358903 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.189169891 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.190964442 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.192164532 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.192813473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.192434853 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.195129376 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.190198365 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.191563125 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.191625846 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.191762181 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.191111745 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.190747563 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.191323518 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.19322909 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194789103 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.192316895 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.192572348 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.1997212 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.210437085 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.195085066 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.192274748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.19126969 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.190478681 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.193318515 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.190626802 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.194340788 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.199169091 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.195419972 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.201035862 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.193230814 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.202642806 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.192786812 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.195115815 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.201288075 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.191913231 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.191557226 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.19297534 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.19279027 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200694674 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.21030762 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.19488804 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.19886261 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.194983156 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.194847934 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.195944988 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.194442035 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194701041 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.194767471 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.202168232 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.208777562 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.199296919 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.197590711 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.193182997 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.196098347 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.195763793 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.193018835 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199705294 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.195917439 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.197133349 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.196349881 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.194835784 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.197214512 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.196549831 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.196345634 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.193679918 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.194754665 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.202871729 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.211735866 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199803667 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.196846019 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.201973039 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211925904 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.203877275 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.215009353 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.195930963 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.196725557 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.198269568 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.197657015 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.197765851 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.195892321 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.198662664 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.198819458 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.201610976 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.197120238 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.198341043 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.196722898 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.199632599 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.197274868 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.207375891 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219169636 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.199420607 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.201123431 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.193983873 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.199532765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.200220423 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.19927083 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.196271783 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.202756215 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.208353728 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.206305889 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.200490314 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.198578745 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.198928579 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197931 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.199064009 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.199616441 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.198432364 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.198824885 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.198252164 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.200593318 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.201225789 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.198549608 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.199391855 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201468061 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.199914092 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.209548575 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.216447429 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.199828962 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200104462 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.201855818 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.199529093 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.201177209 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.200127867 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198744629 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.20084211 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.201460703 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.208096352 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.207324792 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.203728967 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.200110478 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.199839371 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.201410541 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.200030743 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201952058 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.201171838 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.200467059 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.20114584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.200165343 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.201248618 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.198216717 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.202098502 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.201315292 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.202745259 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.200833788 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.20536296 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.199750541 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.19582457 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.198066893 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199606357 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.197988077 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.200536544 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.206721707 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.218295411 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.208366486 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.208623862 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.204433628 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.200508416 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.202090839 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.208874075 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.199969545 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.202239432 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.200410878 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.200654574 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.200985828 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.203394835 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.201930437 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.206713963 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.217844403 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.20166674 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.20999424 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.22073061 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.202207897 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.201249141 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.204483202 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.200639738 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.198065063 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.199779768 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.200522082 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.206220151 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.219879927 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20205562 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.202690269 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.199987003 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.203652595 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.206366831 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200944723 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.201196662 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.198328338 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.20230756 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200230147 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.201813073 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.19952837 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.200950616 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.201307304 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.204791692 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.208902421 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.200882638 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204216121 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.20319172 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.202994247 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20152572 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.202266531 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.19970561 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.200038978 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.202003056 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200643626 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.203063559 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.205740151 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.203685348 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.204815151 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.201047274 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19957098 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201433602 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.208105776 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.207667853 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.196756724 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.199614996 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.202450942 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.201299565 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.198662452 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.201089161 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.200074173 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.200133326 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.201595768 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.200240357 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198818472 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.202948665 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.215624554 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.215587459 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.201176088 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.19974846 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205288164 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.200990635 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.197073695 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.202494977 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.203211302 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.203763884 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.208521869 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.19984631 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206099276 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218606379 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.201882465 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.205702644 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.202902891 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.208620334 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.204382762 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.201860676 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.201355446 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.20589186 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.21683463 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.201171634 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.210499752 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230013887 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.220531312 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.201494662 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.202775455 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.200753491 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.201852033 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.205040074 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.204328713 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.20280505 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200881863 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.20366815 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.204137461 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.206527815 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.203646139 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.205375123 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.203686982 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.203691158 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.202282113 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.201624833 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.202595799 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.203898593 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.20340193 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.203450303 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.20685412 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.202484161 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.214075473 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.225008909 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.202695885 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.199797641 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.200272386 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.206397532 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.205287196 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.211222783 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.209555811 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.203044964 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.203419619 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.203288466 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202470663 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.20303579 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.205392592 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.204723381 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.204326752 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.201603143 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.214814371 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224810563 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.208001986 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.203375384 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.205169892 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.203977905 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204529402 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205222346 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205048106 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.205061914 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.20608707 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.205444667 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.204500324 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.203757532 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.208418514 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.211276531 seconds)
  done (took 713.449786657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202773612 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202486399 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204211478 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.201503032 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203040343 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202016383 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20327975 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.20393884 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.20338083 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2021839 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.20242671 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204329055 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202428452 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.203625555 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203982815 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203622318 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203612812 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204460769 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20381343 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206053547 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2035917 seconds)
  done (took 26.387027504 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.205653979 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.204541297 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204805629 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207791041 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204258749 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.207372605 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.203892142 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206286995 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206154899 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205157299 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.207500595 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207610621 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.20394896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.204580988 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207123516 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206825596 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.208350927 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203088735 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.207771901 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205548054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2075451 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.205845554 seconds)
  done (took 27.649536465 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.207990482 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.209448284 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.208235618 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.203837867 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.206009719 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.204195151 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.207423559 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.206899467 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.209139588 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.206566733 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.207590315 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.209285633 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.214740451 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.214352863 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.211472216 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.208417038 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.353198171 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.209423633 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.207372453 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.208844693 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.206409814 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.212278749 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.225626289 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.206081058 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.208299323 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.207550742 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.210512557 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.208240028 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.209262313 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.211037354 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.213541657 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.210231561 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.209929528 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.212246554 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.208669679 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.211785327 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.212321488 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.210979119 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.207783852 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.209234709 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.219932942 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.22791237 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.21020237 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.216360439 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.228507297 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.21125429 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.213611418 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.217292366 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.21015154 seconds)
  done (took 60.601692376 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.212643562 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.213031708 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.207535792 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.211546321 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.210817607 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.211122878 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.211898928 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.211121849 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.209781148 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.210835586 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.210679883 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.210606463 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.209400439 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.213154155 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.213657999 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.210482203 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.208322479 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.209002417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.209362798 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207514432 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.207113599 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.21242191 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.213374908 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.210264398 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.214224431 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.209483244 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.208542251 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.213170064 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.211065039 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.210404846 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.213275853 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.214347995 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.212112233 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.210406294 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211624338 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.211869063 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.212404983 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.208642498 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.213165103 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.20983777 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.212429512 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.214208848 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.213921242 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.214185363 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211310108 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.210010929 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.213350454 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.210466607 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.210779513 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.214716217 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.212417299 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.211694815 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214667688 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.211022446 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.215033836 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.213923395 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.21048665 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.212301774 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.213659683 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.21307745 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.212447171 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.215441727 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.211440962 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.214123856 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.214080434 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.213166611 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.212971437 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.215374675 seconds)
  done (took 83.526502836 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213657878 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.213609063 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214459805 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214849415 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.213737093 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.21444262 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.213345419 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.214954918 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.214476847 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213583166 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214077523 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.21751302 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.215884421 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.215761086 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.213742905 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.21379312 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.214029419 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215612158 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.216055364 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215830265 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.215277018 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.216586457 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216321294 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.216709626 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217441894 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.216496632 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216077798 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.216371166 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216513591 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.214941311 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216334621 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.216469543 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.214672733 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215957907 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.215475247 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.216168725 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215682908 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215998621 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.216808815 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.216265713 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.217809159 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216520136 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215254178 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.21719375 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215045046 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.216780905 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.215248796 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.216852621 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.216484491 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.21748044 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.215903028 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216231568 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216558042 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.216113698 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.216838487 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.216352072 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217949025 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215906113 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217023578 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.217931573 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216241512 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.218059165 seconds)
  done (took 76.510675099 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218846023 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217203438 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.21605293 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.216480054 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218119562 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216591243 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217522036 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.219003509 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21796448 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.21919822 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218245 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216339767 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217547619 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220194978 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215684294 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215916009 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218211707 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215705665 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219823221 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216555869 seconds)
  done (took 25.479396904 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.216401499 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.219691466 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.217291742 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217815123 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.21949681 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2166969 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.219969142 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219529083 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21817884 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220709251 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219663628 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220077713 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218673956 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224745908 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.221155983 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.219317764 seconds)
  done (took 20.639240886 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.217197368 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.221805153 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.220217131 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.219999588 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.217707474 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.21771274 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.222248447 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.219350155 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.218260786 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.21996888 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.221754644 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.220889588 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.221099804 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.220706711 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.219242699 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.222148758 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.2204309 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.22044993 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.221728571 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.220901445 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.219533031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.220099399 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.220719695 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.22097344 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.21967763 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.220182324 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.220273264 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.218158901 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.219306818 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.223024337 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.21884343 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.220972534 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.220646002 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.221091851 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.222577299 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.220955266 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.222726902 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.222706186 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.221337168 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.223818948 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.222739859 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.219219962 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.223080142 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.22193524 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.221316265 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.221842693 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.219197393 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.220125104 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.219803244 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.221524379 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.224934573 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.222141717 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.224039151 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.223243607 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.224271017 seconds)
  done (took 68.283952366 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22439906 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22260654 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220221611 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223145368 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.225110382 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.221325974 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22410246 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.223337413 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221273282 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224029085 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222270029 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.225727867 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221385828 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226127539 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222175276 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222269659 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222720407 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.222204975 seconds)
  done (took 23.149153572 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222528442 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225242037 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.226602565 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223244681 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.223875127 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225200097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223153256 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.22433978 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225926591 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223909095 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222720996 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.225619331 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227627547 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.225143349 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22477235 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224757173 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.227546593 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224444004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223881895 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224903946 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228942969 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2270563 seconds)
  done (took 28.08644343 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.226164338 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.226548947 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.225430793 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.241517649 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.242830281 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.246410805 seconds)
  done (took 8.541770655 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231188773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226573722 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.22204687 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226880649 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226185419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223894774 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225287521 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223096667 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227581099 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226278955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22425293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228377223 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226350873 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223601301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226834324 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227898002 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225319126 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226471526 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226685336 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227688129 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226441479 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229077194 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225407797 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225366898 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225938879 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225173939 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228221708 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226599375 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226728297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226873005 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228636282 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226056663 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229019577 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227679185 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231160109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228775161 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226628424 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229625314 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227244903 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22504188 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.229295096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228671595 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229927616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22661328 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229282558 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228517001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228122238 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226650932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226439247 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230985238 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231268942 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226787996 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230088422 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230027391 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229219153 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229878501 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228007432 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22688977 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231306435 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228711347 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229210574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231853367 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228915416 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229871049 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230339039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230182641 seconds)
  done (took 82.185399826 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229573511 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.229723089 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228189663 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2317967 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229958071 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229114806 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22941641 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230851749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228995196 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229253175 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232081742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230096197 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228948601 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229732583 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231467902 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228824874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23077843 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229415089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230884519 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232973345 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228118606 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23006607 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230937247 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232230158 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229086953 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233921458 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230784579 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230864482 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231969861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230252577 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22896994 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231602053 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229110325 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.231220133 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230459592 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230353968 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229583268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229696836 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231083828 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232943183 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229585796 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235538134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231239822 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231220625 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231198629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231018842 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2312646 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231019976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231147359 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231461415 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234193523 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232709282 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231726253 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232356054 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232585781 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231953541 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232540909 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233386214 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231880659 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235500432 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232185723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232211996 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235773715 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232673846 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232822467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232315549 seconds)
  done (took 82.397432887 seconds)
done (took 1669.3416616 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.398186796 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.350600297 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.233647583 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.229070628 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.229451627 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.258365098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.235331075 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.229182986 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.232306579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.234183803 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.233579864 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.416289599 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.287793594 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.227347622 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.235086746 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.328197427 seconds)
  done (took 41.503234782 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.257377555 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.246477673 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.344876635 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.259845658 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.264004299 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.412238775 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.292821886 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.24282419 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.398031145 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.279146743 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.700693932 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.264248304 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.242849147 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.282774786 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.258933712 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.412218449 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.472166816 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.711579002 seconds)
  done (took 28.486825909 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.647451966 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.253812947 seconds)
  done (took 9.051104416 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.258608683 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.246205148 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.24354318 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.242561873 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.233220015 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.243683561 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.241292098 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.246416326 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.567433718 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.357315537 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.245604243 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.251251607 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.25742752 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.243074977 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.240384719 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.276960894 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.394100825 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.239967078 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.242089643 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.248066277 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.243290161 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.332034684 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.281886207 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.242168491 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.356202922 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.572399592 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.246979025 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.251670522 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.376288411 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.242778648 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.243414359 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.243423711 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.245808776 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.851226419 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.751825427 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.253519033 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.261297949 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.253678489 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.242990305 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.405594302 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.245886108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.250837516 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.238998669 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.756881373 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.389447858 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.355217641 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.396959799 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.260203145 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.24632215 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.303723745 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.240171279 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.244976517 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.27239109 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.985670415 seconds)
  done (took 105.765139641 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.240163745 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.627871379 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.405876669 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.259031554 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.839901132 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.917020983 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.2547555 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.503854163 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.27205902 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.237163765 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.523973547 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.719366469 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.257006521 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.241801976 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.270515422 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.328487827 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.240078709 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.964694854 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.254520631 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.239272637 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.72087081 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.239333902 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.240087346 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.400646271 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.277396937 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.678107287 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.511336962 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.673443004 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.258159098 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.234866322 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.679814385 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.259575224 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.293247897 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.235318853 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.49206252 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.57811218 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.574448604 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.260620621 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.28097524 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.234901457 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.26673791 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.673408323 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.578556832 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.257303406 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.259101437 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.687061021 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.255147633 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.241864873 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.246780141 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.436922412 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.105533392 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.242263424 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.512864266 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.243615033 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.529513295 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.296184981 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.32695321 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.708044113 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.258018089 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.297879156 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.291654899 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.243641933 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.237764254 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.243812065 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.247641094 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.566277684 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.608380655 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.245772091 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.571662374 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.692037085 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.25807428 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.743424244 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.031131817 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.269942488 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.286283335 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.244215818 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.760063304 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.714744029 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.293090522 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.238021903 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.559825734 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.25875257 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.508005529 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.25869902 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239037173 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741796408 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.249615124 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.254426563 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.241915439 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.239085771 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.871630668 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.244037529 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.517793314 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.268618132 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.241692554 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.245126608 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.274682182 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.237779842 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.260384792 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.251452142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.74334615 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.261762341 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.37418786 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.260431808 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245192318 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.238090268 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.245242338 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.24447386 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.458405777 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.685987673 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.260783183 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.246380877 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.240347349 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.247224239 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.382218155 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.245126813 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.532262269 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.263593883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.241671073 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.241283229 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.880038662 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.263363832 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.240628813 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.241140257 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.118568128 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.448051555 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.261169883 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.240698813 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.247579158 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.261779876 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.432314011 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.266257547 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.328785383 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.25047731 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.917505357 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.286415399 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.257463663 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.768527622 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.255935818 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.083470942 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.256020741 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.245371539 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.54121889 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.501556576 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.50601865 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.242564915 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.263558796 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919387507 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.268664752 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.380356564 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.263799924 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.357256853 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44397818 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.376546395 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.248284725 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.845743118 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.242714293 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457581615 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.249203746 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.541934042 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.713057214 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.26296246 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.256257913 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925197313 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.971770944 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.903263095 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.246947465 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.509398973 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.191715247 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.713156874 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.249255137 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.247898638 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.687410136 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.251008582 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.251750604 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.250040399 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.25101883 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.396152181 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.422174245 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.863920254 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.253960259 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.682132057 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331587416 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244640335 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.249905375 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.249157163 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.599885821 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34179153 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.250744558 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.265480563 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.251540681 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.25429082 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.703663355 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.070818601 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.250967658 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.401450535 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.855336005 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.267061143 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.252256062 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.849858831 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.505023235 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.73396607 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.301825251 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.538165015 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.26022964 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.286528928 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.882864373 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330893746 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.696055043 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.262836073 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.245662313 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.821678425 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.266492868 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.335641082 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.25150019 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.251113031 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.756315223 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.267521578 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.252946167 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.391210593 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.263355507 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504675173 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.252291886 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.283519532 seconds)
  done (took 1089.050511387 seconds)
done (took 1275.001986166 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.252635021 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.254045651 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.234443757 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.254331436 seconds)
  done (took 26.161215803 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.262184117 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.259026151 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.260298089 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.259399657 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.260056371 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.258860513 seconds)
  done (took 8.728061122 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.283001966 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.254750951 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.254424506 seconds)
  done (took 18.958492579 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.450743585 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.467608828 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.564352197 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.311752792 seconds)
  done (took 9.962722304 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.260806497 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.261009159 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.260704725 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.261936355 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.265152044 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.264341331 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.263453514 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.262124644 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.265726166 seconds)
  done (took 12.533834495 seconds)
done (took 77.510943725 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.331723191 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.300547452 seconds)
    (3/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.234786992 seconds)
    (4/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.731689929 seconds)
    (5/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.284408619 seconds)
    (6/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.601587428 seconds)
    (7/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.269120183 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48894448 seconds)
    (9/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.612510922 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.297629143 seconds)
    (11/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.231771447 seconds)
    (12/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.266023138 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.28314372 seconds)
    (14/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.340426901 seconds)
    (15/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.254065734 seconds)
    (16/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.735337519 seconds)
    (17/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.760838292 seconds)
    (18/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.074395039 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.616782465 seconds)
    (20/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.238503035 seconds)
    (21/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.266618147 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.246221881 seconds)
    (23/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.047272437 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.25221923 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.238237755 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 6.258213331 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.258875901 seconds)
    (28/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.041710899 seconds)
    (29/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.825130541 seconds)
    (30/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.602501639 seconds)
    (31/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.432870096 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.374602703 seconds)
    (33/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.236261763 seconds)
    (34/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.459075155 seconds)
    (35/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.774792891 seconds)
    (36/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.282168154 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.983900883 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.102669147 seconds)
    (39/286) benchmarking ("sort", Float64, true)...
    done (took 6.257619583 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.284172339 seconds)
    (41/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.236795369 seconds)
    (42/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.272809694 seconds)
    (43/286) benchmarking ("sort", Int8, true)...
    done (took 6.258298567 seconds)
    (44/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.264752423 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.067370414 seconds)
    (46/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.029915145 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.897994778 seconds)
    (48/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.681833112 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.370371955 seconds)
    (50/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.258428552 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.366669559 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.321444719 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.516324766 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.792484667 seconds)
    (55/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.021132224 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.663173383 seconds)
    (57/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.621478432 seconds)
    (58/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.338541441 seconds)
    (59/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.34488688 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.315952208 seconds)
    (61/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.240869374 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.308829738 seconds)
    (63/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.974351048 seconds)
    (64/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.36719634 seconds)
    (65/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.238503826 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.11705863 seconds)
    (67/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.472064076 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.994149364 seconds)
    (69/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.193857815 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.667991445 seconds)
    (71/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.392867052 seconds)
    (72/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.408189647 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.376078089 seconds)
    (74/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.261303041 seconds)
    (75/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.394120337 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.242164852 seconds)
    (77/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.263898257 seconds)
    (78/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.248537102 seconds)
    (79/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.310298781 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.62508706 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 5.459625957 seconds)
    (82/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.242813844 seconds)
    (83/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.253219247 seconds)
    (84/286) benchmarking ("sort", BigInt, false)...
    done (took 6.261251908 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.545530783 seconds)
    (86/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.242684338 seconds)
    (87/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.2764877 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.148437897 seconds)
    (89/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.600188063 seconds)
    (90/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.4323899 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.144480639 seconds)
    (92/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.277616444 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.386468174 seconds)
    (94/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.019532243 seconds)
    (95/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.286185285 seconds)
    (96/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.320905886 seconds)
    (97/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.346791036 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.276015515 seconds)
    (99/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.341948217 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.459152776 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.246602445 seconds)
    (102/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.289725093 seconds)
    (103/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.296796305 seconds)
    (104/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.020883256 seconds)
    (105/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.385098912 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.503777197 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 1.77965539 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.302443534 seconds)
    (109/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.149738113 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.541899806 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 6.261292891 seconds)
    (112/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.369853777 seconds)
    (113/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.242782221 seconds)
    (114/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.694268425 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.98430644 seconds)
    (116/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.287832671 seconds)
    (117/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.622356258 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.543692403 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.261927687 seconds)
    (120/286) benchmarking ("sort", Float64, false)...
    done (took 5.539328637 seconds)
    (121/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.983886035 seconds)
    (122/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.290427792 seconds)
    (123/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.287259284 seconds)
    (124/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.344605177 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.273209622 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.36610334 seconds)
    (127/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.243223719 seconds)
    (128/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.374195062 seconds)
    (129/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.243676406 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.988432207 seconds)
    (131/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.833532732 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.290579631 seconds)
    (133/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.442155879 seconds)
    (134/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.278658619 seconds)
    (135/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.982222408 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.104374747 seconds)
    (137/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.363104958 seconds)
    (138/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.396123318 seconds)
    (139/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.327974084 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.158480448 seconds)
    (141/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.391160659 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.281046864 seconds)
    (143/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.52314579 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.288707996 seconds)
    (145/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.273521947 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.274807492 seconds)
    (147/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.527957986 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.245595567 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.890701634 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.455994543 seconds)
    (151/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.663468021 seconds)
    (152/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.650432871 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.614370512 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.685898355 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.518591225 seconds)
    (156/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.264933791 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.33622148 seconds)
    (158/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.261075942 seconds)
    (159/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.088891446 seconds)
    (160/286) benchmarking ("sort", Int8, false)...
    done (took 4.31894496 seconds)
    (161/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.310251717 seconds)
    (162/286) benchmarking ("sort", BigInt, true)...
    done (took 6.270823655 seconds)
    (163/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.279134102 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.162668252 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.248016861 seconds)
    (166/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.44966819 seconds)
    (167/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.250024228 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.318487199 seconds)
    (169/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.265302572 seconds)
    (170/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.980671973 seconds)
    (171/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.332679695 seconds)
    (172/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.935025257 seconds)
    (173/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.264859874 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.353325688 seconds)
    (175/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.351783744 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.30901187 seconds)
    (177/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.425297152 seconds)
    (178/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.252262232 seconds)
    (179/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.245166678 seconds)
    (180/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.617996284 seconds)
    (181/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.492195348 seconds)
    (182/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.325957188 seconds)
    (183/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.528367417 seconds)
    (184/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.248481964 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.359246362 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.340783644 seconds)
    (187/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.374786314 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.284284065 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.28265745 seconds)
    (190/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.27814052 seconds)
    (191/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.249630678 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.302751273 seconds)
    (193/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.727718696 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.910790539 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.477391596 seconds)
    (196/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.656579627 seconds)
    (197/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.054708635 seconds)
    (198/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.838945149 seconds)
    (199/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.755369028 seconds)
    (200/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.366498177 seconds)
    (201/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.2730875 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.66602873 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.292758599 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.393111592 seconds)
    (205/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.249881131 seconds)
    (206/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.622046641 seconds)
    (207/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.355822747 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.309699116 seconds)
    (209/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.290204903 seconds)
    (210/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.294668363 seconds)
    (211/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.294839012 seconds)
    (212/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.391346967 seconds)
    (213/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.269117262 seconds)
    (214/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.27863165 seconds)
    (215/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.270338929 seconds)
    (216/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.269254247 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.463089762 seconds)
    (218/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.27481287 seconds)
    (219/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.350154021 seconds)
    (220/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.500864331 seconds)
    (221/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.296753313 seconds)
    (222/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.954998367 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.279065214 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.284488841 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.25388268 seconds)
    (226/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.396512509 seconds)
    (227/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.253014993 seconds)
    (228/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.265444604 seconds)
    (229/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.677932839 seconds)
    (230/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.294240098 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.288988393 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.589459578 seconds)
    (233/286) benchmarking ("sort", Float32, false)...
    done (took 5.268630382 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.489082565 seconds)
    (235/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.26945433 seconds)
    (236/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.584875666 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.877527672 seconds)
    (238/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.763062109 seconds)
    (239/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.867862246 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.677482508 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.312107371 seconds)
    (242/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.641455458 seconds)
    (243/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.286600111 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.651056031 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.254722134 seconds)
    (246/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.294335176 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.885058062 seconds)
    (248/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.999913516 seconds)
    (249/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.748963155 seconds)
    (250/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.263608937 seconds)
    (251/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.376044947 seconds)
    (252/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.490648574 seconds)
    (253/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.459280789 seconds)
    (254/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.259946498 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.011149914 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.662610667 seconds)
    (257/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.274538833 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.732798744 seconds)
    (259/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.060286284 seconds)
    (260/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.276196174 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.362798024 seconds)
    (262/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.260612724 seconds)
    (263/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.949466408 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.378136891 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.355175129 seconds)
    (266/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.108073163 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.856878303 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.391640553 seconds)
    (269/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.846729467 seconds)
    (270/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.253895343 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.101873506 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.310730069 seconds)
    (273/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.773612208 seconds)
    (274/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.355715658 seconds)
    (275/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.528301122 seconds)
    (276/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.508195082 seconds)
    (277/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.25553241 seconds)
    (278/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.367176012 seconds)
    (279/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.088795376 seconds)
    (280/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.270180966 seconds)
    (281/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.291588673 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.383008307 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.256274642 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.117201279 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.279243305 seconds)
    (286/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.708205631 seconds)
  done (took 914.400067654 seconds)
done (took 915.569991831 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.307886164 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303338727 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.285969745 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.306320087 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.397117427 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.308808165 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.296886324 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.287985776 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.333605001 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.335605548 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.284786666 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.30895885 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.285825461 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.285292603 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.285655041 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300474128 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.29331255 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.286951908 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.304981526 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.294566237 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.303715938 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.283878645 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.334419987 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.309286778 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.290862087 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.290281141 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.291261933 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.305945618 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.397877908 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.287689652 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.289488993 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.298582064 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.292711682 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.286403849 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.282209574 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.305488214 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.299356163 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.296918304 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.290413153 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.31970363 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.65922634 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.29703846 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.289210891 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.288065702 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.288263199 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.291692886 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.289264834 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.293308507 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301700856 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304052713 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.651191908 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.310119134 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.289507863 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.288693356 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.300519305 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.287388584 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.29171016 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30590655 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.308960069 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306477456 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.279245178 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.295340084 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.292215934 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.305714096 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.295820491 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.689259552 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.293855342 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.292615573 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.673839646 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.304800676 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.721553968 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.311836041 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.290665415 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.304917329 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.320541297 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.295192836 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.287494848 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.288083504 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.296833453 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.289089352 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.300051001 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303680144 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.296286274 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.291172407 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307046324 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.313859336 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.300305185 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.289920028 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.302233375 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.310259556 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.296401184 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.303244653 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.293278427 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.288466793 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.301998681 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.295000926 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.292082333 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.294129937 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.296959115 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.303245005 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.679498045 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.32355423 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.289643257 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.28905376 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.290347233 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.304326568 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.677622708 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.305900251 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.315566504 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.339722857 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.294804003 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.28679782 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.296699293 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310670559 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.304227753 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.296539432 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.289517193 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.288897263 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.688006384 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.322783931 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.296160711 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.293007783 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311650048 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.296673044 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.291255821 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.303926894 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.296205919 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308501335 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.412883683 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.303858393 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.325122713 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.289843467 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.297740163 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.319345514 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310111515 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.325431416 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.296015043 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309897193 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.306399707 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.291435568 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.305061971 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.304161104 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.29527521 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299800206 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.288180072 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.318408538 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307599564 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307703701 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.315275281 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.413991578 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.289918304 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.293738637 seconds)
done (took 218.216116668 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.355107997 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.289093279 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.384902366 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.288950589 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.391943583 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.390170685 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.288773029 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.288606196 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.288993199 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.669860435 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.29081577 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.289196078 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.285309462 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.29167306 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.376147757 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.291878663 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.290215473 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.634026999 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.293676972 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.361551584 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.29016087 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.290970097 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.291406661 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.675450119 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.287404688 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.296159224 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.363779249 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.293345756 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.637597433 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.282466101 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.289059987 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.636879303 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.38183453 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.308410855 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.301538221 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.297317387 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.394400372 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.311532387 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.377350775 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.375185263 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.388533546 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.331181088 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.286856806 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.290976732 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.296222536 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.293391056 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.292463511 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.321967527 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.289170382 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.293039382 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.635656756 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.3052694 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.303327928 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.293718033 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.293234396 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.314121255 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.291964454 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.294264264 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.384235936 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.297319504 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.356311383 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.676176259 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.676112227 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.293306658 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.293715459 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.293374241 seconds)
  done (took 145.705007582 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.361082415 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.368306025 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.406889309 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.311763623 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.344503991 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.412046725 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.311823414 seconds)
  done (took 10.715172133 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.303285754 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.296806785 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.345215271 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.345420052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.297011708 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.47682155 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.297168857 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.308037975 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.294286815 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.350173309 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.298705312 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.297030586 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.306146767 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.296164288 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.345495379 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.3081006 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.410775023 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.297970957 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.296531889 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.44783536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294785798 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.304061971 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.349335983 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.305799508 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.298459377 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.302482462 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.103600299 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295366572 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292871397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.296859385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292666356 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.373864861 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.297416649 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.297693646 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.29178118 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409712823 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.299372153 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.295612226 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.298051219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.298092253 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.299869395 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.29726374 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.298024978 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.295723354 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.298251573 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.321312985 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.300794102 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.296871951 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.298898017 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.300001376 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.34890902 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.300237772 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.297041405 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.29490403 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.354371684 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307427935 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.300848533 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.297293429 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.301208075 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296973774 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.449617298 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352042739 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.299185142 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.3486797 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.302588984 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.30124514 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.300440373 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.300605272 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353912737 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.300677593 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.348258821 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.298706378 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.4891549 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.323027288 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.301657704 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.303520841 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.305500689 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.298322288 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.29872148 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.306298654 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.298507988 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.301129053 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.30653739 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.296108113 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.297553745 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468179265 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408421413 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.298203382 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.313706478 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.308448017 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.29945214 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.354237791 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.29973447 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.299612151 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353412723 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.415492393 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.355252526 seconds)
  done (took 150.183855775 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.307630342 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.308366338 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3018627 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.318869238 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.302214475 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.301602371 seconds)
  done (took 9.04489505 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.305496659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.302807984 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.300970341 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.302166052 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.301858734 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.303865238 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.300384495 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304038585 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.304905391 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.303972362 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.303294777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.303519068 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.30290658 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.30192926 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.303472456 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.303184538 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.302877089 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.29997689 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.30372122 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30354405 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.399424552 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.303619145 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303794387 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.30380694 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.308373123 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.304899805 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.311922441 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.301652811 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.302607286 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.309362022 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.321568751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.303164899 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.304641679 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.312254272 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.309434388 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.307116692 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.308665813 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.307174969 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.303671789 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.30545784 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.305303549 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304869208 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.305577181 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.307053853 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.306603258 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.309299057 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.309970016 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310892566 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.304942247 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.306343987 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.305813016 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.305249784 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.305442585 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.308045608 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.308598325 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.324565233 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.311822367 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.305042051 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.306672679 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.307228938 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.30696378 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.307819891 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.308873047 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.309513488 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.311444258 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.306879371 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.308543422 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.311163571 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306325727 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.308012253 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.307550625 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.304894001 seconds)
  done (took 96.356192969 seconds)
done (took 413.202748037 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.581312924 seconds)
  done (took 7.789712502 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.305038289 seconds)
  done (took 7.516958828 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.267863696 seconds)
  done (took 21.483559948 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.325728832 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.31331672 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.331098952 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.308806304 seconds)
  done (took 26.489833498 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.46279431 seconds)
  done (took 7.672327349 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.300344942 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.309765221 seconds)
  done (took 13.822209676 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.734659409 seconds)
  done (took 7.944472005 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.675052024 seconds)
  done (took 7.88954453 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.328672171 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.317357742 seconds)
  done (took 14.112268674 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.283951316 seconds)
  done (took 7.495736821 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.16361583 seconds)
  done (took 11.377417316 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.307769205 seconds)
  done (took 7.524478747 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.371028131 seconds)
  done (took 7.584844614 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.107902797 seconds)
  done (took 9.320367752 seconds)
done (took 159.233192408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.303916301 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.306015961 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.304858887 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.307245171 seconds)
  done (took 26.434200971 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.345129966 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.343027579 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.344873895 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.355759818 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.348330466 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.345929026 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.336511639 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.351741772 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.35627423 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.347371744 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.345880185 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.346138568 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.344228428 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.337932795 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.347752745 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.347621256 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.355664419 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.347845576 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.337988993 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.348652953 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.313077156 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.361604099 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.349589818 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.313863576 seconds)
  done (took 33.485873938 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.835202673 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.385838696 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.466843842 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.365778892 seconds)
  done (took 7.266601575 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.363160826 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.364652632 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.378052191 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.416078293 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.443541363 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.375247491 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.33993012 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.334684709 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.318579864 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.368330085 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.444708989 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.383633088 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.458351021 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.314053638 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.495755467 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.313943009 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.314057499 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.367204067 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.418571416 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.430662152 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.315547668 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.365793034 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.369278521 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.382937865 seconds)
  done (took 34.291810035 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.314080714 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.33043509 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.31088275 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.312352436 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.321771004 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.313045947 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.313463312 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.312970328 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.31181104 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.31998516 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.313724082 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.3268277 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.311397523 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.313730847 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.319781926 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.318119012 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.319750323 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.311818368 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.313976204 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.319668943 seconds)
  done (took 27.545543029 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.308718614 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.161963801 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.657518794 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.55981471 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.307633824 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.30772871 seconds)
  done (took 27.519565812 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.380590819 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.52895536 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.3157905 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.658029545 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.750802538 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.330995215 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.315032906 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.549193261 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.853827557 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.840931343 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.369957995 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.381043099 seconds)
  done (took 19.492350228 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.310231815 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.310794825 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.311881416 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.326631228 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.369179767 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.334924359 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.322917711 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.308777759 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.368347708 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.386053243 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.334974964 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.370880922 seconds)
  done (took 37.272926713 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39807687 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351608946 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.204560271 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320155068 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028500616 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.516764636 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368719412 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.006175475 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.327492608 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584712189 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312858665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402877515 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.567394084 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320105006 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314289348 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.260239688 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555390674 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775540748 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312281952 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.214277972 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337177756 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324217917 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.301960596 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.534608516 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542844162 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287994503 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.573333328 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.091854212 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587521212 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326953371 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323384407 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312255334 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590896377 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951600563 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421705045 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513226303 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344776397 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.943894675 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.30443615 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.231449838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316552031 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317345277 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324433176 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313774961 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.248460084 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325679797 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014197496 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330132526 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.026448847 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314353495 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563608853 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410834498 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.316662586 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.884590708 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396939622 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320993537 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.319835393 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406770699 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900902928 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.455123524 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331005573 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.250962526 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320661036 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212640136 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941835683 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.329575222 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.318034262 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319797856 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251497784 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.203566239 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334002022 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463761918 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.334434795 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965664426 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99267918 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.343520687 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250415912 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843782635 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320098889 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.269416579 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538401528 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1001334 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249920292 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.256335402 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.249940338 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995720274 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327636405 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.817178539 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337741864 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042543339 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.533072334 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352684332 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340387422 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537777281 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.193982892 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315914304 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.324986425 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445498342 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330792824 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017639222 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263232468 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.315501395 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570500682 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.523319682 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318698974 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.268270768 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799436918 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329364821 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.333133463 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3193888 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.526378382 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.902899003 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351628042 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.463593131 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337475716 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.093344219 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025514255 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325463656 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.323489225 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318357608 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584487268 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.047054738 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.479033841 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386128582 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325262542 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.319947085 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.2294396 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.170269201 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.231534926 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.509163422 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34478132 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.331430362 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.319754899 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263326754 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.311533185 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325914403 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.10000062 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.544862701 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326304578 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596597179 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255198928 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469422425 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326482963 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.536429016 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.493817885 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.342221021 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581621823 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315619146 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338535489 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332783009 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336762584 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422227404 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34322211 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.325114655 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.576915933 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.320994665 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.325076689 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391337605 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.098164698 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3298226 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.326995374 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334554831 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889306608 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313508953 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322851236 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212538813 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.333222605 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390871736 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329073726 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529167237 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.502095859 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340210174 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.329147856 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.329550835 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547267649 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332009512 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.221222809 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401702361 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.784815671 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898085014 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350586565 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.258637658 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.034866595 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.014885982 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323041977 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.5172103 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32470378 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528902024 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354096753 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330771684 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909488491 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342822074 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.250036589 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.329959853 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337701045 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.328633716 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325600369 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.49683318 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.500616393 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335899396 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.335147127 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470061415 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.337973052 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.258571268 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.840473581 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331915646 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327316223 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.100197616 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35997329 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.242982145 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116682825 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596840971 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330774012 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574424955 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.354416547 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.357154335 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.325546079 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330242313 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334327156 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.330135994 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335334588 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.337309893 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.251860769 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.766409246 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885988816 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049344618 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867842698 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.598181998 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.343167416 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.22260117 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.031006463 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272839607 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.98334551 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560984584 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045347801 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281591185 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787548074 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.520292301 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089760351 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580886039 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556043589 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.589035069 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.346369171 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580686589 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541612122 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361404973 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.334319857 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259753805 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.603254997 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874876336 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344770034 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410616525 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0347662 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338143556 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.126047793 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.354631173 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.991491191 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724893646 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.892037048 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.718217166 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328388064 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329847251 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122621128 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343382323 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853521811 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94323389 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350470411 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.795766933 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275897602 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.538344247 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.361011154 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.328965878 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.844206411 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.341349137 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.585995668 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57938365 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266061573 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34461096 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849140309 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.201767107 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.336878726 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332719473 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049418546 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33437855 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622943464 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.340175516 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.513733172 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3506996 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.265948144 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26635942 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.025847485 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342879937 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307586473 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809534751 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.335673516 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35355827 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356788662 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180725251 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586030649 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.344827383 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897602996 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571574198 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334178906 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357619679 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.334105993 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331055932 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.314884175 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.227501145 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568854386 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361482835 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.557382717 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.255418493 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.23111693 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413073472 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545282323 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.214990951 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337545641 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570147404 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.055075984 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.352257132 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031679804 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37261175 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349056031 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.788896195 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337614872 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355899621 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421345261 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54080378 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.362713314 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.342930137 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72943792 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355163463 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337382835 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.346145732 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426507157 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.51725059 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.526058284 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.109967648 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908039623 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072881365 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.927933211 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605186074 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335720818 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336580668 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270066661 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476796087 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.862470023 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60867823 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46371864 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.330743207 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359205287 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347182193 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340047458 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546453772 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609368055 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.205747471 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335684587 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009105148 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.21714017 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345763377 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.546249754 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821455205 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896236928 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438538538 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338888422 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042001435 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62099536 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42708253 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33822684 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92570484 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.339927698 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.003754911 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.345090776 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337186572 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504455724 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58898608 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984832144 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.357317411 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.493652363 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.109727283 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291010374 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595168181 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.784421655 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.544965151 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930194814 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039501786 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601882659 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406273125 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546082281 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.457032816 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484174794 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.335118587 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.236222197 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339702387 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183371021 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.051189919 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.350979883 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916965237 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617045084 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.33910708 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.337262332 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362830845 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.348835859 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.563590744 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021735169 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564641563 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347430775 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347443642 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.911869565 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91791679 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609765949 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276264258 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.337484318 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576322538 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59159827 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364024362 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.811276202 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.050917697 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884706044 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.326776089 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361148323 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340390063 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045400099 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921730418 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.557425046 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829001756 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.000335173 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354758386 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614508315 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.34521286 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344944543 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61499424 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.345405801 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.346650647 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55276188 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.933728376 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10894548 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.351966201 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315302862 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.278925645 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567977848 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386671479 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278108853 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338449221 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.744197282 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361966316 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471374405 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344819813 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.350703793 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342412909 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.114264981 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616333575 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.339946716 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.336393993 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.320012726 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348488769 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433019186 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898323163 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359127615 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.016047203 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.691265155 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599173108 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35055154 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.324458375 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.347311484 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343215062 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058369487 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307118692 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335675372 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887656413 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.341149525 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.352957582 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347282935 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.557518763 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554678576 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342018376 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550636378 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367963068 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358279638 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.244681439 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.11308745 seconds)
  done (took 1650.677271505 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360541983 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.36996889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.358764889 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.399345784 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.389293469 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38680733 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.44352274 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.396486961 seconds)
  done (took 52.35394999 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.354900442 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.497176683 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.367778373 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.355135039 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.353437443 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.353884944 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.796122519 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.362738525 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.345266064 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.354191846 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.357810914 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.346667271 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.981162015 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.354044773 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.356223895 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.341915403 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.347170875 seconds)
  done (took 65.480752504 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.299352697 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.618065315 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.99949379 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.347996315 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.366923413 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.34154677 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.83684275 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.35659999 seconds)
  done (took 58.418611441 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.363626834 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.362270134 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.362260517 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.363050849 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.363497332 seconds)
  done (took 8.064561191 seconds)
done (took 2049.521424717 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.349128224 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.351988694 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.349792441 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.351490601 seconds)
  done (took 6.651516875 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.326060233 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.015248672 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.31882463 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.33394596 seconds)
  done (took 18.246397283 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.360894282 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.363432231 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.01933701 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.935841776 seconds)
  done (took 5.206886957 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.09630458 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.109534058 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.093875334 seconds)
  done (took 7.549715681 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.345285823 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.347335585 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.348964706 seconds)
  done (took 20.293112996 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.634235672 seconds)
  done (took 2.88425297 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.49468627 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.542731268 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.664873132 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.669078017 seconds)
  done (took 7.622285832 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.732849008 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.718665097 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.544207762 seconds)
  done (took 6.247035534 seconds)
done (took 88.676126805 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.086187782 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.715674036 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.552189484 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.099455774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.56514067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.553136919 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.568218216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.069337278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.608525076 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.563175587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.093933699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.565411339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.511818739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.723909533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.511684502 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.723493923 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.576037663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.129882983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.740088327 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.935434936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.562050483 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.695249681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.919342706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.761911258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.577954651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.506152863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.277836344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.722927625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.91922594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.336453466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.50392609 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.109489844 seconds)
  done (took 190.036562855 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.347158743 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.359958452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.341408312 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.357339974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.35547687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.34135363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.360467722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.364368329 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.35565418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.347995612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.341603961 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.341920931 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.343716318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.3438562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.343981085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.342562662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.343254897 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.349934307 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.345472452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.344602199 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.342481357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.35515573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.343075605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.341584465 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.364408619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.358296751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.342659272 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.359094192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.359450869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.360244415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.35217582 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.350326457 seconds)
  done (took 204.454930478 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.355724896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.351140891 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.345373314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.343895101 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.357579727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.358325587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.358971408 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.346592403 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.341337759 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.344537333 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.343906917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.369463946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.346079892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.343558505 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.360821819 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.346394096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.353180675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.344323473 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.346117513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.345299169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.360051304 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.344194877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363324364 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.371409464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.344563884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.347166971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.367337507 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.345378012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.346451332 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.346818364 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.352962415 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.378371626 seconds)
  done (took 204.526680962 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.554292701 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.358519662 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.360224128 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.313415366 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.358668443 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.358031518 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.355122197 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.549233072 seconds)
  done (took 14.465520906 seconds)
done (took 614.735676522 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.597472756 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.312913641 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.550360675 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.37311242 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.113041398 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396722016 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.379682956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.54722043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.269172318 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.544782034 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.558498114 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.387123648 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.706684628 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.371474337 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.633153403 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.476406799 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.21840999 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.33113857 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.686351709 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.862316673 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.629643719 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.821415741 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.561139336 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.258910166 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.710870684 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.819178428 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.041368499 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.209795469 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.387893302 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.700499924 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.957202433 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.292505729 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.441318699 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.428692042 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.488604959 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.467266959 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.253361939 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.428538952 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.569970987 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.593586192 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.866493879 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.087843351 seconds)
  done (took 91.589811163 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.345298804 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.346213888 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.345102071 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.344570981 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.347303109 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.345502616 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.344375498 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.345111637 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.345743259 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.34484428 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.344066146 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.347514402 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.344902774 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.349789965 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.345881218 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.345482324 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.346151016 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.348611509 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.346598071 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.345355416 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.346030404 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.34555216 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.347434328 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.346410265 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.346418271 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.346743952 seconds)
  done (took 36.256955726 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.364098889 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.60891943 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.759860257 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.362359492 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.36381824 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.370865915 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.442679111 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.363688446 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.369563663 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.368729169 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.531958242 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.361006127 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401276698 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.790338852 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.361361599 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.365808525 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.365649999 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.366036348 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.619832102 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369588374 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.46013642 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.359078923 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.442019618 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.371036699 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.389971475 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.36535907 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.372214259 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.929012414 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.376410948 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.534487024 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.1272565 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.439876524 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.869041167 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.789796676 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.125771303 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.369218451 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.366525179 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.537731763 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.359851517 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.368979124 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.443369403 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.369091556 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.778889649 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.009985923 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.379290411 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.3690891 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.948686054 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.548265573 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.598167601 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.368150257 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.801472731 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.363514133 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.370657828 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.371679852 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.606551876 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.367459368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.368529489 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.924180672 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.383038937 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.445917266 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.361278695 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.370328506 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.626290352 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.363465114 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.614357228 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.363795622 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.377500397 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.385952147 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.784383167 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.365757194 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.043350916 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.380987117 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.368063179 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.533925219 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.605885836 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.971830875 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.380654511 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.630527152 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.878244428 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.453029581 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.366258134 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.916959085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.456279264 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.366853886 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.373898245 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.371269873 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.37180554 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.418111916 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.443904255 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.966466029 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.038808901 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.941447157 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.458700418 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.377374333 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.371433136 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.927021406 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.38114995 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.371003878 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.773616892 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.03464317 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.381486829 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.379268661 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.037515238 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.380717641 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.449890018 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.372200207 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.788339931 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.367491153 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.42087255 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.370923125 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.376995558 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.389403008 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.449757573 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.36581286 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.372764253 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.01835153 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.554437171 seconds)
  done (took 180.006895775 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.36656132 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.373034024 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.366617447 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.357913098 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.364757544 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.371521304 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.36573221 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.366897626 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.37019749 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.365359764 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.366584353 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.367373684 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.369428779 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.366232922 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.371791276 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.368920874 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.977053451 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.365484001 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.377495349 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.360856989 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.155565083 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.366819734 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.379674907 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.360883462 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.36805987 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.365802632 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.375292181 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.382054011 seconds)
  done (took 152.982795254 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.374899373 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.927381267 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.387575886 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.502800899 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.3875917 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.372337343 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.499965522 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.429783377 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.389609874 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.373803947 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.372573299 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.671172386 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.374239017 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.881826971 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.561736774 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.507413226 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.878994676 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.387787828 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372817418 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.372295495 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.504329459 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.372333811 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.673942532 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.929590433 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.39322548 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.930061489 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.359583974 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.376175027 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.374894117 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.932187137 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.391621788 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.67417167 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.450163896 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.434281211 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.949292686 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.897953282 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.898173954 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.51881686 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.376755384 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.376902199 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.374144856 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.358650531 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.934816444 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.393797308 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.375805063 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.922245794 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.395550036 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.37844368 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.382833942 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.3741961 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.43493535 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450929887 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.69385657 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936577299 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.468330032 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.389639382 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.506688646 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.741411847 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.380659465 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.884568673 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.361641463 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.9387612 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.394662137 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.362716576 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.37922766 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.382482273 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.521721207 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.505743075 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.884537938 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.395590795 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.883937207 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.537214094 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.378468384 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.375762318 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.376709741 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.938848091 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.901018213 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.537289153 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.508165803 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.566341176 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.362610942 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.378559792 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.362748293 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.452691397 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.380178866 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.940029791 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.900418565 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.396376147 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.379184205 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.379312087 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.380511377 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.550423755 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.954313576 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.470117686 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.876216617 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.695550093 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.680374053 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.381771018 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.43826456 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.391845325 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.681649648 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.380464274 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.435812981 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.801915189 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.681013566 seconds)
  done (took 163.755633752 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.621923333 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.554186431 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.468362026 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.522710791 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.976099995 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.946952104 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.627057087 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.518596111 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.490633412 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.632046981 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.508857533 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.47326214 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.595046049 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.461151159 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.082090308 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.460780076 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.487065079 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.527341478 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.535217204 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.366333243 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.037286218 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.661261367 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.563991596 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.231453623 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.475607858 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.118980874 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.928285048 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.900704782 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.544347059 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.649150351 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.894436139 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.478123176 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.323913602 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.05940276 seconds)
  done (took 66.000392414 seconds)
done (took 691.851640117 seconds)
SAVING RESULT...
DONE!
