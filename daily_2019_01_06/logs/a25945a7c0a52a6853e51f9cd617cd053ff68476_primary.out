cset: moving following pidspec: 25332
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.34406376 seconds)
loading group "string"... done (took 0.553193732 seconds)
loading group "linalg"... done (took 7.598188904 seconds)
loading group "parallel"... done (took 0.171987064 seconds)
loading group "find"... done (took 1.187059397 seconds)
loading group "tuple"... done (took 2.115269196 seconds)
loading group "dates"... done (took 1.341110451 seconds)
loading group "micro"... done (took 0.247830281 seconds)
loading group "io"... done (took 0.983845098 seconds)
loading group "scalar"... done (took 42.223524323 seconds)
loading group "sparse"... done (took 13.832376385 seconds)
loading group "broadcast"... done (took 1.128976069 seconds)
loading group "union"... done (took 14.953017383 seconds)
loading group "simd"... done (took 5.17789621 seconds)
loading group "random"... done (took 10.224236808 seconds)
loading group "problem"... done (took 2.035711948 seconds)
loading group "array"... done (took 23.133982354 seconds)
loading group "misc"... done (took 2.073753271 seconds)
loading group "sort"... done (took 3.473126568 seconds)
loading group "collection"... done (took 19.715862592 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572266541 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156301387 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151582126 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148317196 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196541033 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142766395 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158924254 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096969838 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.936126692 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174165846 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151901086 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525396132 seconds)
done (took 5.14716769 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.215805142 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094450094 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104498356 seconds)
  done (took 0.876458223 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076865464 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145179336 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094619938 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078992907 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095465531 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078614335 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09496311 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078390561 seconds)
  done (took 1.350485702 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08698983 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096948336 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082195212 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096397513 seconds)
  done (took 1.045967179 seconds)
done (took 4.256312426 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.72537646 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275202807 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203663245 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464554692 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197129498 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216482076 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679466058 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341447598 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252709725 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100075641 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135712465 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392121436 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137160724 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683667932 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092282882 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124850396 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177910737 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444863494 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082568081 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109294893 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115456045 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14069471 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127617509 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09025825 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185087985 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082168136 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194634199 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108480723 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08006065 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274361753 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20073484 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689688485 seconds)
  done (took 10.84685253 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111621103 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133630726 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097298479 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137497111 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134171826 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100344495 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083838026 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09630123 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120667397 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176625417 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129688677 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121308616 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09502573 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081987897 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114135979 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243921079 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121623291 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099157243 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100180679 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088774456 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137485442 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114364564 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108834262 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092620925 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166063013 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223194803 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113867665 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127532233 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098910026 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11381813 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142943734 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145183545 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095895994 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080888022 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172586173 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125379225 seconds)
  done (took 5.146827463 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.074892982 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189466055 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12050473 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169162326 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080221307 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14215445 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094329886 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112493195 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255229038 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.18784503 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.489681269 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141521965 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098655679 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099510028 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082556213 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.111960983 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097221926 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.654232749 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122603843 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150441713 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115555267 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101924061 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088707073 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365313184 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095957153 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079827136 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097875875 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066236975 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161570213 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098044041 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.148169791 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120913711 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082507854 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135136796 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212450378 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111958339 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136380091 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096488606 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080659963 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175457851 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104359183 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080468373 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121277834 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13423738 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133725663 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097429771 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081402074 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.197850463 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096827141 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096952802 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94647066 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18035585 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091995682 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097637684 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285085346 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116799219 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101689675 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077551607 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270605092 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189417589 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098505012 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079183629 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097321227 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122206173 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081164485 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382017009 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096901385 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.656714926 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083366864 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107454418 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082210088 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096008957 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103106956 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086524322 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11735599 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079825797 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099002909 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078826472 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096464965 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080589262 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107483864 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.21407824 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097676774 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079509407 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095628041 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114940367 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110567279 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09817514 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095708415 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113048702 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097955952 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097079935 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115892529 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098959848 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106386041 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082359178 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142342443 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095962675 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134528011 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093121558 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076815086 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094104684 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123323075 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098906077 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11310011 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109976637 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098742025 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167450792 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078474992 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095704648 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079668224 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096038983 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080684214 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099092516 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109006287 seconds)
  done (took 22.765460642 seconds)
done (took 40.515921994 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326131164 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104742972 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103426469 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102595704 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100429726 seconds)
  done (took 1.499700626 seconds)
done (took 2.234171549 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283023779 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17295566 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094274143 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164277953 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092781543 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162010098 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158171172 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093671369 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215616159 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093309126 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159061829 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076208095 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092960159 seconds)
  done (took 2.621939052 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093776631 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115560765 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082798084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109544023 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076891221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108829518 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09172121 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114616309 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108454511 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084699375 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092538052 seconds)
  done (took 1.814782189 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093611573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11200377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082815165 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108904524 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07689758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10904435 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092694894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114701392 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108826221 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086116581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092208981 seconds)
  done (took 1.810940072 seconds)
done (took 6.975248881 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090793438 seconds)
  done (took 0.818432786 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.928622954 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.672204851 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112639405 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149578273 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316734156 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172424006 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469490027 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125369551 seconds)
  done (took 10.884808 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.143160037 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085141581 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099536371 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082567209 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101713524 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081702259 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097666469 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097626025 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08486433 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097888004 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085692981 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099634398 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100934049 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083724603 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097451489 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082464259 seconds)
  done (took 2.319344332 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118083292 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116846157 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104046482 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106960722 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086026842 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102700209 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105259969 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087495347 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09979789 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10204293 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089497314 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103655488 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101722966 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079365606 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104576027 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106370271 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085093075 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104205219 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105368555 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088791648 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10468831 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094255236 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086445073 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103968221 seconds)
  done (took 3.229387636 seconds)
done (took 17.984463575 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157996297 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107483704 seconds)
  done (took 1.005108444 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094828731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111036196 seconds)
  done (took 0.949538257 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096418459 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095050404 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119102516 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108044196 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080118198 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09505233 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117123534 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079688848 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09522888 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079827991 seconds)
  done (took 1.712125108 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082627033 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108032805 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099753399 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094638087 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10321619 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09279792 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087431001 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097405205 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107972263 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076365365 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100751258 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111987009 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085481117 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114088624 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103362775 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.0817424 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.099691409 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097427118 seconds)
  done (took 2.491826686 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078964082 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094913399 seconds)
  done (took 0.920946153 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08030001 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092454378 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08006912 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095420035 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09287241 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0761923 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092313834 seconds)
  done (took 1.356524155 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.47706302 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134389735 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257417985 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099627331 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102270983 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.29761891 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095916317 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083750633 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102139549 seconds)
  done (took 2.452527122 seconds)
done (took 11.633004246 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091720752 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114204461 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110425587 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.450593698 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105960046 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096982722 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145184802 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.245252539 seconds)
done (took 2.110316294 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143184089 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.591883192 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.4192313 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228596203 seconds)
  done (took 1.990016396 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401098924 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097841239 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083378124 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082634295 seconds)
  done (took 1.420543546 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07939789 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098575227 seconds)
  done (took 0.932524416 seconds)
done (took 5.246201112 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079999969 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128144119 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07941864 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097307213 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077016427 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09757126 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077454243 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095280749 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076500494 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095670681 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095236864 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.07966426 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095596552 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079427944 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093414197 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07744322 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095878684 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077904276 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092686827 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077646043 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095284536 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076939331 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093517046 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079042345 seconds)
  done (took 2.901626578 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098872323 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098229512 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101965368 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084724417 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101430459 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085725353 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101405278 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096607852 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08477111 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098298768 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099830736 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083923888 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098817905 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084430108 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098830995 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100149439 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085578547 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097076583 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081814992 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100218641 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101179006 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080507222 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101247279 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08442999 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099566611 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100150936 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081855219 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097701661 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101826382 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083905371 seconds)
  done (took 3.572140846 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085175424 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09314179 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077816368 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100867531 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077667387 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096888023 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077501741 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.0951062 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079146167 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094135309 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078632718 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095827694 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077915839 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095778506 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078290448 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098266585 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111001152 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07775387 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094197232 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077971028 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097883846 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076992308 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095149001 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077266097 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093795461 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078051457 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094529485 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077440771 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09509244 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07723712 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097934212 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081080862 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093972181 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084074961 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097584621 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076847504 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097394818 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076399203 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094219621 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093881413 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076946322 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093530558 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077254589 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100118821 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077566918 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096085439 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077575821 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096118491 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078361198 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098139487 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076599215 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094647183 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078587974 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094783988 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081505864 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094494409 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094447468 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07758864 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095547376 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077699363 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094017646 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077678153 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096337538 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078375327 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109724967 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084066496 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094166803 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078851473 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096190105 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08056644 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09620597 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108251093 seconds)
  done (took 7.112509751 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13016122 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124021444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079426525 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096515228 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075353851 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094956726 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08194692 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094363174 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096176553 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083998151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095412377 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078660123 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096629337 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093345917 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095372079 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096012037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083796849 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093155528 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078460725 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098691459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077789648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098553552 seconds)
  done (took 2.805583677 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207022481 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103326973 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141634243 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105883885 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082854721 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105197191 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101022729 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086152068 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101028174 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084236626 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09952593 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100896787 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082557924 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099362439 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.208874845 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084191362 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101081055 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084035771 seconds)
  done (took 2.744156161 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.0921068 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098344124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097961699 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098443066 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097467177 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083607921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103049059 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107095236 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083558187 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097706279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08975967 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100594389 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099823179 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081768574 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099375686 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081693772 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100653015 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08056155 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107284234 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103789424 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086293064 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106923215 seconds)
  done (took 2.866420648 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096679318 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100979544 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116869689 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084662245 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094152061 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079391544 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104624778 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081032787 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105045862 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099641503 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081029245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097121503 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087660649 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097234719 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103187711 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08032873 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099553493 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080923874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100133495 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076437007 seconds)
  done (took 2.636114186 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101095625 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099186394 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098221115 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090787263 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099346155 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081894124 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10758608 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09863622 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082618997 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123248525 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09939328 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082492848 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108243437 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105815756 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099388431 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091302088 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108367414 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107988332 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081624022 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099155251 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12434985 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081739386 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107695101 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099027571 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082301238 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099252777 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098866239 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086903171 seconds)
  done (took 3.518646578 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081123991 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098232289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078359727 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09580603 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078611466 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096144332 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07814352 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097856496 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080556808 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094927512 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08071738 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097522561 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08096499 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098069424 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080413786 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097969323 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08046058 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095784938 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078223811 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096161038 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080667388 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09781076 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080468365 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096351998 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078322111 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098914873 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078587637 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095705323 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08067417 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09564885 seconds)
  done (took 3.42325874 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089491796 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105683266 seconds)
  done (took 0.96915524 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078066718 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113684737 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077680354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102004655 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085363793 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098764331 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106036113 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084684543 seconds)
  done (took 1.520409341 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095207744 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109562708 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082011875 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112452182 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109205407 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097670164 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168653872 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099765332 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104791522 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078998924 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112561602 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080555534 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106148917 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081176209 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105482688 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087570737 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097700178 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104859735 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083762389 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097213435 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082646857 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107960569 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083752273 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098069038 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100436308 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090377028 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111963585 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082216588 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102220498 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105781354 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086879986 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093310955 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080928729 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098899822 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079951937 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108042154 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115590248 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084627988 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107923553 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100230604 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092037522 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094584358 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086388074 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104139015 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108299512 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081881238 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099935512 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076774528 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096859005 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083562928 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094280808 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081292515 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094160328 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088465735 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102706878 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110270394 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08029758 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100949486 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083649721 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103344633 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088905732 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101196831 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10165134 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081546764 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106310301 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085805281 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109668977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094328595 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075338894 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096690151 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09158213 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122700558 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105779564 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081677382 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100297998 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079564992 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103042876 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082494417 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10533922 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105049215 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081967053 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105786436 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089753874 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099065191 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100678693 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089982168 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097342238 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08338045 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097286597 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116012859 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080548431 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097067311 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07980821 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110753976 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085382492 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099640807 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079876141 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107671596 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092707336 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082463784 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100584142 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082140383 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110523062 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105035839 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086862242 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108439672 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106645919 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082481542 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10221239 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07818327 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100819678 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084537605 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106121667 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075616706 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102381385 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082500808 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099935221 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108960144 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080239312 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099771651 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089054937 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105900918 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097594438 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078973126 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10229386 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081741162 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103816288 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090549374 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098022056 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076489077 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094596284 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102562105 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082655483 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102763456 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087032362 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103327017 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076153589 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098331727 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103952306 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090962453 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0995822 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08216261 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105665704 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100385311 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080669758 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106675907 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084382924 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098570373 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086938635 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100766945 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077037172 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103211361 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101960607 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080778538 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103262326 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08496434 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10179479 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099977208 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080397379 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105397994 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08292855 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099208651 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081509193 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098369357 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111095033 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083744539 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094467073 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079526615 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106913127 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079146843 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099494271 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080821126 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101866678 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100352068 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080025473 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099138462 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083199628 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11212974 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104801873 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083475779 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105415979 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093836128 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099538696 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084519295 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099934537 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101065842 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083166928 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109221477 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087655092 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104755022 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102656796 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078539634 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105769605 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08972151 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098847486 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079298005 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09836717 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103047657 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087958013 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103120679 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082652533 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098730127 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082268038 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103830139 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103752286 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081852996 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09952838 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087667868 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099494657 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106727199 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082919506 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.11083219 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08532043 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095649401 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085613296 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098880463 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106322082 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077252592 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097731465 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081160496 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101770134 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080401425 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103598426 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076554013 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107812024 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107231764 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082569963 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09980685 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082623635 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106506508 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083265411 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104798792 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086150279 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106836986 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110924801 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08169907 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103682558 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093086739 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099511006 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093825686 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088166931 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098957237 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081677939 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099318627 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080364118 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103394889 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108969619 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090063878 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095970099 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084933918 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099503216 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081463524 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096081031 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086893476 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103442073 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101632244 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089510867 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102349953 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083378047 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104700602 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082896181 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102401822 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101221419 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085378033 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103797856 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084751244 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099875779 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085325162 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099406638 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080335488 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102509529 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100338054 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.0828328 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106081583 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081937865 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100319706 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085609651 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101009303 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100659685 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082298324 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099446229 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086286473 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101565762 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082604461 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103047918 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077524839 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108392406 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082488729 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107781516 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100690369 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079337441 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107107342 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084994455 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105983585 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100734756 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083648623 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102201601 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083764528 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104019401 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089589782 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098890069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111965344 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091160897 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102174834 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085620659 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10178331 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084389881 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100334217 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082722101 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101295138 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10061021 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08271643 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10517985 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085420453 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101851293 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084295359 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101692516 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08222572 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101611388 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094930384 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082048962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100146963 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083497888 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111561009 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083313395 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102959297 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099131868 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084003069 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100298739 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079874708 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109401844 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110621655 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08357614 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108344159 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081381373 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102196452 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111634383 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07660004 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098125531 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079975 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098438143 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098505263 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102271355 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091568234 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101792985 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100025125 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079700632 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102284501 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080968005 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09514664 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081673062 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105144979 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084849145 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100142508 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083550968 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10428441 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101889219 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092988598 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100822735 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08331898 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101267177 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079105901 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099333437 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081106492 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103354437 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101738872 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081060663 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097832231 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082979494 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101922336 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083881571 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100859541 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083555576 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1075578 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101496718 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086096787 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104445823 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077225058 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103763877 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081963841 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100850199 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100112887 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086334981 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103465426 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084087718 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110234269 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082083926 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102290646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10164127 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080871764 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101182565 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082782016 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100817784 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081708432 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102512698 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090841243 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099888587 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104048971 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082350309 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101406962 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089948052 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101970113 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085598806 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108695764 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104614856 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08448384 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109331848 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08600341 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105494079 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10296591 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084552175 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107183169 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081531897 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107635811 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083287691 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102579686 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102613583 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081023323 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101312627 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083473645 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100372496 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090256564 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10320458 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081612969 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100137205 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081344363 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101599558 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105842713 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090588979 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104038739 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085627452 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096673339 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079473794 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102478524 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099405078 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084021672 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104952299 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088883305 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103406819 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082877903 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100345406 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110695892 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088346688 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10534954 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080691406 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106152578 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083986148 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104008178 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083095155 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101840331 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102832186 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087721041 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103213655 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082488848 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109004666 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08602984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102771899 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102443584 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084542024 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102443998 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078115451 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104197945 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085093748 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107186107 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085724707 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101175829 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112604385 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0828657 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101652775 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086434644 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101644667 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105861933 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07809533 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102634005 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084837685 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103332623 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078157001 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100660692 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080922137 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104110543 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082322123 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096653191 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112132253 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09232722 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104939487 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081996504 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100966789 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078727656 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097099625 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081892594 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103438984 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103322268 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09424505 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100713242 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081987044 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097291067 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083474682 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105111272 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104920991 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08074724 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097001962 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082388302 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104816548 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088478407 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10075391 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082782395 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105519298 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10386525 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081574342 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106274274 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08031398 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105845892 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096417504 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104080034 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102221769 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089874536 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110315325 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084122909 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096889771 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102344977 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086337202 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10183131 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085311096 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102733084 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118268683 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086279182 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100767661 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083404046 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104507207 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083106223 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110553031 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08476252 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10309159 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106903664 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085931153 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112403482 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085654604 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111435076 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105232725 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087676067 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101223447 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08357766 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101790704 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08199682 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103909538 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10356711 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087466861 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.1104939 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082381611 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113730768 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111301838 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088851321 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099460771 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082987931 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10202218 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07877202 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103428026 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081235443 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100688225 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08123313 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101513958 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105129903 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089357384 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103262775 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084922539 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10202609 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077853787 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104038646 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085566369 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102699329 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098426913 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084297396 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103523294 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087339709 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106455869 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084209773 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103969622 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085316793 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103042981 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098362996 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09053663 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100812747 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085778825 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101298046 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08428506 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103579865 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087193196 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107762061 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103948811 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085977819 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114491017 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086007107 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100328617 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080036435 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108229253 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100208799 seconds)
  done (took 57.412139825 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144974957 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079876254 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098106628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07820003 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11112651 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099006316 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079055867 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099151957 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080363919 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101006005 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078708248 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098063363 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107771009 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122935655 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091661304 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102705256 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07844025 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098942156 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097778862 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079888209 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107523983 seconds)
  done (took 2.8577917 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104350167 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119614198 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113928366 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116560581 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089511792 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113457454 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11337365 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115011249 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097936685 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110797694 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117692639 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113497279 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090704497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109723199 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110553407 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092595984 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116655916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108517831 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114201218 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094869924 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11175843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113916926 seconds)
  done (took 3.212778693 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083846191 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102469936 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084383923 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0976528 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083060472 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097711059 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087087916 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10039369 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08619043 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101576038 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082243129 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101580683 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104397701 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078640256 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101657354 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081718489 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149878048 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106639115 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082615545 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104034803 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077898771 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105721378 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098168627 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079391261 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101283895 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087332604 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103065379 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081529811 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.1025951 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08208124 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102963502 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080970158 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104181261 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102902548 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082411886 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101395759 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08315817 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102757893 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078837646 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100695189 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084584386 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098600036 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084109721 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103985171 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08196025 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100465186 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084327198 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102753274 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097798461 seconds)
  done (took 5.441464115 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103274418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16058133 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085838868 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142397153 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119285364 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111766546 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088113198 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141684446 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10248491 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082284072 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121849119 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119625219 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102757378 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089075338 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110923886 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103953465 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085246515 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102319678 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107350311 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083484198 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10870442 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090266206 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119895361 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117541002 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107552409 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083203918 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103226197 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108491276 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097987887 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109266142 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10907052 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089911973 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119659892 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109693986 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083280664 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106071733 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120593859 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10451936 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086691995 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100873931 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085558532 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108923659 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110050727 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101936379 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104893056 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108715146 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08493591 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100244099 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118415987 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086624531 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112151937 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119037212 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107534627 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085065233 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10946793 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119276735 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083977499 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101873794 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087651989 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117972221 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100764027 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088373708 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118404618 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10530046 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110744138 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09853008 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109500058 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107134275 seconds)
  done (took 8.101747463 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092550344 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111014044 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119961652 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119392184 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090320626 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111226449 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110079587 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090403599 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1104775 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114861738 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109554914 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132529231 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085635967 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113932011 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110616925 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091396826 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110140139 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110797854 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090557818 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110466063 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110685401 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119527598 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091421318 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118685802 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140529345 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105184398 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091051842 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111071187 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119561423 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110958718 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122660668 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090424569 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109855445 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121099024 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121913702 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090692294 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102572918 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109602187 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090426037 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110969303 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105310836 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098907526 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111079047 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104954355 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090083477 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110233969 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11942388 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123492736 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113479587 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096051698 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110358036 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120193657 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11018484 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090887031 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11994346 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145918731 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120379691 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119019037 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110734628 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099058695 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120288107 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126949426 seconds)
  done (took 7.626413823 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106312429 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114945533 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116837228 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099280574 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082032008 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108666202 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082562398 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10181271 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113968989 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093883476 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116376073 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108840417 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091656626 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11642386 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10838978 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112469584 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089038931 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109507261 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113889184 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088334858 seconds)
  done (took 2.912836154 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093551818 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123340017 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08541226 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111641531 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107220096 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090264223 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106499632 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107615921 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086296002 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106690899 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095343636 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115491337 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105361042 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091090479 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116045372 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111072541 seconds)
  done (took 2.493731939 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096123761 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116475684 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119472391 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084489139 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104218994 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083259585 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104752144 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100512934 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080679343 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119948191 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084682846 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108070773 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104859112 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082660112 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101149045 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087821814 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101449698 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081606219 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104528895 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11864155 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095227806 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102820531 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1052583 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086914619 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105206462 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090322215 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10502773 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10251939 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083934265 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104887899 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085200339 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112435649 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101386842 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084224099 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102252511 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082398489 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104765139 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085314969 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108188977 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103666548 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083290912 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104001105 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085040991 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105463414 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081050424 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105942502 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101092655 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091657269 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103545396 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085570201 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105077325 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086628668 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106155412 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115253614 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087549679 seconds)
  done (took 6.226215072 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098235133 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108726082 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080667393 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102862079 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087610336 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10717677 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109067555 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087736139 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106304775 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083027117 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107113324 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089067939 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106842647 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108344454 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086285596 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108232709 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081035205 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106511542 seconds)
  done (took 2.612834849 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090240328 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104864036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091995197 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104788911 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084592271 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108178562 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080553208 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104704929 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103332161 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085076432 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104783507 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086862292 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103525923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087259554 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105740316 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084351554 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107867689 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102795865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08515481 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10052 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088140838 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103893604 seconds)
  done (took 2.969689533 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117863662 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125122998 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092926666 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230757375 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103501403 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131964524 seconds)
  done (took 1.653602301 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109426881 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120660887 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105861837 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106695062 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113810247 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086304306 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107456319 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106499199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11760289 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100489756 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107354781 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116387118 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117552487 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095516079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113254273 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113551307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106887799 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087735097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105815899 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127108584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086999672 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117411222 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106333496 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086595955 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107505619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115953566 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117515644 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12024023 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086543866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116735005 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113012074 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086794202 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116897399 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121573595 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108303279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098235533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106896423 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126576744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114361066 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096635275 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109011996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113814897 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096436596 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113052104 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116982651 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10820594 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091899211 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106717361 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10730986 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133792361 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093187334 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116819338 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113834865 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117749073 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096578138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133267273 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121192199 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117132653 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114191549 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12209496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116776815 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093169752 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116339639 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121464066 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11441458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096550654 seconds)
  done (took 8.072505527 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101849217 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12584726 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108652376 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121296618 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096520722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106976564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107337017 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087959116 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106672381 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106621404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15058065 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087705503 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117111433 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116795933 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087467696 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1084515 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107290988 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116700616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087424087 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1341023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107436189 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116956765 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116570217 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096066823 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122945436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113398149 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107427224 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087640279 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108088387 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10700828 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093577618 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107610736 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116379122 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086816401 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117006587 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107712551 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086733911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114569081 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108262829 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113719067 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12769997 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107839204 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10780493 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10063494 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107897391 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107374935 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087504458 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107394426 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107025779 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100900531 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121576322 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121674949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116617463 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10799454 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087030767 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108171738 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107903247 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087492721 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114422554 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116633704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087713448 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134311622 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108546948 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108037908 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117330158 seconds)
  done (took 7.984400073 seconds)
done (took 154.399087573 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213409872 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198529657 seconds)
  done (took 1.266233475 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.086926726 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13600445 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096096906 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168920942 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085258073 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141085132 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137456817 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097976906 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106904056 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085672703 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106796834 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086977731 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171841686 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085996014 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106041207 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107867953 seconds)
  done (took 2.668084794 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113557082 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254864511 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122093565 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105841722 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089990921 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109696048 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08437848 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110714692 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089850672 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104115112 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088368864 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106383541 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084006718 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106716219 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088641216 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108410076 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104451933 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088354019 seconds)
  done (took 2.821107056 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112666125 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146477023 seconds)
  done (took 1.126000346 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241641249 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160805059 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227597331 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.466247037 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.26887329 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365607839 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.19878836 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209866825 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166714461 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209181465 seconds)
  done (took 3.374906848 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119740609 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180401341 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316892266 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156283863 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105658521 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126699781 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155689857 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131055817 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121755731 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101386327 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123883942 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117423049 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1387034 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095350581 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114873426 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117164722 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120385208 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113354753 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115128456 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09595853 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137422675 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084592112 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115678626 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113319875 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09770719 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119595038 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105587825 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085412096 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116634402 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093627577 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112415539 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125327036 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118391258 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.152914551 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121795293 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155744008 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117711149 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09020442 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114526458 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.08963551 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118771427 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118085627 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12468584 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097289045 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106343869 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097359595 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.1061239 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085366055 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114367499 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118437437 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093143749 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113350239 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15307027 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119397997 seconds)
  done (took 7.367636588 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.78252983 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15626251 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090512694 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.873484015 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135815312 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103746394 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.76908661 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111644563 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254116542 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750803565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133082647 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096234796 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226795884 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257336602 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925066154 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286458306 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.635404419 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125962366 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152054539 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152591863 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117547567 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114462576 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131189535 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428039989 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115681253 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088987259 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118177143 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119430675 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159467106 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125690371 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091827385 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199134989 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245621652 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203017309 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093630174 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111130148 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089404974 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190330444 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260542967 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193319307 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179034742 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108527993 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089395211 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121112106 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131969181 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0869511 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183632085 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173974647 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169024943 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113975531 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118949427 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098435472 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120578169 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162767566 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121152165 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307911422 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31390765 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090142577 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121275806 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125520473 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236805332 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123007936 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223743556 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139268652 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189948695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111488877 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779202986 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167878019 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111072392 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094723655 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119407626 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115503359 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09926192 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166564914 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405447925 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122635697 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114500013 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089714788 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225441877 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102741093 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111945136 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160297732 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116608585 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120201281 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102466655 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122441159 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167892315 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249994266 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101264459 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120759888 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114821608 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102966377 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117123714 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210729418 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217198467 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162064627 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231702713 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100323225 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183852018 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167826628 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118077408 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170812677 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118961562 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102058377 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122113996 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215560229 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144408005 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122850309 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093496859 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117862617 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146934126 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127063148 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097060008 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190909793 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454572547 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168075288 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108718068 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12632488 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097289849 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180551503 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095557576 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259699607 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121667708 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168796679 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118332493 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087889099 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120852165 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161894171 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121723185 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098643709 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121910381 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118148293 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234035441 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212654633 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120575271 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219158411 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183003345 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117334342 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170011891 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121085591 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166568023 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119314716 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098400292 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116150706 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769566588 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122760628 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098702603 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116058765 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187780229 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089529688 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124481728 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124486556 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086763733 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804248122 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127163718 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122194688 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101385181 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118184892 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120215581 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095979178 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115691909 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160421735 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228469319 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120717176 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098761938 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124851516 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160405972 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116414012 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125574604 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124406269 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103198703 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121887118 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11443277 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102617847 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188680823 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161866157 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216967696 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572622965 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112301096 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123385196 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204488977 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113297976 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287049026 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119455676 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199550681 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183073743 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099812523 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313230289 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163154116 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185024206 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126428568 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171671497 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108637969 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117731544 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165190055 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110819742 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095855273 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16207089 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124833978 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122535303 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954348194 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090349648 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245864986 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086901184 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16939824 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116526867 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119626171 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.283916613 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089720726 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128193567 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163798242 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115717724 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10207406 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.869909396 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124914077 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099110823 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117700135 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220431368 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162575336 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119571477 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118358279 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097284273 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181962079 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208181128 seconds)
  done (took 43.811987654 seconds)
done (took 63.29548581 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277311664 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217098833 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267839208 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170642208 seconds)
  done (took 1.902994777 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171337223 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154601502 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121418778 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10673445 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151478915 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084491552 seconds)
  done (took 1.678753743 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360545451 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275411644 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246114149 seconds)
  done (took 1.780470303 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291631831 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246766765 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472330796 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326084294 seconds)
  done (took 2.353908557 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20911153 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132981491 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110873785 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102589092 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200540089 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245828498 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142112364 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200328151 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120559143 seconds)
  done (took 2.406986561 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.173563414 seconds)
done (took 11.194866351 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.32605686 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.212946524 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.228156967 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.17882442 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.140035303 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.251622794 seconds)
    (7/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.195695238 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.168895734 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.18428871 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.098387465 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.114456559 seconds)
    (12/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.156676038 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.127199635 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120941546 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.238829318 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.218184375 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116506775 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.15840802 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.249714157 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.149376863 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083470262 seconds)
    (22/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.16832861 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093052447 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11757321 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098838127 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.228450835 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11555629 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.169860898 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.219459705 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102569829 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.218509319 seconds)
    (32/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123310936 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091239822 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.2047261 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107577393 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119318965 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139940311 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116488163 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119772807 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.22005684 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.098557906 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.156330732 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.234408741 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.137151417 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.199619968 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113662788 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117251773 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135631369 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.149784013 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096898559 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.135249593 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09300476 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133851805 seconds)
    (54/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119509766 seconds)
    (55/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112517608 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115986449 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.182264479 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112537337 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118945781 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.215195321 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087371399 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154339306 seconds)
    (63/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114690483 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.214434578 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 0.187619429 seconds)
    (66/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.123075253 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.1789616 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066059657 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.227430559 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117514701 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.16022421 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066538108 seconds)
    (73/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136903557 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092971257 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175316317 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115716846 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096164229 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.219108017 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116265031 seconds)
    (80/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076619376 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.086059117 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.1334254 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.136643721 seconds)
    (84/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.124959623 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091302617 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085730363 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089069197 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156872906 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119386326 seconds)
    (90/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.116126001 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122790614 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116608951 seconds)
    (93/309) benchmarking ("sort", Float32, false)...
    done (took 0.149698983 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.090066455 seconds)
    (95/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095001251 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117864097 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08610516 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170407402 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078054936 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091520239 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067350728 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.206584454 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097304886 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.119498759 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110392165 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094267954 seconds)
    (107/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131799594 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08579955 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116763975 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.135012808 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066574666 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.150340771 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213663552 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112883341 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.139417331 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153090662 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.137614414 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119069851 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086032002 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.190933747 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087032703 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217704823 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.337005152 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178139338 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06662036 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116960761 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100863193 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113518255 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066488071 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144458918 seconds)
    (131/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092036541 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.181948564 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118233426 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065445973 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114059112 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092870067 seconds)
    (137/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104469286 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.188849623 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114763697 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067134657 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116316039 seconds)
    (142/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082076627 seconds)
    (143/309) benchmarking ("sort", Float64, false)...
    done (took 0.171656202 seconds)
    (144/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.181661758 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093339268 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223183466 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175388468 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.191215265 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155224451 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115911517 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085914073 seconds)
    (152/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115783329 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116783879 seconds)
    (154/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067127679 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0875971 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112423919 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067827101 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.192478668 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212781091 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119216511 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111887662 seconds)
    (162/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091310132 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086704734 seconds)
    (164/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075514323 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217299228 seconds)
    (166/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091648091 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15342181 seconds)
    (168/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090236565 seconds)
    (169/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.123037052 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.133552996 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092826547 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.163503634 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124505199 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.076701566 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111311596 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066672558 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13368257 seconds)
    (178/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067390389 seconds)
    (179/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.139370236 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163530171 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110817857 seconds)
    (182/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126052297 seconds)
    (183/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089681235 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112963331 seconds)
    (185/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.122091544 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.1204845 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110603186 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.108671659 seconds)
    (189/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076815764 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117412775 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088023037 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.129859757 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114361392 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.117812811 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085444323 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.123586592 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109955182 seconds)
    (198/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076040362 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177304579 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066087354 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093910965 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.089938136 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084523566 seconds)
    (204/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.098554666 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085452322 seconds)
    (206/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067369388 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.090379314 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087478198 seconds)
    (209/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115923255 seconds)
    (210/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067330015 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109051583 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.139959971 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138061315 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110003726 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066021707 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119268728 seconds)
    (217/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067386381 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094015796 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111219094 seconds)
    (220/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113054769 seconds)
    (221/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066886007 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094829084 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109464966 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.191982948 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.206778283 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067775 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.115848482 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092779777 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087928293 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123433608 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115537018 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085211569 seconds)
    (233/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06837798 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090746615 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086091976 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189164231 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09260041 seconds)
    (238/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066876858 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139033228 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092739052 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145685611 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086161198 seconds)
    (243/309) benchmarking ("sort", BigInt, false)...
    done (took 0.221108944 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.15537885 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087223615 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110580895 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.13823922 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077271765 seconds)
    (249/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112054368 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066407733 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093486433 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.090703735 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066796999 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110368951 seconds)
    (255/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.07754583 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067080396 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112962439 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096960015 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109891446 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094299817 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109922699 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.08741496 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090549157 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095578414 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195034489 seconds)
    (266/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.091825232 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066591939 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08913657 seconds)
    (269/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110778019 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156821522 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.076753782 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.142550082 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191229118 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066834928 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110661515 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112931438 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112197418 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109655576 seconds)
    (279/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.101496024 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095449319 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109382036 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110936237 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110613742 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085279093 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.170473008 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.131534239 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087108353 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109838023 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195469703 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112709711 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119949314 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.159068752 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.181015081 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115752462 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066965633 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140793882 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078569623 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093537398 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156284001 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091955925 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091932008 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111122915 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087576745 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117400085 seconds)
    (305/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066660515 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090095059 seconds)
    (307/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066847792 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224422171 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066809128 seconds)
  done (took 39.787782283 seconds)
done (took 40.689915747 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099237708 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146586761 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096154466 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134700838 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123949932 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091478899 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11890058 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097237495 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123109391 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125538682 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098679318 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093849772 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096884858 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120782418 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096576933 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138833837 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123840469 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093225466 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118819238 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085736699 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118932847 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086969205 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112030893 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069785085 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122006479 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094239119 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116594443 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121011666 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086976008 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111353717 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08984368 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118812204 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086146542 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124978847 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093268866 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118681644 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096192818 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121075045 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088287031 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110836267 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118471843 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0872806 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117498878 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09388451 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117055213 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092751793 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11886294 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099097615 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138618488 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115653779 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095861289 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123888375 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095910683 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120476515 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090860849 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121000238 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091664348 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140520173 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120286228 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091520165 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120562797 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094368689 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116397319 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095355211 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118968881 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121987414 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097150009 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116867797 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09646607 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116484295 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086813179 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121086534 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090141527 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110885746 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096197666 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121357424 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085288727 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116013114 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117017016 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091529494 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110792065 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089266613 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113133175 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092888123 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113734705 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070378006 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114640134 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092959078 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110910223 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096033154 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11745353 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09360554 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113433875 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098331416 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110768174 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092259151 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112443773 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087012139 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113108764 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091301811 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110568386 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089625672 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121545955 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089179224 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117161226 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123169583 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086808358 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11772991 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086062874 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110456366 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101344761 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121353926 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087093444 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118063363 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085930299 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118337983 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086995119 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111679293 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086836948 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11073399 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093976548 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110761731 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089340228 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118009419 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125242243 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08643811 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115238387 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089298746 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111206458 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092576867 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111877217 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086914165 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11364068 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077338372 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113857229 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087737118 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118647566 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089812767 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119705185 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088827303 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120723236 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091972687 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117142654 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093300525 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110176853 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074340653 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117648845 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089125565 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113307571 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087466802 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11398552 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087262611 seconds)
done (took 16.96203112 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087266393 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185125044 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151769701 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142390905 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107570479 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112467093 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12225469 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119890546 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113841034 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14310568 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111041783 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133194272 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148933435 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085916841 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111850763 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090467075 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113487926 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102189662 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146924993 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133042825 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164999484 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086891249 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151684851 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136108018 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121421506 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114215003 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112335069 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090667877 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115873402 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104563665 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132989886 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115244633 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087971887 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134145661 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104557123 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120571179 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087562914 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119251724 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087452439 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112297168 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140220453 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13305453 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092616828 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118216379 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091273587 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114657235 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088712088 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121476523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098653438 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116159956 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12698667 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157054251 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09111747 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122448247 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08631305 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122386196 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121610098 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.08984231 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112119541 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089620491 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111986641 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091342773 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127090188 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141581032 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091606815 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121723432 seconds)
  done (took 8.63410874 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104040581 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139979649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104757113 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129921095 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129614638 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087570227 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113318318 seconds)
  done (took 1.774264935 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087917838 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134759052 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110455884 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135563762 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131485753 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10783714 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122657157 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087488089 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131892384 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088697576 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135007242 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153088366 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089457741 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121952303 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137681366 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088102061 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136949951 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088233822 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116180136 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11274383 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115641916 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135337524 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089878537 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11566138 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102755083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119666384 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162417769 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093686185 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115387264 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091471693 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111649386 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165625318 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102497409 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126879413 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113562657 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103937023 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129761472 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089132583 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130436903 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094077199 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128117568 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089060014 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115012665 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111361147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093225921 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123658086 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090329394 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114611785 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091026343 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133777261 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089849873 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1279825 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08891695 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118312688 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091535824 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119386678 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12311137 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089757295 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133544374 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08990905 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130916301 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105701917 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127368603 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130512502 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090379454 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127869008 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102095759 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118129409 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090463733 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117094655 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130531906 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086989442 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11617507 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099697436 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116319056 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111819315 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137804009 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116060521 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099125051 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11473832 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089791602 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113897879 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112285754 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11828115 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089426147 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118853486 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092422497 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112601475 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088679828 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117504262 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087145283 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115328746 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117327761 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089823486 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117246984 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105629106 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115400638 seconds)
  done (took 11.83000794 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090303827 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116001042 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091331647 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115012955 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09106917 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116622369 seconds)
  done (took 1.597772433 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113860597 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117938353 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103775807 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121702949 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156799213 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104317658 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12949361 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124157206 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107976595 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128060347 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13027965 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104447119 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136623724 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122387603 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10481897 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121779208 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129832278 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099536031 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127965695 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096334125 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137524239 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121518016 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096716131 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132632588 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118826505 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095512087 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126880376 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102870428 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128483351 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12401728 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096070345 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119373025 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096708266 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123129529 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130986283 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095734778 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12149309 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120236897 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100077787 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119145168 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105278592 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121915102 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127577151 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093911154 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124255861 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121760754 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093675897 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126090564 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104680499 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118559914 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119434269 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094633541 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119163393 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094471388 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122226704 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124112183 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093820601 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130200588 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095627034 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122129708 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119045318 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092567157 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124271943 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117917188 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104811617 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119369751 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096728113 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12187287 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121785281 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095459534 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119804929 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092776178 seconds)
  done (took 9.249426236 seconds)
done (took 34.04654662 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686697787 seconds)
  done (took 1.660573064 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.706007711 seconds)
  done (took 1.681729281 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.237829877 seconds)
  done (took 18.213158573 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498621887 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.581999359 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.82209554 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179157188 seconds)
  done (took 3.05573022 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.954898153 seconds)
  done (took 1.94916464 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296565679 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260084481 seconds)
  done (took 1.534929099 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.768664049 seconds)
  done (took 1.754051413 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.359567579 seconds)
  done (took 2.339349054 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332134097 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185146066 seconds)
  done (took 1.506247433 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551114309 seconds)
  done (took 1.54019058 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.809009462 seconds)
  done (took 7.803402942 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259882175 seconds)
  done (took 1.263782549 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301427796 seconds)
  done (took 1.294984318 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.536788287 seconds)
  done (took 4.532099507 seconds)
done (took 51.115185836 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098880057 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127484204 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102540101 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126033469 seconds)
  done (took 1.44311787 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100575775 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122121184 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100372362 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121501499 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126920793 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096092382 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124162406 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101427996 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121244831 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096509893 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121642474 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120761602 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09813385 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12395484 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093622477 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124229258 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099248891 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121624163 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124289555 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096725379 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120408094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097997294 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124507013 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094411293 seconds)
  done (took 3.67070479 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100062695 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119353376 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096377272 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118973515 seconds)
  done (took 1.439093264 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099942078 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142433569 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138778104 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100784838 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142810748 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136260973 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092057049 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117700862 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095018316 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125749332 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090604924 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150106765 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138104389 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100294356 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127449974 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088622134 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117795575 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138017566 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100454781 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125718186 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093382465 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124835687 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.0902193 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138917808 seconds)
  done (took 3.814158809 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170456866 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150748646 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139780514 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094771502 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160094029 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141669523 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088158093 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141272613 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088410448 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131566378 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119154506 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133278348 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128281026 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088857466 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113750431 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088597616 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128281927 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129123559 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091187794 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145652837 seconds)
  done (took 3.479034255 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099737549 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118556555 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088436298 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116663648 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098094549 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121053475 seconds)
  done (took 1.648636891 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090335038 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114825586 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090294883 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114551393 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094021308 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11541799 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088226716 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114741099 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089354148 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11500382 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089637123 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114063999 seconds)
  done (took 2.23546836 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.458653176 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092809082 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121931908 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111942863 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096524964 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115048345 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103152575 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119147201 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14124727 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089322679 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115604187 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091506088 seconds)
  done (took 2.661238129 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233425384 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125831032 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284790016 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192025374 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157484397 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171590506 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151955046 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164257336 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223772841 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158460688 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203362203 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221087871 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125960785 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214077938 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111930578 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144397626 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225699587 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212002753 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153419175 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227197973 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199635134 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16592945 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179772597 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150878026 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138351066 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172081873 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121498412 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104680857 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231324599 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175937789 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214524362 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162150048 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147715934 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236219098 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251480002 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194412936 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188609038 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136363057 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.146836708 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163980287 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26428593 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138427042 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229779972 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154686164 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104437794 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216832844 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167025979 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174415753 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151175207 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139173915 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193633759 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238709387 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191520866 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13817046 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164975148 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158513271 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167987853 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154664215 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250719484 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197562507 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20235854 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094600795 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146951592 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192133563 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182912573 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167914073 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206953179 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147787425 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191521088 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188472984 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163117088 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216079632 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185107586 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138795351 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168079282 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172830453 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17223808 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254393259 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175991091 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121918672 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169163093 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150606304 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132808746 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166527678 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124997861 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235441623 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120954183 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134669324 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16432433 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159747356 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159993606 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198233073 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219303553 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147338038 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084061241 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15473192 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155389107 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190558701 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140642123 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159477259 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163502309 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129676761 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178862645 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097284756 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19989854 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091112773 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172673855 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206398096 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102059166 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158308041 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151441937 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149200573 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174169339 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196507895 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142164096 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134207278 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205932149 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176836984 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149586348 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177530833 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22803864 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144057705 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122198126 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226450298 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243588615 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113389986 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228635434 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156743952 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107174809 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13256013 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178656256 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154505513 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160837066 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135173575 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181033521 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233922097 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098857002 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139861972 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182171072 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133427146 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132237678 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162816745 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148672509 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111967721 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146957935 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152585842 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181484481 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203112665 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151927547 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163755037 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151937483 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252710844 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115410338 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150024409 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149296069 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093876885 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219177292 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198073504 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13123542 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204957428 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198637172 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132057432 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167636495 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136216122 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178467228 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13054842 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093135292 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221103161 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167587723 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161764781 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196884797 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159420101 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181665314 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.20789412 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171852027 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173821499 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164225629 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156926904 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111152404 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1592985 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193674182 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096884564 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144190513 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133851304 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153637955 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116287585 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13336565 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222055294 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169950448 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148922139 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131272632 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150820412 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180962472 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128707305 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174455794 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203407469 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121104192 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225115527 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193828479 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18352919 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144695002 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233936134 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09434232 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125985842 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142453817 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170822916 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106784532 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135285109 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165164532 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180177606 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207583875 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177088226 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167546948 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172709944 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190173618 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123530425 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142245766 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213237192 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17869397 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186313316 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115975976 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148797838 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176692817 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156602319 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255221929 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166940473 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174307687 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233327274 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148967446 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104930702 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151275431 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21288129 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153285062 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17839343 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147387403 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114329916 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161596135 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132970028 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159479469 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210458305 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162550773 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187605002 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151551644 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184934791 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12859111 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166655291 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159151511 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166207895 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081379641 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202247425 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204653931 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14894085 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1686211 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189015141 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131301508 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.177833165 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239100127 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191385914 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137999612 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159766502 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159349595 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165047227 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171948035 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178720135 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160665992 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186402585 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1581203 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136649959 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11296631 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14925897 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151331672 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131938552 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148347798 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174456621 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139756934 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186315497 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161345436 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157841819 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171798272 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150334966 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116418375 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151233467 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241108743 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17510664 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236407192 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122772469 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207400938 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206084447 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126214391 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10476011 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133693332 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178636091 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136534442 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189353518 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.147600803 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16147183 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180888315 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189910764 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140928468 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120349284 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129164781 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201455375 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169084743 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125627735 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157523669 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230626261 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142794314 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104793588 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171723886 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160762755 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147637254 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197173666 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108577113 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121107123 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127792193 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13320936 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164679418 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206122934 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137275277 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184543356 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168017197 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168803377 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164959 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149471094 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148356007 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140298901 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228511284 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1805439 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133550839 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155190053 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177130764 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191225012 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161143701 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140659622 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231323414 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192113331 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196863519 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14319801 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168876197 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167380632 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157467323 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186203952 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135363728 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233431414 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107190876 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227186812 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153875725 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142324597 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176238183 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147266982 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114402273 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215680825 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176142352 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135735217 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106418642 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19647478 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175018657 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157248556 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100549607 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208168474 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097406701 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18957819 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25700273 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135103489 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154422728 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148167371 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10813715 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157522161 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157497949 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141093599 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162955962 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202205742 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1346415 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190446227 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230466762 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169211527 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174114117 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14474842 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693804158 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131701381 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193833935 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154769587 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233333939 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121548556 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198977312 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130161566 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167747045 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222056862 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160969553 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231950511 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192707568 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.203709964 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1049753 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159781551 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161960077 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1442991 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151569049 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16861801 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160994367 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152869244 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176898057 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169490617 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135761596 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13939651 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197673094 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155912533 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183363939 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18003137 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138252092 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172057927 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186025426 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134214633 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177654495 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23664804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142224213 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151507009 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107243166 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154778961 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259844678 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124482349 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200729472 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175339328 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157644623 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166415356 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146738953 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217966022 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158539484 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177229117 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146256054 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160025504 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154607502 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110017192 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130462121 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155613073 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167935401 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148288744 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159547708 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140014542 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214064277 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096291438 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145607505 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161317616 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190760386 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243484903 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107650629 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136025859 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16335888 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151158523 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17493434 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177080388 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135834397 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136659479 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108681307 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157603388 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112849043 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15717053 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157634154 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165371063 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232935814 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109795645 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280142404 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140291198 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152966171 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089460741 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131595526 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15039429 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145622163 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159961205 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12283846 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261039782 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145838576 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132711926 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150202057 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098959468 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135673523 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163478623 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164435902 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176086659 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145647489 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081528535 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158171379 seconds)
  done (took 80.750942123 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162467612 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130904035 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146067769 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201723313 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176629541 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26837853 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21065853 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253120631 seconds)
  done (took 2.634734131 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092704711 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145189042 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.151799641 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133514283 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090886354 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119477003 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.330468411 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131482426 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090923286 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140622403 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147181803 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117383627 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.513125963 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117458615 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117015091 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083054567 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116089774 seconds)
  done (took 3.718450008 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.457704683 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.713211239 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.485643432 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124444762 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.097018566 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134326004 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.722929438 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209981387 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09459046 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.487445311 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.767465826 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179648142 seconds)
  done (took 18.562377988 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098926311 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121876068 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107800355 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135913775 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095734184 seconds)
  done (took 1.649569521 seconds)
done (took 128.696601556 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103742063 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40263972 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072136987 seconds)
  done (took 1.601180183 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107108659 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137096878 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109437396 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136173774 seconds)
  done (took 1.593760257 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097730616 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127760893 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108681289 seconds)
  done (took 1.433272629 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321479822 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189209343 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142186696 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106696257 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129962715 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102204502 seconds)
  done (took 1.435560616 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096833104 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128107125 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097742607 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13014167 seconds)
  done (took 1.553562832 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094656372 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071106284 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100854822 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074963996 seconds)
  done (took 1.437271231 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113165417 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132167062 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104272473 seconds)
  done (took 1.451651344 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129482865 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13853969 seconds)
  done (took 1.369637711 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104813253 seconds)
  done (took 1.202311539 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118072954 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169191998 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189887591 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164565193 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.228168931 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165627882 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141988618 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114191429 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130493093 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144437838 seconds)
  done (took 2.668815484 seconds)
done (took 17.598717282 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103139308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419891107 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413151849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11693903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721326415 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380147737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.076125486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146569849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166437255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092976046 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139808343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670904382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028584574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374008554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9870385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.466281301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702967008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092663253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119442688 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093854085 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.060177658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091773152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121818437 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092318526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703412507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425646649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094909772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.469402281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092454125 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126805503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383023318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1233776 seconds)
  done (took 17.189243355 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095564386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174016096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098486169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139601292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123945136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094175192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124998109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093153452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179275103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12243052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11152692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12124837 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126032821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095267325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142093399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092190515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125462009 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092920661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120704244 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122432407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111700865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121507545 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093975193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122034698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094779974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13576332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122670478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093927409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121254633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098537458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127262523 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09444924 seconds)
  done (took 4.834642295 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140139449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182484898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128832333 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126644949 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168931702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123960858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199112036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118418745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182338607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122626036 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139681036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093214913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156727048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122790407 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114123635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121438091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096937848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122204258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092845434 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122572345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140110501 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092346941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121505816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092615203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123258626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108064574 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123762556 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121680348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093136338 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127287761 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099534612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123856946 seconds)
  done (took 5.152231867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096319409 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12724329 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109048029 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138899548 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095071178 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125732208 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097204148 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124792824 seconds)
  done (took 2.020050355 seconds)
done (took 30.295560901 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111487283 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128497763 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106758752 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135107006 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102777567 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132319879 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091486499 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134393526 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134725758 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101590827 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138864779 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091440319 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123451154 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09169656 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135743707 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097881041 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133694715 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102111606 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134211996 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133682109 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095074111 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134378389 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103437373 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134869595 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104169786 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134529957 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138292324 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099811486 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123500244 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095270036 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125006051 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10439178 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125382553 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105512922 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126949986 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097151167 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124026359 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094689729 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133765199 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13350241 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098714186 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134401445 seconds)
  done (took 6.026884644 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107495827 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14097385 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104885487 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081984718 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116997384 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080934314 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138514851 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079307499 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110997302 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107440744 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074454162 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106764674 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078721875 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102270116 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07731172 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075436099 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109146912 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075904321 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07671561 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106598336 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080135033 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07338825 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108832099 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078598049 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075457684 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110649021 seconds)
  done (took 3.59157243 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099782468 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136114836 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112844853 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184899338 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161905502 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100178689 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13286013 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140562942 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10822605 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121496546 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095650213 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151020296 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110931369 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128917199 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09169647 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136957287 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136630709 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093648163 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128620517 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1134447 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138409546 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10323878 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143585622 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13339798 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091839929 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123316879 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095817757 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135486942 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09700814 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130962367 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096309955 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125537634 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123652591 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104271954 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126408812 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094483252 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141908905 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102623509 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131051165 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092434279 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.125706646 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122077623 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113777249 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167594743 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091275385 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129501629 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100191979 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132213264 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121989819 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111440904 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132170337 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092117423 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125558525 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092215047 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121999674 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10731724 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124006148 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095620819 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131117139 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125071953 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105689258 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12563177 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109094974 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12251116 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100070725 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122177187 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093201557 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120842801 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144012935 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094276098 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162969355 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092789928 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123968826 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102196476 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129254184 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127831027 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092697666 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137954707 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102267727 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125771399 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101653979 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125969889 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095753587 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140361193 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095158646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123761994 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093927482 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127939395 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124939458 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094230398 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135897647 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093612946 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125752275 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111252465 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12179637 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094388921 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129581613 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127108072 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091928196 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135898592 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099060774 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12252772 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139085864 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092760832 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125333417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102300326 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127418923 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092241786 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128068037 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099376708 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123371785 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093775899 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125864602 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093865399 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131668367 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098850685 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127324132 seconds)
  done (took 14.850664074 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228571336 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216869879 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.240558903 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262556202 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13584199 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115598034 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213743742 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156377651 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123953 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161846592 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162734567 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182124428 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.13902238 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180295328 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.140136695 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122647906 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11182839 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164502961 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215471253 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290542806 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11317107 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.1330096 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161714731 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1605825 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106829048 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132716974 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139330717 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104721385 seconds)
  done (took 5.746472639 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107806683 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156882452 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098263399 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143845016 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148707087 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093008973 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127332464 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09443091 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135057723 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136112625 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093410109 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129433868 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100704795 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132803328 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123905228 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103316061 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13361552 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095119019 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12651708 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097574029 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130090635 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101873172 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12653636 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122719321 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102215043 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121924755 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085980861 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141954386 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122398823 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116743784 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121351198 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099528977 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134083582 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094140704 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123945078 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095273156 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125596801 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094891994 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125210436 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09180269 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121736905 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077864252 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122113989 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13625832 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099089512 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079575024 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128783287 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128844754 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094119773 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121120861 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095563056 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125699132 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096952755 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130393773 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098362355 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124087078 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096697796 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116528449 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099292782 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125746117 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084743791 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121892794 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097808363 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118878762 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101005326 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128417672 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091947073 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125670064 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096931614 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129241143 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095418207 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126922055 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091247466 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125696825 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096155118 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127975378 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096908146 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121463821 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122406237 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094109612 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075458963 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123682289 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074609534 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126636076 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09166909 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122989125 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095703041 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12951603 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137274991 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095322578 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132644669 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093690725 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122626262 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096022638 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113611742 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096638472 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138456022 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140815497 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09425226 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121520427 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107014507 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126371763 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092833336 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107002718 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100812489 seconds)
  done (took 12.967814153 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126735969 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152727275 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09548015 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14309773 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155713322 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157600384 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099685648 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130200614 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094133984 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142130956 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093273038 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131430371 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096855585 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136392198 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156774656 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102605464 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125616646 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106947364 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132050127 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169690212 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111511121 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142226479 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107888312 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124156765 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129089874 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110507753 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161841572 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108506702 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136971481 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142665937 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107870432 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161362709 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143579768 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097931001 seconds)
  done (took 5.480678307 seconds)
done (took 49.769299326 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.240635059 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430345382 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.206280157 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.151649891 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.234905914 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.248853107 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.218833531 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.208770083 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.63029662 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.207491915 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.469240569 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.892629327 seconds)
done (took 60.279230694 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.258187674 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.344293167 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471891891 seconds)
  done (took 3.953621425 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.578033712 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.154511975 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.469748672 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.207427959 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.222369602 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492794912 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.899270302 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.582199879 seconds)
  done (took 28.168076996 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.220544282 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.606251969 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.036075291 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.027142369 seconds)
  done (took 19.02922938 seconds)
done (took 61.123627724 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.212732068 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.237955392 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.238708191 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.197063917 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.319950412 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.23964846 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.624462574 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.458108765 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.220344713 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.195793613 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.22979021 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.222203055 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.222441088 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.586968364 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.222711823 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.21644616 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.281900056 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.745983198 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.614289406 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.224673096 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.211859301 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.239946467 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.233978794 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.227457758 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.251306268 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.209651286 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.223805647 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.216316989 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.836127343 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.216461639 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.218167266 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.845168955 seconds)
  done (took 192.581438823 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.210577712 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.304381906 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.394530582 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.251889484 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.68624464 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.414017302 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.366326245 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.762561892 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.231292939 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.239442895 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.545465929 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.211238311 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.586028115 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.245014548 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.217889376 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.313897303 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.405240367 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.565016844 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230806193 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.488547855 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.227339903 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.473367182 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.385059109 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.471568177 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.245489603 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.27573569 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.227932258 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.243154092 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.404880696 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.329195649 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.237929326 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.259602131 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.842410544 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.072355702 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.218943466 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219141288 seconds)
  done (took 150.94570382 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.508625148 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.211126941 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211665703 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21145605 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244195173 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.212014824 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.798726277 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785659087 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.709682627 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.763484508 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276399425 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.468550304 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21131508 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306970599 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.22442981 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.211930841 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.212010876 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.226204786 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255337255 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216894034 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212429116 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781557067 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.224922662 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.317607245 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.234714264 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.213139617 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245486664 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604480948 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213414124 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245079616 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.538300435 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.263524476 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213673659 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.549311795 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.031061891 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328650275 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215572677 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245279568 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.213506949 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486625145 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213493849 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.214424888 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.217043438 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.831117608 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214286286 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.802835523 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218573643 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.152408604 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.213317573 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213940147 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.585536682 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.814285608 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230673147 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213184695 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.215905238 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214764352 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214885866 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.246404495 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.58358752 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.317418002 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.231054059 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21730948 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248016757 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.213998448 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213688609 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.291702602 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.231538369 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.584351223 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293992553 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.444607582 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786190062 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215995439 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310291476 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335948438 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.215732928 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215615807 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214973669 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.215507871 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324395816 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.215785755 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.647326897 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.2214348 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217127889 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276023303 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311724157 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215544302 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.575330507 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222052788 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.216712969 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946253239 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310697646 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.216088321 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.216931084 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.217350022 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.646821499 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788655781 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.449976599 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.219294015 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.602249171 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.221158291 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.215921606 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.216694919 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.666581923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.779646873 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.829222609 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217478259 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326418428 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221791162 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.21905232 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.216905115 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.245675633 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.234651297 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275939737 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21730205 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616402511 seconds)
  done (took 348.472375413 seconds)
done (took 694.647825622 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.896949752 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.889961286 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.996947029 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.883382063 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.862737306 seconds)
  done (took 10.677686478 seconds)
done (took 11.8227014 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408325373 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.412982304 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283323965 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.407640762 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247406525 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426532797 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394631468 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.243761417 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.320100176 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300698001 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322282351 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273110645 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246835734 seconds)
  done (took 18.436292315 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553807931 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.547900074 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282729224 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.540204052 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258659651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557603785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417496897 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430947016 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429746277 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251266989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232290636 seconds)
  done (took 16.652839128 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.53494562 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536494559 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286851538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553768205 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260972627 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540335314 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418266769 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424768558 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43414686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252453907 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23258821 seconds)
  done (took 16.62553583 seconds)
done (took 52.861145639 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.229710852 seconds)
  done (took 2.380302597 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262578468 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.427782684 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.250121261 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.233669482 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.228811137 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231011336 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.233710087 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229582216 seconds)
  done (took 11.24906851 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228974873 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.229436428 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.225750427 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.22617634 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.228308402 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225633764 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226587755 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.226410184 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227792592 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.226634191 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.230128417 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.228922034 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.229882358 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.228986774 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.226422669 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226821356 seconds)
  done (took 20.793278268 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229233874 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22681316 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.227221919 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.227999283 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.227371933 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227249079 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228571961 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227883751 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227575253 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226899957 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.227538498 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227109401 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.2280341 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227011565 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227262206 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22837474 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.227789298 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228122693 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.232719338 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.228707647 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.228534228 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.2272606 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229064336 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.229936739 seconds)
  done (took 30.627820744 seconds)
done (took 66.198966691 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.392028945 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.916888465 seconds)
  done (took 9.461451546 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.229954731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.23017645 seconds)
  done (took 3.61403264 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.230852613 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.230410372 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.229681653 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230244849 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.230795118 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.23090104 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.231015305 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.231020942 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.231870594 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.231971263 seconds)
  done (took 13.461590337 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231835275 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231254127 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.228854619 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.231628608 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231718095 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.22919952 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.232968281 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232724544 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.231714328 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.230565639 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.233362932 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.230719309 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.232559973 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229599777 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.23146182 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.230026653 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.230622404 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.23062329 seconds)
  done (took 23.315321772 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.233263044 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.232522738 seconds)
  done (took 3.620853688 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.23007458 seconds)
    (2/7) benchmarking "second"...
    done (took 1.230078535 seconds)
    (3/7) benchmarking "month"...
    done (took 1.23034353 seconds)
    (4/7) benchmarking "year"...
    done (took 1.230763748 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.230982126 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.230421736 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.231431717 seconds)
  done (took 9.769693588 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233769889 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.415374937 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.496828548 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.869706922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.235494994 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.237498529 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.101856579 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.237137855 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.239911342 seconds)
  done (took 14.222633674 seconds)
done (took 78.616341923 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.258962514 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.248838671 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.415677258 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.236588031 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.247488685 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.528058556 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.279151478 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.357213099 seconds)
done (took 37.726803731 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.248583828 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.986363885 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.992453909 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.22859465 seconds)
  done (took 11.365131101 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.218320907 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.196388734 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.216635632 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.294338257 seconds)
  done (took 18.082984951 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.291034867 seconds)
    (2/2) benchmarking "read"...
    done (took 1.569219777 seconds)
  done (took 5.015948431 seconds)
done (took 41.867353794 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235074157 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232786976 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.236035417 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.235886135 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.233732766 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.23692214 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.23268631 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.233490589 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.232318872 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.236103286 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.236112681 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.235944256 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.235793916 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235302755 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233086745 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233791312 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235387585 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.234310724 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233366556 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234021463 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237675767 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.232997065 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.233534683 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.235867427 seconds)
  done (took 30.790210088 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.237400576 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.234365983 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235712409 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.23733807 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234736547 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.237064244 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.23639589 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.23432993 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.237449361 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.237117684 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234111803 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.235158992 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.236668865 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.234322709 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237028639 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.234741887 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.238154188 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235913963 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237117451 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.234733171 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23803003 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235818028 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.234421283 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237785073 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.236380727 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235763586 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.237973007 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.236447297 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237533038 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.23535253 seconds)
  done (took 38.244449511 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.243147854 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.245116469 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.238930509 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.239328781 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.239673958 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.239015342 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.237480976 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.23908603 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23844971 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.238035012 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.238799317 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.239250224 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238385934 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239369404 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.239631831 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.239178026 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239120505 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239213541 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.23881775 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.238607977 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.238778616 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.239359719 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.239553254 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.239108688 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238904875 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.239747137 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.239851769 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.238984077 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239618132 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.240462849 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239271463 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.240187231 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.239994905 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.239881792 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.240062996 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.240413327 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245308302 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.247495805 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.240376996 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.241695963 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.240449673 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.240380966 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.24064919 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.240569317 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.241589975 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240711529 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.241345692 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239846185 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240938801 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.241084914 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.2405389 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240834076 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.240587985 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.241739631 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.240641351 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.241140474 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.242369577 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.241757047 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.241569165 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241954245 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241964505 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.241305111 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240941565 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241666581 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.243391637 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.241767069 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.242109429 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.241865611 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.242143677 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24148269 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.241862378 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.242238958 seconds)
  done (took 90.482768369 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.242715352 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.241373075 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239047416 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240322263 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239296595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.242453784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239793796 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243411805 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240500934 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242649043 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242467174 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.241441333 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239505572 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.244397246 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2426457 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24041252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243125234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24031302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.243123743 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244860333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243492218 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24078348 seconds)
  done (took 28.482821747 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243116772 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245852405 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240811387 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244083254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240998128 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24353097 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243346297 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246887619 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243971194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243667408 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241496405 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244610657 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241698878 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241407549 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242535639 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244527643 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244161614 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243244278 seconds)
  done (took 23.545793518 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.242282779 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.243084713 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.245795324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24267837 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.243104829 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244956531 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24332958 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245983243 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245221959 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.243375887 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.251174546 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246126935 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245709108 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243179391 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245961655 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243015113 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.246120299 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243002059 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247309482 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244512703 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24432412 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247272865 seconds)
  done (took 28.553890477 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247051248 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246352194 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.244536432 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.244470777 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.243895494 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.246852141 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.246396265 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.243950107 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.248215063 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.246221655 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244821024 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246941234 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.246178379 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245637108 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.245076792 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245903206 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247792541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245154939 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247768512 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24574778 seconds)
  done (took 26.087343924 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248631645 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247783055 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24855507 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247964224 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248370868 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248478915 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248252738 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249081342 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247958959 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249051159 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247976179 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248958301 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249163209 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249406711 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249195014 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248993837 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248568386 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249099339 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249353869 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250366709 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25035323 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248409304 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250072423 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249654436 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249964794 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249554048 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250343123 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2496833 seconds)
  done (took 36.141839957 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249639448 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249816171 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.247432104 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.248261517 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.248905073 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.248249339 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.24763818 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.248724981 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250217533 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248229903 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.250594184 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250784042 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250895983 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.251258635 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250231029 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250662943 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250370396 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248896107 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248901586 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248520614 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.251419835 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25139915 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.250691171 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248790745 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248902717 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.250750806 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249610148 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250327022 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251567941 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250080949 seconds)
  done (took 38.663819721 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.270992519 seconds)
    (2/2) benchmarking "in"...
    done (took 1.269636885 seconds)
  done (took 3.712183573 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.250000372 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252611172 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.252347159 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249635638 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249621941 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252481887 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252891981 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250128853 seconds)
  done (took 11.183102047 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250973997 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.252395214 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.252105315 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.25147865 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.251918917 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.2531708 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258264003 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.27230167 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253141748 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253181295 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.26028364 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.261350351 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255907682 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252780973 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252973485 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255186236 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.253004592 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.253453703 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.253449228 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.253185183 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253886739 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25571088 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25489652 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251944941 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.254921942 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.26456555 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.277937211 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253841256 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25356348 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.258140367 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.252867551 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251895539 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253969824 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254282913 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.255162993 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.254176963 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263229512 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274733524 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260963427 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274086242 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254873794 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.252937002 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.255826254 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.256246808 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256050544 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254422516 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256182443 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.252742372 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.254814538 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258432231 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260263165 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254309034 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253743241 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260470823 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.256167234 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264012417 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.275854949 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.258121931 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.265678467 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.266423673 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287965726 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.281373467 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257861522 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256922885 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266500753 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280403977 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262695292 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273964899 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.253417285 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.257773309 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.264845328 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289502778 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283820679 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257687486 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258036257 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25698927 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25761171 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25771417 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263494183 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279428606 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258746727 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257966145 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26836683 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280436123 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258867205 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.258231233 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.258927507 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.258127481 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259664657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268835956 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.277004868 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259207334 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.258343618 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259584208 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.260029798 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259293545 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258882749 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259909403 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256893687 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259010356 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259953413 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263176802 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.268193997 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258955638 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259480019 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.2659164 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.278978498 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259215236 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.266315698 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.260195533 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26047731 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.262335017 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265666542 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25688167 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263085009 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.269102694 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.262087258 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261935525 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.260134853 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260073243 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269649963 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.286526111 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.26147213 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259600448 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265673144 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.271392739 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260174076 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262823273 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.261152462 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258447544 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258775641 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261626349 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261019563 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260488431 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259221247 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262001919 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.257726015 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.260301657 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.261852568 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.259024859 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.25946596 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.259350261 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.260879092 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.260942239 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.258697416 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.259846934 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266597107 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276835851 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.259434883 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.259191312 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.255388555 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258902326 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.259647373 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261128941 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.259107841 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258607937 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.258421688 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.257885215 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258603623 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.25926469 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259666522 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259246012 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263805145 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.258786327 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.260886669 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.259383869 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.256355133 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259717996 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.260481962 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.258600707 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.259811531 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.257674232 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.261588795 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.26581334 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258506518 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258433904 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.261698198 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258219137 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260006619 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257694514 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.261285791 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266341457 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259062125 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.265694441 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278335876 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258754912 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.259498365 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257861109 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.257485831 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258850492 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.260421891 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265558023 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270180807 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282635189 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.260805427 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.26140739 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25896721 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.261708493 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.261758511 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.257899812 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.25886109 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258640078 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258415443 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257630649 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260364057 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.258821541 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258538384 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.261121635 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.25957319 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.259206942 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260514639 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259954935 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260100252 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.257578532 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260700758 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260811634 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.259891055 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257340058 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.259374488 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26207449 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.261343722 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260716586 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.267142146 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.257912966 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261158363 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262016102 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.261032115 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.259634974 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.261404036 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263148146 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.260269459 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268186762 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28038056 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.261873081 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268367042 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27996125 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.262088865 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.2647015 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.261720617 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.259683832 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.264312988 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.269168563 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260939216 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.260561857 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.261650839 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261160073 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263045159 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.2678666 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.279403132 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.261314401 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.262638383 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.263206799 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.259186333 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.26286657 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.262912377 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.263117914 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263808626 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263936373 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.262827541 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262954805 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.261841276 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26267977 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.26211647 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265079825 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269285211 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.26844508 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262716326 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.263571483 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.263140677 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.26610174 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263310314 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.263208103 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.262618217 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276717881 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.287534294 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269985458 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.283710936 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.263214065 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268267321 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.28391461 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.26720235 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265434286 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263735006 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.264991419 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.263668315 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.261739415 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264610617 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.264152722 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265516658 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.266153745 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.268755262 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.265024852 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.265420022 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.265381479 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.26387593 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264860288 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26401675 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266627064 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.266008596 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266371521 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.263217074 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264325258 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270401101 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283456769 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.265170491 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.26599583 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.265490127 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.264947531 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.266144762 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26559532 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.269388823 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.273230733 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.269118625 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.274867106 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.267827805 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274130031 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.266975048 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.269162882 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272140001 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.263749758 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265442323 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.265317681 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.265833267 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273202723 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.284508831 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267603946 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270249882 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266596392 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.268616375 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26612523 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266314821 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265895239 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.267337984 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274790334 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286215157 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.26981529 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271083449 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.263298601 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.265786776 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.266365178 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.265595879 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270395895 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265516924 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.267257534 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269307489 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.266037832 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.266135989 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.26538372 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.265416924 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.264605858 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.267101684 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272466488 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287016244 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269016928 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.266468591 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273969605 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285324492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272307863 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285865503 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266358712 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.265961635 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26606401 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266879306 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265608027 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26633634 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266022718 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26724395 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268867099 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267201543 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267459394 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266326477 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.267585567 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.266993014 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276216914 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288542921 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.267478058 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271178924 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264248155 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268066348 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.269187864 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266254888 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265490686 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269613243 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279075691 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275185671 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26738737 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268534515 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266981827 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267749236 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268390264 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.268499344 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.268929901 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.26806213 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.267961065 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.268792247 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271391142 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.268493248 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268028414 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268929686 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270982801 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279673273 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.287136129 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.269588131 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268431333 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.269046813 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267777537 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.268229087 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268284567 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268817991 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268898006 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.269276109 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27524614 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274146882 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272004789 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.268578199 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269347898 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268153592 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.268028644 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268783666 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.269453996 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268731147 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270292272 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.269034111 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.269423172 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.268766816 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.270718694 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.269807209 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269270414 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271972137 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275610057 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269426148 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268590728 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.269602574 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26941376 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.267635114 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269013917 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.278211355 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293092173 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281721383 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.278523803 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.273482113 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.270443327 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27343226 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.276865109 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.268154325 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269851091 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.27207398 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.271896301 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.271442081 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272467035 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270925251 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275672567 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289688228 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.270273473 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280621673 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.289473438 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269414854 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271208387 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272006637 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.270347867 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.268772928 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269931191 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269552031 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277443382 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290041126 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270469853 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272290619 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.26877432 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271337161 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274058025 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272927787 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.271262589 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.268202088 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.271795256 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271286756 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271521952 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268527046 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.270345943 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272424573 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274360719 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.276497828 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268422173 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272176696 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270456668 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.27220362 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271553584 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272722591 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267527879 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267752649 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269361307 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2700699 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.270375758 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273981829 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270242987 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27079883 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271629703 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271260702 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272955389 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280120461 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277833176 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268129411 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270681999 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270407546 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.27428273 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270347292 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.271145427 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270976066 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271942062 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.270723598 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271186329 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.270706827 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273877111 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285777037 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.289642063 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270621783 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271272796 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27472982 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271466018 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269363359 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270016712 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.273325596 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273568854 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279197832 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271602474 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278885546 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290044432 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273169978 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275293625 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274210472 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.27839766 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274063556 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271896347 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271416937 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278100305 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.286957638 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273036855 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282205654 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300354784 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.290797046 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272589176 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272965667 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272893996 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271979166 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.273424553 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.272943376 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.273365961 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27233221 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273912584 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.274280528 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27797317 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275097772 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.27442723 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.272859551 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273008965 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275175938 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27082793 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27348646 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273950761 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273743249 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272762894 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.273472226 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.273090546 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286488825 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29911026 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274826327 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273669595 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271685919 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.27731768 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.275151009 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282959504 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280982884 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275179438 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27509909 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.275286791 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274134942 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273406403 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27391335 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273546974 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273736647 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272213648 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287360867 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300174353 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278002836 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.274307991 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274445057 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.274867008 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275667414 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274705113 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276189719 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.276616391 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278250416 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279028577 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.27576266 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276233222 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279012196 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.284174088 seconds)
  done (took 756.496209057 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272959165 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272018912 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273881713 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273472028 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272410327 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272915073 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275625693 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272851771 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272938673 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272513001 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272567863 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273055755 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272648647 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273955018 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274848531 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272515321 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272400789 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273143068 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272320461 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272691525 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273156666 seconds)
  done (took 27.927363343 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.277974542 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273115148 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273639095 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275076497 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272196224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275070991 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272943039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276600147 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278069295 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272129829 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.275278576 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275773037 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271922298 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.272600406 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273351387 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275365938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275513984 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273268526 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.275644583 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273482775 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27517726 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.273618832 seconds)
  done (took 29.230898937 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275573277 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.276550047 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.27445877 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272024132 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.276123463 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.272257958 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27549136 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.275177401 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276221018 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.277778273 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.275262649 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.276243832 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.281102961 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.279821055 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.277151522 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.275464087 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.42083663 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.275007859 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274858723 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.275253547 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.273782052 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280595529 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.292250073 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.274064934 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.276181947 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275278958 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.275699204 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.276197391 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.276476481 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.277462429 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.278435179 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.276003252 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277980169 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.27734188 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.275593154 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.276503137 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.278422878 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277348501 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.273732615 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.276962104 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288726605 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.294756995 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.276794899 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.283079756 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.296537943 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.279423212 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.279025476 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.283107358 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.276948103 seconds)
  done (took 63.961417418 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.275596671 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.276743144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.273812644 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276193731 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.276971685 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.277127462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.276551867 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275689092 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.274041034 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.274086198 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276966134 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.274167521 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275231062 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.277365464 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277474611 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273559028 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274897184 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.274473846 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.275618115 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273870566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.273649672 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.278345543 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.277743837 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.274952825 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277448051 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.274774297 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.274824168 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276977773 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.274843824 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.276243059 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.277694869 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278395551 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.277995671 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.27572358 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275912824 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277445198 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.279011034 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.274978296 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278471658 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275010948 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.278326743 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278178382 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.279707335 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.279757921 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275684166 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.276656726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275753281 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.277242852 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277272957 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.2793301 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.279194699 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.277708275 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278731066 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.276269366 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.279560708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.279418082 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.276827064 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.276711828 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278480864 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.277612416 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.278056963 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278971409 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.277455832 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.278913928 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.27894707 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.277328993 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.276891188 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279445781 seconds)
  done (took 88.019730741 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278959056 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278935244 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278835999 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278989935 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279162641 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.279961412 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279394802 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.280769305 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279322708 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279330408 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278868185 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278696733 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.279740521 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279167258 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279442029 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277809587 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27961113 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279163974 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278861535 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279133123 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.280435239 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27973603 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.280319642 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279922462 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280935516 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280483733 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279945819 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280023299 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279977374 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281177476 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281226531 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280099298 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280783901 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280545697 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28090481 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.280190713 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280663961 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281336861 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.280667519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281100964 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280440991 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280846641 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281502957 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281149534 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280996418 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280974464 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281316709 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.281527587 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281211006 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280825585 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281318979 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281228214 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281589214 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280550128 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280797234 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.282205694 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28106483 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281274059 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281651536 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281572113 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281344801 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.282994481 seconds)
  done (took 80.581803879 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282207744 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282961658 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280686147 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.280121166 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28244536 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279929452 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282974119 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.283063843 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282799204 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.282980115 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283300047 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280366031 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281074373 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283731221 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281049111 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280715974 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281351054 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281070024 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284244001 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28181188 seconds)
  done (took 26.8385603 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.280502029 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284587491 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281445295 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282341648 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.284008846 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282608934 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.28489263 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284847689 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281882803 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284582821 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285834386 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284596103 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282739712 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282257735 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284777014 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28347942 seconds)
  done (took 21.735622948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.283335799 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284854962 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.285936837 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284975617 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282896869 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.282817033 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.285887682 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.283796211 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.284332767 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285665496 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28595397 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285565651 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.285868338 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.285460831 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.284284926 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.286322325 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.283135628 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.283818966 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285954711 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.286701057 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.284810647 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.28406891 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286121764 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.286498793 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.284848645 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284704186 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283507929 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283807453 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.286029241 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.287188038 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283535356 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.285115345 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.283735159 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284308342 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.287702762 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284672195 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.287460798 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287456328 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287054945 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287632377 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288471236 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.284866347 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287127603 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287993326 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284037601 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287829947 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.285519012 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285363745 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.28514623 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285758341 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.288711413 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287441416 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287559131 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.287994518 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.28817029 seconds)
  done (took 71.913010388 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288619918 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287409099 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285511967 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.2880861 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28916498 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.286120017 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289264649 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28803449 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287322513 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289146831 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286837137 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290417536 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286760511 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289345205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287549989 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289268586 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.287554764 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28839072 seconds)
  done (took 24.388656616 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.290041016 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289988982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.291954113 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287345146 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287370378 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29036531 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28742671 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291180414 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289461256 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288885003 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287712449 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.291683147 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290818462 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291307435 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288431485 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288146384 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.290397254 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290718706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288903446 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289222634 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291983282 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291231192 seconds)
  done (took 29.582723542 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.289940272 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.289338119 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.290212689 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.305758253 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.307074335 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.311629931 seconds)
  done (took 9.000206931 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296899751 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292174589 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289269965 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29132004 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2910107 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289122229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289343571 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289567368 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292540608 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290055717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289915965 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291702436 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29246101 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289420127 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29190607 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291660962 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290430343 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289058051 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291583879 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294123902 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28864073 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292044068 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289870228 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289210067 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290499066 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290877107 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292599819 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29075954 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290611566 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293664581 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293215022 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289909107 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293795071 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291610353 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294138374 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293407605 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291084917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294115176 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293833176 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291034627 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29323702 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293734953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293415067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290890935 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294524633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291543127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291175732 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292931942 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291414949 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294713354 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294200893 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292059752 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294511427 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294031011 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294231385 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296659011 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293646902 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2924756 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294414967 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291897634 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292038723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294871403 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292452717 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292047452 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294721213 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293256614 seconds)
  done (took 86.513838736 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293632948 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291693244 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292830576 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294446343 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292979489 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292789905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294208834 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293086034 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293240141 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292766461 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294945865 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293039516 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293113419 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29264043 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293625985 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29312277 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294001188 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293038672 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293922918 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29559369 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293598927 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292972245 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293615043 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293387182 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294398741 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294792526 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293262203 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293195634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294866668 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293856747 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293805189 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294803776 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294321975 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293748553 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293988356 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293654535 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293362041 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294387339 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293829336 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296853427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294903506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296540903 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295258233 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294705822 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295692816 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295027029 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29591369 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294632718 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296782467 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295970332 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295197979 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296082147 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296868874 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294996246 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295732906 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296508823 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295771893 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295860721 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295788357 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299029542 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296189957 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295381474 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299544198 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296864341 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295106988 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296749478 seconds)
  done (took 86.659558771 seconds)
done (took 1759.892527973 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.308829992 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.302918159 seconds)
  done (took 13.825552471 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.468674937 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.42375055 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.307831314 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.337811209 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299538285 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.328170304 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.317031424 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300925917 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.308121337 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.308259453 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.308455597 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.49308088 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.30296924 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301497676 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.3088369 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.401348366 seconds)
  done (took 42.735684323 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.335590906 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.316402562 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.41893953 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330849365 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.334552699 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.488985132 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36116303 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.312260365 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.471697634 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.353562381 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.802315742 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.335697152 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.313598169 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.370684186 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329294258 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.486592138 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.544090895 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.807781454 seconds)
  done (took 29.929870083 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.72619947 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.304664282 seconds)
  done (took 9.248384007 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.338694561 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.3444577 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.317137126 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.319844651 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.325156148 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.357513272 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.367870621 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.375625706 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.353289477 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.350405267 seconds)
  done (took 64.670433504 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332634474 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.314078192 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.315135703 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.312993863 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.304748452 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.311584038 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313793935 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.307479139 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.693348251 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.430012363 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.333111767 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322830848 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331441487 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.314865066 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.31213338 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.349502735 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.443402934 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.331325822 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310895935 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.31920097 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.313951241 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.394259974 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351669794 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.311240413 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.429279099 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.694815227 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.318423593 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.321869685 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.423248423 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.33016486 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.31430884 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.314006905 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.315925553 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.885076417 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.815192157 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.321984287 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.331190635 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322348623 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311395409 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.437373304 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331510061 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.319371507 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.307434704 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.790233243 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465191791 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.42175977 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.519463935 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.316803357 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.317574135 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.375575376 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.316604929 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.316811811 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.344362713 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.055606548 seconds)
  done (took 109.681778803 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.337444143 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.793482207 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477153711 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326942456 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.077780544 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.96728806 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321679441 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.571978863 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.369966752 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30604842 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.579964095 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790370412 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322942107 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.336424214 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.961882887 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.363433779 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307923581 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.061077142 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32065 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.309498962 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721786666 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323275502 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.309795785 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.464021952 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.345089988 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753919506 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.66486304 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.750036322 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.320673015 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.302313554 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.749582509 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324241061 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.326761931 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.299722181 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.572200962 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.648277503 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.642283386 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.322551139 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354624903 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307062951 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.322027859 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.750841492 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.651025181 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321768914 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311543806 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77523874 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323477572 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.320373405 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.315787058 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507251549 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.045389664 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306234203 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.652759114 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.310560379 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.656934701 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.313748272 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.356302402 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78301817 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320818135 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.360742756 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.338644625 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307167674 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30382749 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310708647 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305286538 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625385329 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.446162121 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.318125339 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.638301036 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.752411458 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.315683349 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82782401 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.245220066 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.339666352 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.38401157 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.309575485 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.859951901 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782591624 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.339720174 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304814897 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.619742659 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320416305 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.576341294 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327684359 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305682526 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.727445022 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.334271943 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.317865367 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.312672431 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.303180634 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.954709358 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315550159 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.580854416 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.380909116 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.314302527 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.307458031 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.314711786 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.310168146 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31365058 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.317845126 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.812047045 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.333284026 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.435887171 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333495364 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312199294 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.314059643 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.314063184 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312170373 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525047747 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.917148319 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.318924922 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313758944 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.314745825 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.31869137 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.448908845 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.3149394 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.604533603 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.328533509 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314194356 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.326299636 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95470486 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330051974 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308412595 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.312893808 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.137698341 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.536093316 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.33412049 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.317035258 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317658295 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.332003217 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.568014652 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311129347 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.361403821 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.318777632 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997399459 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.368610799 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.315794443 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.709909154 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322614136 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.227359734 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.328881959 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316123982 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627716229 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.575755824 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.382224198 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31632307 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.324139212 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.982356786 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347266073 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460366963 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331400442 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.330781829 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515041605 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.653663387 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.316329359 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.885418788 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.317633143 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523071661 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.312296808 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635532542 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776447992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.324129422 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323706218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992149407 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.966709316 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.894698343 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.324513424 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.580313743 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.287579606 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.772436648 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.319605298 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.3182448 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.747042264 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318031206 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316990379 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.316981551 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.319785946 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.477297168 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.493841159 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.509714831 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.324050701 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757202213 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334551727 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311756688 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324275263 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313939648 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.672633226 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347082472 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.318923153 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.328930399 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.319336176 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317706885 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.76835042 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.292608416 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.314184862 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471616017 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923651328 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.325294832 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.320266643 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.109594304 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.609786059 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.80110447 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.391105583 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609085251 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.330133018 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357602332 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018013786 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347212703 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.762462548 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329213769 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.320735863 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898414836 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.324829802 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682687659 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.313568897 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319160693 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.842537794 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.325478341 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.31996048 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.596962874 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314990137 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564172013 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.322863697 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.353570074 seconds)
  done (took 1105.361867619 seconds)
done (took 1376.66520684 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.314486754 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.307865574 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290657019 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.301303586 seconds)
  done (took 26.441037982 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.298812249 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.298416065 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.294163875 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.293929845 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.295607328 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.288375311 seconds)
  done (took 8.976377133 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.306985456 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.276821654 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.279967235 seconds)
  done (took 19.068252612 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.480975788 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.514364601 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.627524414 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.389763456 seconds)
  done (took 10.210371152 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.277555472 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.277585223 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.277620053 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.280382076 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.281449567 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.283035672 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.280163457 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.281337058 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.283870008 seconds)
  done (took 12.719623048 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.99953259 seconds)
done (took 83.640358046 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.291299992 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.304765262 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.853862991 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.633594445 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.343168915 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.263633881 seconds)
    (7/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.885457271 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.292018547 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.377671039 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.407803 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.509227988 seconds)
    (12/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.400698976 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.631834373 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.336918212 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.555977447 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.511318954 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.305174133 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.097706347 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.278602117 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.706631629 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.769796744 seconds)
    (22/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.60436227 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.304645743 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.29575849 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.296334767 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.463752125 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.737288313 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.327041115 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.555996449 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.575566045 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.740676707 seconds)
    (32/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.355254032 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.470738663 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.105532343 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.560390069 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.320913432 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.3410348 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.400533203 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.277401593 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.806637275 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.396886991 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.27253437 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.827289217 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.855439487 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.270187519 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.114226988 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.386855995 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.271643527 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.299525005 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.291039572 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.30830937 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.407442774 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.533108691 seconds)
    (54/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.41076422 seconds)
    (55/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.354110179 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.039227628 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.259768066 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.680506739 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.296205642 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.349231921 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.354059769 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.007775503 seconds)
    (63/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.298847179 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.271220254 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 4.323319343 seconds)
    (66/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.473022229 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.81883166 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.48886507 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.264000382 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.30148373 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.370141136 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.275281873 seconds)
    (73/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.970101506 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.374029663 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.684768344 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.325321488 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.676694078 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.123194624 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.282463066 seconds)
    (80/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.523405014 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.433204211 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.62373054 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.125886534 seconds)
    (84/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.450389607 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.804135529 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.171018786 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.741956595 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.564646212 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.380585527 seconds)
    (90/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.85028603 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.283147333 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.992560002 seconds)
    (93/309) benchmarking ("sort", Float32, false)...
    done (took 5.277093403 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.004087059 seconds)
    (95/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.305537334 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.298359404 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.166783536 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.293547762 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.276450106 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.269271418 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.590299507 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.586339141 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.376231284 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.607549472 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.265183546 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.370620656 seconds)
    (107/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.075323967 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.073035493 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.472028929 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.153359913 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.893499481 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.307479026 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.357814825 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.682744294 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.105002827 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.63605452 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.47566615 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.388668491 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.268878588 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.270202742 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.295434628 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.270742408 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.284946852 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.268501758 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.279735527 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.304027677 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.962699626 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.348247252 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.251602391 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.26587654 seconds)
    (131/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.391687471 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.778360955 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.312495403 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.573592086 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.339754681 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.522129011 seconds)
    (137/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.811976344 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.996824586 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.002487396 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.551611416 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.540609393 seconds)
    (142/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.256455863 seconds)
    (143/309) benchmarking ("sort", Float64, false)...
    done (took 5.546228301 seconds)
    (144/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.640537766 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.421489414 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.268155102 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.082934132 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.665857549 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.553888761 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.01890772 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.012106206 seconds)
    (152/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.354476791 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.296726102 seconds)
    (154/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.458620481 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.273411363 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.342054778 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.857112938 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.511263832 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.27503755 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.318991239 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.297128842 seconds)
    (162/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.809127674 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.310928552 seconds)
    (164/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.611529288 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.27960736 seconds)
    (166/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.778359007 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.530165201 seconds)
    (168/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.71156996 seconds)
    (169/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.652497373 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.326954113 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.296178049 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.26378172 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.42830269 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.078040311 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.270869394 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.698584477 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.295381713 seconds)
    (178/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.778926213 seconds)
    (179/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.865948437 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.592155289 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.677669466 seconds)
    (182/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.611324782 seconds)
    (183/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.363128297 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.681445709 seconds)
    (185/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.630836508 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.364482981 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.286927534 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.011414922 seconds)
    (189/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.504075425 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.298194799 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.376987522 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.649366145 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.554307549 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.322035277 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.058870763 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.446245595 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.618530395 seconds)
    (198/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.674861518 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.639428492 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.407879302 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.29856987 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.812227314 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.338220609 seconds)
    (204/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.631544348 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.164379447 seconds)
    (206/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.360973091 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.275709739 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.442566565 seconds)
    (209/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.377777616 seconds)
    (210/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.122572003 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.531452866 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.829830514 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.272931553 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.704528521 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.839573985 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.936169105 seconds)
    (217/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.313068029 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.492229283 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.357025092 seconds)
    (220/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.377836384 seconds)
    (221/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.450426759 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.313864127 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.901292459 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.261687718 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.914193164 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.999666349 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.648232562 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.282657495 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.275232399 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.300327412 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.323271793 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.312788661 seconds)
    (233/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.277652323 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.583449604 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.404213226 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.27349735 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.261891892 seconds)
    (238/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.691353427 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.277657723 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.30873783 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.341435901 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.874520273 seconds)
    (243/309) benchmarking ("sort", BigInt, false)...
    done (took 6.273938144 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.365531689 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.620618596 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.308046251 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.558638221 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.014210576 seconds)
    (249/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.365467738 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.101469673 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.309561141 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.454537278 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.588331095 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.485889241 seconds)
    (255/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.028991701 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.66858651 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.364938071 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.283128701 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.906620173 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.310336295 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.615426219 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.275102999 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.443374246 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.682469128 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.275898293 seconds)
    (266/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.073654796 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.144069612 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.407457881 seconds)
    (269/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.28547074 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.266204665 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.508529707 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.732020845 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.284091274 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.024691205 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.887592836 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.676707665 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.34281564 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.152988728 seconds)
    (279/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.541765162 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.35865233 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.357388899 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.321677949 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.156972445 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.359677445 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.367887919 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.697097277 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.370735567 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.392852101 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.27751999 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.115241469 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.129568572 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.294615852 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.373115679 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.319277476 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.498592014 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.251759949 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.266504151 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.303786771 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.290245768 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.636977465 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.325860594 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.003828876 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.292822198 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.303757535 seconds)
    (305/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.471218159 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.695904377 seconds)
    (307/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.830086993 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.285447563 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.989839016 seconds)
  done (took 898.907639577 seconds)
done (took 900.106815465 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.311128947 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307482704 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.289071788 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.311304638 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.399816775 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.313789999 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.299417091 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.291677069 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.337195268 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.338623762 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.288525408 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.311512997 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.290602241 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.289369433 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.288271533 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306341171 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.287936895 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.299021326 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.306686213 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.298960169 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.306245104 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.287537667 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.339602376 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.313475734 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.293637 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.293151643 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.293768267 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.309198848 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.401525709 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.292776937 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.29257996 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.302351288 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.283200201 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.298135251 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.28683904 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.31038177 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.30096885 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.299940998 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.296243986 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.32347349 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.680262979 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.31563822 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.293218857 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.291761271 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.291819961 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.297201365 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.292848307 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.29830613 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305524875 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306808112 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.671571788 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.330470377 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.295186545 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.293051535 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.303146983 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.292910228 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.295701282 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310615961 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.311564816 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309542023 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.281395616 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.306725511 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.294523604 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.307783526 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.29998872 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.722034847 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.313243925 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.296929125 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.685429588 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.324024285 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.724026234 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.325589598 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.293866088 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.307470428 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.324338969 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.295482586 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.297145275 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.292465298 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.301968616 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.29204985 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.302984994 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307077155 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.299285877 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.294619751 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308282038 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.318310983 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.304660687 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.295831467 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.303203282 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.313473354 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.301398369 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.304446549 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.297902025 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.290303921 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.304157537 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.298984402 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.29775896 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.297045389 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.299654744 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.306936614 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.678457943 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337547705 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.29235646 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.292127205 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.294659629 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.309649871 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.674544915 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.312962476 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.316858034 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.34390045 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.297589977 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.285131304 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.307026977 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312386968 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.304398855 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.300922209 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.291711442 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.272480711 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.687144235 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.334821392 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.297720612 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.29526782 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314625665 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.297724372 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.293570083 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.287559486 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.298098704 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.31066361 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.418446707 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.306977539 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.328142745 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.295027525 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.301398877 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.321435141 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314573338 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.328227041 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.29989684 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314098906 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.312699713 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.294281508 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.308077308 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.30751102 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.299560777 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.303779177 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.293159512 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.321704204 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311726751 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311147812 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.318556272 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.418928026 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.295145271 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.2751356 seconds)
done (took 218.858176078 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.372594097 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.294272494 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.395715668 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.294440856 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.410758109 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.394326645 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.291903928 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.293346696 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.293300687 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.701183415 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.292397605 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.293405526 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.287730213 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.293438546 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.399171724 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.295682743 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.292512483 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.639280176 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.295400353 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.376714873 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.293241706 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.29388228 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.296029922 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.682524316 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.292806779 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.29308618 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.367470087 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.296146004 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.66411934 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.296659588 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.295196528 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.640380766 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.385867889 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.313695132 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.30626877 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.302516916 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.394832026 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.3137411 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.376354037 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.395826858 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.378722623 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.33515714 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.297516942 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.293736315 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.297823269 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.298045694 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.293982891 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.323965812 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.294703085 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.294803282 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.662517294 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.306946101 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.295116143 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.295386589 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.295070265 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.326783598 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.29574448 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.297594652 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.400391411 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.298012001 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.360893951 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.705530215 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.675768274 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.298177676 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.29478981 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.296552927 seconds)
  done (took 146.132447278 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.365165188 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.37185685 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.407178117 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.31400386 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.349345298 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.412780159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.314272069 seconds)
  done (took 10.746797189 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.303769555 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.299833278 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354973224 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355431424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.298460378 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.446858442 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300222505 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.310207183 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.296809485 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.352796886 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.299502716 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.29996469 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.306565971 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.296067208 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.346910555 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.309989599 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.413987849 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.301019756 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.300181458 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.455229849 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.297252205 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.306666255 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.352442579 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.31086047 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.301378023 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.305765506 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.869396427 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.301179984 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297744978 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.300721462 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.297596686 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.339111899 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.300823642 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.293770908 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297806979 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416877734 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.300569411 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.298091791 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.300927718 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.298156083 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.302027297 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.303183406 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.30179184 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.299455798 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.301360604 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.323119427 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.30135169 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.301996667 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.301567388 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.302742362 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.352143408 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.302315936 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.299573781 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.298788028 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.357891609 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309243805 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.302364972 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.299633575 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.30288977 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.299531899 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.459226048 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.350373141 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.303064529 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.350514002 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.302866884 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.302738293 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.303223114 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.303445437 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357231362 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.30247386 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351645958 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.299363629 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.457310679 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.325020434 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.304740682 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.305228329 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.306513512 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.302841682 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.298959176 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.308249101 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.300574248 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.303512693 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.309492978 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.301526989 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.301318633 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.407974017 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411299132 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.301787061 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.31594647 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.310629997 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.301000994 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.358079151 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.303485629 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.301120916 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35657944 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.418783445 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.358842345 seconds)
  done (took 150.072096362 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.308993305 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.313983869 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.306743651 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.322330652 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.306256766 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.304754386 seconds)
  done (took 9.080627279 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.306079379 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.305565166 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.304774963 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.305112691 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.305753702 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.306557876 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.306807907 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.307828781 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.308682215 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.306449363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.306272592 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.30761698 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.30767257 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.306510094 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.306801769 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.306937185 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.307945594 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.303533552 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.307453341 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30679073 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.409873552 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.3075276 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.307625261 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.308017415 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.311365246 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.307617969 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.315028346 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.307478029 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.307975541 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.315509178 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.325486394 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.307873476 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.308560824 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.31232668 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.3107422 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.307504646 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.310321733 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.310578 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.305703111 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.308740045 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.30966575 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.308336307 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.308108001 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.309869382 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.309423304 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.311407608 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.314448405 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.31609343 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.308706683 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.309862901 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.310506891 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.308772068 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.309112454 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.311027874 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.310555378 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329027273 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.31468166 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.309587875 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.309951939 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.309718621 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.310528521 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.309931167 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.310753481 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.313168288 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.308159773 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.311465411 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.310435841 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.31294284 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309459041 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.30956256 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.311696506 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.30754999 seconds)
  done (took 96.611849858 seconds)
done (took 413.849769308 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.640641204 seconds)
  done (took 7.864144962 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.355952009 seconds)
  done (took 7.581115487 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.363732655 seconds)
  done (took 21.595663047 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.34581069 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.35016211 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.336784753 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.309534848 seconds)
  done (took 26.565728671 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.651487474 seconds)
  done (took 7.874811921 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.306024814 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.303427653 seconds)
  done (took 13.835885029 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.768729301 seconds)
  done (took 7.992081058 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.997452643 seconds)
  done (took 8.22891295 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.305826286 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.341531539 seconds)
  done (took 14.1308372 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.286788004 seconds)
  done (took 7.512521468 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.257471864 seconds)
  done (took 8.483321621 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.31408406 seconds)
  done (took 7.540720636 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.37087371 seconds)
  done (took 7.597253111 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.130059159 seconds)
  done (took 9.356256341 seconds)
done (took 157.381881062 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.306125934 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.317077748 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.314603544 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.31562957 seconds)
  done (took 26.478970995 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.347027341 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.346642293 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.34954108 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.358611759 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.35058881 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.347877922 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.339523492 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.340140686 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.35801303 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.355100964 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.349658907 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.35056864 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.348716472 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.340280848 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.349764024 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.35038904 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.358150461 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.348698599 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.339947612 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.35163061 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.314951576 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.359140719 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.351172623 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.316051235 seconds)
  done (took 33.549456973 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.835971268 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.387260613 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.468061821 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.365937327 seconds)
  done (took 7.284735436 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.368180602 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.368962208 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.381571132 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.420099162 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.460286773 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.378766781 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.344145207 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.337875849 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.323672745 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.370134378 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.444940475 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.385298205 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.467204553 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.316350753 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.503572771 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.316742662 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.317065587 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.369229495 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.419557164 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.43272508 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.318688241 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.369971273 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.372165775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.386243023 seconds)
  done (took 34.402499057 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.315289025 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.324612166 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.314835549 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.316564946 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.323167421 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.316899324 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.315741667 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.31708401 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.31619855 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.323472751 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.315356437 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.328086121 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.316482858 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.315781661 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.322453545 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.317704383 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.32340372 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.315727424 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.316596258 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.320435654 seconds)
  done (took 27.606129021 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.310477474 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.251824087 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.662675205 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.566068698 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.312233845 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.311470138 seconds)
  done (took 28.644505981 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.38519353 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.538644546 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.327778748 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.663115347 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.765430455 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.344957928 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.319748825 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.555380329 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.867177822 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.854812747 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.383517153 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.393903681 seconds)
  done (took 19.63095404 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.312671535 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.33619147 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.32686721 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.337551989 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.371041124 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.346312882 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.325964935 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.313432745 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.380066351 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.400520251 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.346655616 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.372896947 seconds)
  done (took 37.402423895 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400052881 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35813865 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.263139483 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054845316 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04093934 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525543447 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.060614021 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.750122641 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.318566723 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588388614 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324739946 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40254516 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.570494414 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325001817 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323797715 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.269394674 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56532598 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798485842 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324292201 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.190495914 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347887441 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314164136 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.301305018 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.353301096 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526387469 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456067847 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.575613298 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.093107573 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604174324 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335833467 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326788996 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316033994 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590087624 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980400347 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438957415 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327196541 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.043889809 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.86990187 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.302262877 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.277477091 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.072694993 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327672839 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327362484 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317478732 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.251140559 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328595444 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754865129 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.333289689 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.027422945 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.316094486 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326915418 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412805931 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.320878762 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.888618591 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347119745 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.322449103 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.314072995 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324353778 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890649972 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.661931243 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331085236 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.261019525 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.698227937 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.28375838 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947415428 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.437457865 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.323312701 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.322250394 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253215499 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.253496579 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344312369 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465790631 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.341290142 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968115607 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006604976 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.337100519 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264440379 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860548507 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324617005 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.26258099 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546062452 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09483078 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254725634 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.264804301 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255038507 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027993954 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329005583 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.72320428 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3281726 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.748965693 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.330504398 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334993798 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342738325 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.543705077 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.201160648 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320455233 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.108533157 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464725959 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342293497 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.746589429 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259779841 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.32508233 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575837772 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.531914868 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323771857 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.283724724 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543870408 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334359667 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.344353699 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.320714732 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.357748914 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.882328203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358119542 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.663259515 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347383207 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.099558392 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064410555 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342465408 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.431233998 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.330864163 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562103489 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.091890813 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482093408 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389567497 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32460269 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321364184 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.292190434 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.921641796 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.480209963 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.318218412 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329009314 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.341080573 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.323647066 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27036574 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.32088369 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32173823 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.114711991 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.54570986 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33643138 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606004878 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256971127 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470411676 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.332108488 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.545902434 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.498131071 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.337465486 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58208376 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336310078 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332545377 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341951864 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342798972 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42474116 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345826646 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.336854975 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586998844 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.327602663 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.32772944 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.300631992 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.110722514 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326468692 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.330356298 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.172116102 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891911957 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324997868 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333568589 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21385693 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.339167128 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392284189 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330466698 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.335525622 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.100429365 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.180245802 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.330029828 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.329511546 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549194786 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335437922 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.213338595 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410505003 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.516841035 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.901669439 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364407299 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.259666187 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.036903904 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.018437381 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32558502 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.52766584 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325587389 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335771182 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337876909 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.850994314 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900993679 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351557438 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.215778011 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.340503879 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337005046 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.331191982 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325939117 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.0933636 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.704651169 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341495244 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.345391288 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470613139 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.341348168 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.261466742 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.844645241 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332379203 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326463325 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.104053401 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362131071 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.21132829 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81459372 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586957011 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.023462932 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34598642 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.393928138 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.368089687 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.326187378 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.09158151 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368576273 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.358373376 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344177526 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.33857192 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.283849314 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.698632702 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897052604 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029913515 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882059563 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263328573 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.338478163 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.229255479 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.76486854 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272193104 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.984045843 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512525809 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785409815 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283101478 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524493433 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.523228998 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108542501 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34005237 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556591044 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241746719 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.11563626 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369194532 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541459604 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364029826 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.331082911 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267720587 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.626981763 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560102725 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.130335252 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417174823 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759657548 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.12139089 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.138644436 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.330071999 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674243392 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515371411 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.884394736 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.717901777 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335780776 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343340936 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814083104 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339675802 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.858263165 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943425416 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355242239 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.551473115 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277595907 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.342440726 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.342690491 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.327868117 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.593432597 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.33963839 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.595185493 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341503053 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26594642 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33138388 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870163158 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.213197416 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.337458624 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332222365 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08115483 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342923724 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629119446 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.355527729 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.072710611 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361370377 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.266796665 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266533564 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.025690567 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33523747 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306851299 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835518797 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.701171173 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.354931742 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353797782 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18630356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587525767 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.34609875 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905661845 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582955158 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.133022824 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365419983 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.433805399 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.160135956 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.3438802 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.214980477 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.569620424 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178321648 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.557383353 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.307954099 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.244067033 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332368564 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553880783 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.215344404 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340723805 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592685468 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.070946452 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.357407397 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031848035 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385784116 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.334348923 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371338782 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.714421329 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350706034 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405028022 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34598802 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.345360159 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.344930206 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504412722 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344873553 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345433684 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34921809 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429096425 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.712807916 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.082707202 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.11773324 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911784918 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08283084 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93658868 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372860692 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335468464 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335751306 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268614946 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48657939 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.862966748 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609338925 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466121076 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.782508695 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366802838 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.183926251 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379163563 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55818762 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611980225 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.307653536 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350424989 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132226238 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.495661556 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348376981 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.549063917 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842471653 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91739974 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456206248 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344602737 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.772343458 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612073095 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.427450486 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338299125 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92819545 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.35544484 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.679150212 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.363873919 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346324275 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494458926 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348637521 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0024274 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.375982915 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.4948812 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.111999861 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.264915599 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603789397 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.790342167 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.358858251 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913912929 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05026653 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610835344 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410512191 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35075373 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.446107257 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486752089 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.338342583 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.245144758 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33917684 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182962549 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.049849345 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.349241828 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918774475 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627469308 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.337205366 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.339979892 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371452557 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.349157147 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.563364565 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051515458 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573409437 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351105374 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342809001 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.331668111 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912642985 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377990723 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274444832 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.343921059 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587606566 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603082758 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363330687 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.793426807 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.052155117 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898373375 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.320874174 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362881707 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351306858 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037545998 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923961365 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.114201261 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858318163 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.007931266 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345788097 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625506972 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.346077583 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341321207 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644947779 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.345315531 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347961281 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361280155 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.918374563 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122701706 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.369728282 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.282774181 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.286624715 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567401051 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981700606 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287256145 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352391377 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.515433805 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351237526 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473312516 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354577738 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.344477793 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363900046 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.085133615 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615609255 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.348582951 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.335617639 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.226206817 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359750801 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358058432 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576605374 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349820901 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.018144248 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.693529526 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.598563354 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347345901 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.332485897 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.347516381 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344040046 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061084345 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353752878 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.854686263 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925841697 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.360644644 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.364463124 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348206161 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.56134096 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55590007 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355802101 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365739379 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351357821 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367676 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.243948564 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.113529043 seconds)
  done (took 1581.196421661 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39618248 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.360101611 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.36168223 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.40090948 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388006334 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456642862 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.433866667 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.4661669 seconds)
  done (took 52.525159948 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.352544546 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.513593443 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.375349499 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.347952587 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.363028806 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.354646875 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.809001462 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.379166414 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.363463498 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.354452071 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.357408397 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.365153201 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.003104852 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.3637249 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.349748291 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.339969715 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.363532814 seconds)
  done (took 65.623794662 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.346456781 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.88193947 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.439189872 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.355930803 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.37501075 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.381334833 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.142966551 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.373853755 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.348372534 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.672506296 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.016182205 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.356899594 seconds)
  done (took 84.954530661 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.354695588 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.354587537 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.355230063 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.356182641 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.355366376 seconds)
  done (took 8.040687565 seconds)
done (took 2008.56722771 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.593321375 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.038267954 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.967200966 seconds)
  done (took 5.268894288 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.493731642 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.541492652 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.662984157 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.683812363 seconds)
  done (took 7.643546131 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.629299054 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.725659452 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.533977649 seconds)
  done (took 6.151971115 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.730878259 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.368918418 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.492667775 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.344893958 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.355397158 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.354645737 seconds)
  done (took 20.319555396 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.350632628 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.353697684 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.352037697 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.353618492 seconds)
  done (took 6.672772591 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.327701095 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.018798533 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.33934985 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.351580407 seconds)
  done (took 18.301792711 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.097012682 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.109308143 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.095702136 seconds)
  done (took 7.566268914 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.35650435 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.197722321 seconds)
  done (took 9.819020489 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638185166 seconds)
  done (took 2.902606383 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.484257072 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.678586516 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.361991053 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.329955413 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.404850182 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.091018597 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.948084486 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.548558179 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.311277386 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.472585345 seconds)
  done (took 27.89606265 seconds)
done (took 125.992317842 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.104330781 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.593228831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.551270472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.115079657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.579703916 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.552196137 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.775964032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.087345236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.635720336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.583797659 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.074773215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.582556235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.503383045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.590640633 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.503821149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.719321003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.583090611 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.156704067 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.798401697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.961095647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.773990709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.713963657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.908269086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.73789553 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.58276079 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.502730857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.292210522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.722494441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.969771639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.315379067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.504244993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.131933625 seconds)
  done (took 192.473467835 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.358227375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.350814463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.350665897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.351718157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353367095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.351305571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.351310021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.367547623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.368038239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.351591234 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.351320886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.367273599 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.353587026 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.36801057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.351645106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.368125173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.351547311 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.350998944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.365302787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.351952102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.353683827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.352188679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.350544068 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.371782045 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.352017473 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.370197673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.363429776 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.35323851 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.352085056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.357990761 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.360305081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.352483113 seconds)
  done (took 204.692251239 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.35162424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.363780429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.352049032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.351915149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.35328723 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.369855255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.36777314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.353684712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.36819524 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.373975058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.352727028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.353982885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.353872779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.361876713 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.353738506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.353902122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.353703097 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.362548364 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.353229758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.362276417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.355081838 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.369588667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.353560842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.363054719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.353282306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.355009712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.379427944 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.354611225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.370398471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.370941764 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.366794171 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.37788246 seconds)
  done (took 204.807861957 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.556926803 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.362307957 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.362040045 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.319775115 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.363000431 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.361973927 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.360023537 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.550762586 seconds)
  done (took 14.50876385 seconds)
done (took 617.745848494 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.635701665 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.367557778 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.57011008 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.392250993 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.134509083 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.410035935 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.383033997 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.549522476 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.294914759 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.560114064 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.64061961 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404984029 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.777087881 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.390383649 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.634562059 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.48847647 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.283521301 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.413590067 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.705550191 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.919633262 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.6476687 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.871551008 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.578606944 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.288647466 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.805276337 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.871307082 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.095234349 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.271890917 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.407833289 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.703278432 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.00062227 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.354064795 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.45162736 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.449511475 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.507558818 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.486990356 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.33391119 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.448974511 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.587996712 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.638181767 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.907632297 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.111678435 seconds)
  done (took 93.049314402 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.347907128 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.347506099 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.34832839 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.34801552 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.349584295 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.348412371 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.347557365 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.347438643 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.349141396 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.34815015 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.348054394 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.349149034 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.347799264 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.350186167 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.348633052 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.348557821 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.349229352 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.351173759 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.347918658 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.348846744 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.350289455 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.349696121 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.34779011 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.348958952 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.349089534 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.349127705 seconds)
  done (took 36.342874326 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.367570589 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.613514761 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.784466932 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.381903979 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.368121429 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.372118391 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.443065242 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.378525055 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.370604511 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.371452984 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.535152634 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.380820618 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403323238 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.804371343 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.377777912 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.368932658 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.369115798 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.368384861 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.622115738 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.386583544 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.467693347 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.37862862 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.445078957 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.38746709 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.391367796 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369973716 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.37308418 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.887736117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.397218787 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.54083043 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.16071048 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.451126943 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.846090024 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.812325049 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.156843119 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.380144132 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.371990092 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.545323137 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.380622484 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.369588918 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.445478287 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.379596769 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.78626541 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.991616729 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.397342885 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.372201149 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.90815765 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.571015156 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.616436265 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387371077 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.809139586 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381781507 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.373303246 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.371914658 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.608169951 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387306071 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.370384776 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.896214299 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.403862349 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.448652993 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.379573551 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.371462811 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.630035453 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.379726637 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.627378766 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.382124926 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.379808801 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.391281801 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.788825888 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382378487 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.008359278 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.400263577 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.374001919 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.543212462 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.638073316 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.952229426 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.402782874 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.637134333 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.861876193 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.472881535 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.384564944 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.87714872 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.477124811 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.386354741 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.375564621 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.375645069 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.373301113 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421246282 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.44653551 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.942315788 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.023376701 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.923436542 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.477940023 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.396024973 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.373448714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.899288364 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.401831554 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.375115724 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.786125166 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.012357516 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.399844224 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.383206725 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.01788262 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.40275085 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.451726489 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.390083307 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.797925541 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.383644776 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.425301083 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.374711784 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.38144642 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.396763553 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.45168647 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.388647144 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.376286512 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.981045437 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.574864995 seconds)
  done (took 180.678605669 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.368385603 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.369005231 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.375661014 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.367865059 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.36853106 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.377168986 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.368529339 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.369928083 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.374586487 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.370214654 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.369708262 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.368872817 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.372029552 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.385525621 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.380766676 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.375457239 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.028688973 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.368580331 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.369891357 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.369362208 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.159643956 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.380701975 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.369468579 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.386472421 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.372648801 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.371371995 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.377806542 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.392105025 seconds)
  done (took 153.193523282 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.378015354 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.934014442 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.404851128 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.504317045 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.406857427 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.375383988 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.504220162 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.443489275 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.404730681 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.376172312 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.376803252 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.672653894 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.379593996 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.879453803 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.562855565 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.530928906 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.887761218 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.395162448 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.376193938 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.377444823 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.506907257 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.390826863 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.675708725 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.945400909 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.406018951 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.936944827 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.372309076 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.379851339 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.378163875 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.938140739 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.402842473 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.679170626 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.463400389 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.436355519 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.966100225 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.911779075 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.911470877 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.533472381 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.388742337 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.377860326 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.377514836 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.363733352 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.936523026 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.40962387 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.380851716 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.923040532 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.399575007 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.38093258 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.386492201 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.377630557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.438263547 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.464632496 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.705812488 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.952890995 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.48089647 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.391545856 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.508663076 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.771529271 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.383028364 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.887488863 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.372300885 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.942341169 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.409272857 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.364543714 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.380423748 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.385288216 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.526673555 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.518836914 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.895603133 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.4066836 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.881621795 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.543802098 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.388369103 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.379889986 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.382020894 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.943007403 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.909933485 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.543190496 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.520552824 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.577096689 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.374950595 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.381128296 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.36475843 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.457308898 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.380727068 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.944264629 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.909673753 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.399589691 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.383610264 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.383521222 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.382490201 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.553125289 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.969269814 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.483795425 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.878840311 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.699565845 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.69327464 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.39366482 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.440574448 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.40858016 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.684753635 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.393395869 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.438003899 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.837529307 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.68609277 seconds)
  done (took 164.577032385 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.622286073 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.561161314 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.472034948 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.522769068 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.979931183 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.953291463 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.629203347 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.530749892 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.499224787 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.650952177 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.53410804 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.483010791 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.54935981 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.468039279 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.115155132 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.476956461 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.498722542 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.532436337 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.502389448 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.416946325 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.056144138 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.679168707 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.552616821 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.236006804 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.483300691 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.130035137 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.947069849 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.895675718 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.557908774 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.690731352 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.90713984 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.50246108 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.353818059 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.057874175 seconds)
  done (took 66.339995993 seconds)
done (took 695.450628934 seconds)
SAVING RESULT...
DONE!
