cset: moving following pidspec: 6869
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.289620245 seconds)
loading group "string"... done (took 0.589133637 seconds)
loading group "linalg"... done (took 7.201733467 seconds)
loading group "parallel"... done (took 0.167250445 seconds)
loading group "find"... done (took 1.128354205 seconds)
loading group "tuple"... done (took 2.00134031 seconds)
loading group "dates"... done (took 1.294642345 seconds)
loading group "micro"... done (took 0.240718994 seconds)
loading group "io"... done (took 0.966537426 seconds)
loading group "scalar"... done (took 38.572348216 seconds)
loading group "sparse"... done (took 12.389435865 seconds)
loading group "broadcast"... done (took 0.972159217 seconds)
loading group "union"... done (took 13.155085531 seconds)
loading group "simd"... done (took 4.426575783 seconds)
loading group "random"... done (took 8.942849243 seconds)
loading group "problem"... done (took 1.957127751 seconds)
loading group "array"... done (took 21.180578011 seconds)
loading group "misc"... done (took 1.923977274 seconds)
loading group "sort"... done (took 3.206326345 seconds)
loading group "collection"... done (took 17.914570205 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529742243 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140066932 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116154042 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137736429 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183283873 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131337347 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144385398 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084421031 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.021098489 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159266586 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137890026 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.474243079 seconds)
done (took 5.019775756 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.228835026 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085562884 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095085775 seconds)
  done (took 0.883632269 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06555886 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12613804 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079646842 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067321139 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065931409 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079952454 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066177389 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.0651568 seconds)
  done (took 1.261073518 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073402726 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068298335 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083429736 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067201032 seconds)
  done (took 1.004651068 seconds)
done (took 4.164376373 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.892927625 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236213701 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188284262 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452319394 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147349308 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187248751 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670953393 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327980623 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.212095609 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100622812 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104747587 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376258398 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106069034 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665291753 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074647468 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105278738 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162198074 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43236309 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080048672 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082336323 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103385016 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140520258 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100131597 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076511493 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167494048 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06910401 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146569361 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093601302 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067601822 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242380913 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189518652 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684223162 seconds)
  done (took 10.432450998 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098871025 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115421128 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068785128 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138739886 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101378496 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085269295 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070558217 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082291306 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.0905223 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157488161 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11328085 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105155574 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081133289 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068868117 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099738919 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209513318 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107110779 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084460051 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086067878 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07536651 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120922237 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081943997 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092766123 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07714599 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151055083 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193645381 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11169659 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11079805 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068083192 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079948846 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130527934 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140982135 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065617239 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080511593 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138009632 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109659977 seconds)
  done (took 4.51674922 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.021744125 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159657332 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090574365 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150880081 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084356755 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108979652 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082092107 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098731183 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245114659 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.09782142 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.453322681 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127064663 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100825065 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067445679 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082595156 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067254704 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.510008476 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144704162 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101229132 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103501711 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088408306 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069839772 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357584335 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067008285 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0658794 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083875246 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059318596 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143955115 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067318168 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.208371966 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088265033 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087060023 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10074599 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191435163 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09323172 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.155940987 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081118088 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065577046 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168194957 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072723886 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081836199 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086718478 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118807163 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118834991 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067910129 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081146536 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179314364 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10035456 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064854337 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081186781 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.887318684 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166441479 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079673786 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066857328 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288403298 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083540816 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083998285 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063565209 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.251794106 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153669689 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06729138 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082963779 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065918027 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067013311 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385975287 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069954664 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.619486806 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071308114 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081258106 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085001718 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066611776 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088387181 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071893465 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100166575 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067010053 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067278338 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083058962 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065425811 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083385251 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085180194 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107616648 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202716111 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06639802 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082959129 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065539707 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085255223 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113043525 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083652352 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066542838 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114080166 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069359444 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067911031 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080032424 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10236675 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083502658 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.0842108 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081263471 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068309994 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128850822 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081661788 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.119875042 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068105417 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111323488 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075999772 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113196728 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093116702 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067660901 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153087268 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063892226 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081297985 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066550122 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064434295 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084342359 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067447292 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096638647 seconds)
  done (took 20.703734286 seconds)
done (took 37.384679684 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289173753 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090247964 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090518904 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073588367 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090880522 seconds)
  done (took 1.420065357 seconds)
done (took 2.179124126 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11953684 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115073291 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06270669 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111693867 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062845974 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115241212 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112833063 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080879893 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11685104 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063326673 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110905144 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063570853 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062864107 seconds)
  done (took 1.984088677 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082325862 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084337075 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08453725 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080747496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077419929 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081692569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07914165 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103230996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079606376 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086436199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063090269 seconds)
  done (took 1.659194876 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081498875 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082732475 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083659379 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080731556 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077251556 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080690694 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079018179 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101009871 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07949229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087915485 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06340544 seconds)
  done (took 1.658180578 seconds)
done (took 6.05179326 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07812145 seconds)
  done (took 0.830328412 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.697761037 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.687641013 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082963683 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132679758 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221367067 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154191753 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.443842834 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109050439 seconds)
  done (took 10.453006222 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10251463 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083807531 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069388243 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087059571 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070372544 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086719709 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068967435 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070695393 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083316875 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067573058 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086754317 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068341923 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084421656 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070882202 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067680141 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083510042 seconds)
  done (took 2.074561495 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09233656 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091475454 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090215797 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075236795 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088475534 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072102364 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090388354 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073837247 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085987609 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072655139 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090450841 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074596963 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087020425 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065409788 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089501012 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075662735 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08585551 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073900749 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091241266 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075283365 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090335298 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06465278 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087540907 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074392119 seconds)
  done (took 2.823980267 seconds)
done (took 16.940904845 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130790033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075174483 seconds)
  done (took 0.967836815 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080264636 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096185023 seconds)
  done (took 0.945289184 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082096057 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080075774 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088892388 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091839564 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066061658 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080809444 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101918647 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065258322 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08015776 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066629493 seconds)
  done (took 1.572824024 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068348039 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091767888 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069833346 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095769793 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072772417 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079739257 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072859902 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082685028 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077218627 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077638295 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070447337 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097795864 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071246034 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099597804 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071535874 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082973833 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085007213 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067105028 seconds)
  done (took 2.204874757 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065082452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06701018 seconds)
  done (took 0.902732802 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066677005 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063325524 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080767833 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066336674 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078321716 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062709556 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078391085 seconds)
  done (took 1.266495925 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397803295 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107326925 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.240449821 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086735856 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102134645 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260882795 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08182195 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070227798 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087230743 seconds)
  done (took 2.24126956 seconds)
done (took 10.869631195 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07915975 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084148159 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109728044 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417253436 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10563148 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065835079 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.130939856 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.222914941 seconds)
done (took 1.985733698 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124245876 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60143542 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.394366344 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210738212 seconds)
  done (took 1.981246384 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370740262 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091932966 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07493356 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068754082 seconds)
  done (took 1.385080113 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065724534 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068499711 seconds)
  done (took 0.913401031 seconds)
done (took 5.180687821 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06671305 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065540434 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078882647 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065377234 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062848562 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079538084 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088539949 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085666017 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066687414 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066391617 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084753975 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06840307 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083822641 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067757558 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064820371 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080832793 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067128011 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065292455 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080764801 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065142691 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065546517 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083110767 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064890189 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080363452 seconds)
  done (took 2.560005897 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083824517 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08214778 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07148158 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087011422 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070265418 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086680756 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072002486 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066218407 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086533762 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068913645 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087870554 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069999249 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083767883 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070199684 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084203511 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070055872 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088194739 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068377213 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068930691 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088692246 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072784675 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084376372 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071781703 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088822054 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071668855 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087929643 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069805597 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084059616 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073169171 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087506152 seconds)
  done (took 3.126477844 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069792131 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062660945 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079798411 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07015125 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063693368 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082321452 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064255153 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081124617 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06641406 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064804549 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082759172 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064910191 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064996513 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082322484 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065983978 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084377583 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08157126 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064983558 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080062479 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063847254 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06609545 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079346202 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064301908 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078979684 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063579985 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062886046 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079471105 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06304149 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064122844 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079809722 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066287191 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066613145 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08015335 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069957051 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082529606 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063670797 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067694381 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078651377 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064081143 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062639571 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079513268 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063342785 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062939249 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086827544 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065732027 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081897168 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063685875 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064417321 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080100711 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066337761 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079628487 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063250676 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064862829 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080230797 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066908846 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062461138 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081058854 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06315327 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07969185 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063806241 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063477888 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078857219 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065324006 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063769877 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093692861 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07024436 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079212724 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064892883 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064549033 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081570841 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065373821 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076918957 seconds)
  done (took 5.916480676 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11572152 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089728962 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082073898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065237779 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07802407 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064388702 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067403512 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079915147 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065851296 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085510979 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064463762 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064805729 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081443523 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076271293 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079844369 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066176587 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085291676 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06176887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063738162 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083296939 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064202949 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083034683 seconds)
  done (took 2.455645726 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186013647 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086657959 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108866537 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090187141 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083572053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075232826 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070174717 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087918543 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072250694 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086528913 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069496818 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087962464 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069750503 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086129902 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069814574 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086685982 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071460181 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085982775 seconds)
  done (took 2.361041535 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076854187 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065063971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105280089 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065829408 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082745118 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068089201 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087853463 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074730095 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084367788 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066281151 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090592262 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068454563 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083604482 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06604554 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067559078 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081715785 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068454122 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081995973 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074235102 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087133894 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070774882 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089831383 seconds)
  done (took 2.4971731 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080860444 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066972584 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.1007879 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084424466 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062673991 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065464569 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088387134 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066206715 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088160795 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067783059 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0656322 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080959985 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070714762 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081871853 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070648113 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082251733 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067864123 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066046037 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08390712 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062361268 seconds)
  done (took 2.293609738 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086942417 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082669124 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067132315 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092533251 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067837736 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083876487 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076342196 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083717717 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067536567 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108578095 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067023431 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085176634 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075725367 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089012643 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06742335 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091355906 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074865957 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091599093 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067224585 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083678207 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217977115 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068193427 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091613971 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067617039 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083094394 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067899578 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06750209 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087910444 seconds)
  done (took 3.156487239 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066500766 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066007435 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079847603 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063486985 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063269578 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079392422 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063217096 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063723338 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082085792 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063867006 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065781554 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081577173 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066224522 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081846462 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065861025 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066623326 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082269003 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063946981 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063666282 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080077282 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065877574 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066156589 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081791855 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063622387 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079039452 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067001214 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064300645 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080490048 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066061795 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063703317 seconds)
  done (took 2.903066638 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076526447 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08946946 seconds)
  done (took 0.962668911 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063748825 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079958828 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080437425 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069895007 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087184243 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067071366 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090566873 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070449563 seconds)
  done (took 1.402674568 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081456667 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076668875 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084074742 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077379605 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093247578 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082601172 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153652598 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083644501 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07324714 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081506811 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080178119 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065472527 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089541029 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066315486 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088224857 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072779363 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063985981 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087993345 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068445019 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081745093 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067552431 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091272382 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069448598 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062475408 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084279625 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074896585 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093919295 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067074035 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08588043 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074072104 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071357157 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077189277 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06705098 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083838291 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06463304 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092315614 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081592047 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085678316 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07503982 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067522302 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093184518 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062201398 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087211091 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072311363 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091872686 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06733832 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066343067 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078638755 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06432324 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084599127 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06220795 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065943037 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077643773 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07364925 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086169977 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076646683 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067430406 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084341539 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068672931 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085899153 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072700235 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085098653 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069813571 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065957531 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091793905 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070731867 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091455846 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062266649 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059896112 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080307894 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075986143 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104895138 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072898058 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084062629 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06778466 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081206066 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069280656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067251024 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088519165 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07232846 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083658151 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072135166 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09041383 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067173834 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069110475 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090122445 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064310521 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08513162 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064512327 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098161141 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065510535 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080387845 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064631759 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076590248 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086453516 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066852567 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080365331 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073257725 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060647705 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083605998 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066763905 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083316224 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07621077 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088171102 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071519435 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090851362 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07450161 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066625065 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087178925 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063134059 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083746014 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065587275 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073078552 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077321896 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068988017 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083077369 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067161241 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074354822 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081884034 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066489679 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090289603 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072158276 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0813215 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063090834 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068632438 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083024339 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070064554 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091055043 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065066134 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061289257 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077949381 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070306458 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083075241 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07073131 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087585693 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069574459 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061202741 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081316074 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070960923 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091685799 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067182993 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066450123 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090017207 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067804071 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082522933 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073765037 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085481694 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066098036 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071434603 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083829806 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06188488 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086236156 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069512214 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06481036 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086350034 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0696225 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085574838 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066967612 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081371141 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07227887 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067327674 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083018656 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066752579 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082843888 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076815837 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06766099 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079303514 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064422003 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090783461 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065131157 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065505901 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083841606 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069925568 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085730811 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06656531 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067116558 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087640795 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078823124 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090471022 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06960964 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091043711 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079206836 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085565432 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070582669 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067402848 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08699097 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069065774 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094575565 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073640446 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090307725 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071364492 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064948162 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091743814 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075390446 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084909038 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066237642 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066915755 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08933909 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073886352 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089422797 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069067728 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083373199 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069022441 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071227345 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088416546 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.0682236 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084928193 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07312893 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083684384 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074670213 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06939172 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096201187 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070764319 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080865305 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071670833 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083776996 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073999445 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062823821 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083765061 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068023512 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086481903 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067664998 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071684244 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080448869 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075610235 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093356422 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068224434 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067998631 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08564454 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074859837 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08734419 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072111735 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071722008 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091842492 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078274153 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085503476 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071749195 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095884923 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068773987 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061978272 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091536297 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067730929 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085021562 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067857058 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065620765 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089018844 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077024471 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093216136 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062427922 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087595614 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067590096 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067058363 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081212263 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073417845 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087758561 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069357446 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075009944 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087035001 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068452463 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089199899 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067846022 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06842527 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086285593 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071299007 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086389444 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070689966 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066171052 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088395714 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065355653 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081672564 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068846774 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066846976 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08392039 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071911653 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082980858 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067793178 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084989263 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068241958 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066827633 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084311741 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066231764 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086706885 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067618714 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067128204 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086308099 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062272711 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090094518 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066521279 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073204384 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083926151 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063907432 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088476692 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069233028 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07041143 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084539959 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067467834 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084996404 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067067827 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086321696 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073369046 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063925332 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094515877 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073706618 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084563536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069213606 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083160816 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068720911 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065733202 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084788809 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067776975 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066266333 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083890527 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071668054 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085820563 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066928746 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067241614 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08479026 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066706537 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084316201 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061429971 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065332711 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083511584 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066485947 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092774262 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067243942 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082996828 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066257124 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067069435 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082510449 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063932988 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091972568 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07534447 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08391963 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073816541 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064618732 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085548769 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076647585 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077814759 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064656706 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081182304 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064911038 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073273564 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084294144 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075243044 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082840888 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065588164 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06353484 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083833571 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065646809 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06046101 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081730203 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069970701 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082833465 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065853746 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065965655 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087110054 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06736697 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093244458 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065645629 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084352675 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067131347 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063458807 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083223724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065627376 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085898929 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068500548 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064280089 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080900326 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06668893 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066329584 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085141829 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065929462 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08501062 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07343905 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082923403 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069665973 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069402943 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081214724 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06932931 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083165124 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066822521 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065009833 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086709695 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070095605 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084894668 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074676531 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083163312 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067246775 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066708984 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081431096 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066130658 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065288068 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084588245 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06513272 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085698835 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07475763 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081451572 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070626525 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066441204 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083938208 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072847586 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084543729 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069923601 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090531563 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06712147 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068031347 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091392308 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07052925 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086752719 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068079401 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067406496 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089717505 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066293609 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089857147 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067552235 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084152265 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069081536 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064634664 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084195952 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066813953 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065157369 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090988819 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067683865 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083454749 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065886989 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064195667 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085848442 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070267263 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091196114 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068874697 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086928913 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062435528 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06356633 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085064013 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064928515 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085210783 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070185626 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071304604 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086265126 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066910614 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082797426 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075572724 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089002348 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070748189 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064456078 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087388401 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067490234 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085535546 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067957579 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067139695 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086037482 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070189094 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08582577 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066212867 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072689371 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088341648 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06762532 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085475912 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067645399 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066903607 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079291245 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066837056 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085387465 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072153053 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06793178 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083925502 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075992644 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08185499 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067756954 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086776351 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066594022 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071119383 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081345683 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068232189 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084456234 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068412993 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061567474 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083999033 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064565979 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085950911 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066375456 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061493719 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094746081 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07574802 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086676589 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065921776 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064634064 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080117114 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062354296 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083340102 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068448896 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067622952 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094381199 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065493529 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083901853 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062346921 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065888263 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087787814 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069838075 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081882531 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062416855 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065219222 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088594916 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072478391 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083118858 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066306292 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068811137 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086577393 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064642919 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087461355 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064035915 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087326581 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079061951 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066488124 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085195938 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072482281 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091003815 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067402037 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079943536 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067499312 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06901694 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084712282 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067612306 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085056568 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080543864 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087273855 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066203852 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065387593 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086294228 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066375718 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091952268 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067975647 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066058572 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089062254 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067895707 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092764096 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069252151 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090957435 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069960103 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086583082 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065747998 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066520237 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082691546 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066040059 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08460671 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067585206 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070445694 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092140269 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065245361 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094512616 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075107164 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085561077 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063699537 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065468236 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083544456 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062311029 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08447748 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06487632 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064441764 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082362035 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065697639 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084275917 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073289213 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067087499 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08448228 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067066451 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078182643 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07003282 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068731481 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085751347 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063666691 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065901719 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086346938 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07067415 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087914289 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065514373 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087060192 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070444039 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069054968 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082266151 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074782177 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066358928 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088834232 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066514015 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084513285 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067813453 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086188647 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072874793 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066716492 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086515363 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075148641 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086474213 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064583999 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062684234 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090056514 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06437173 seconds)
  done (took 46.065782646 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107185069 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081219009 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062064299 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079605085 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075402792 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08113667 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062536123 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062687382 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08031141 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065760898 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079630013 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062191121 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088261748 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085831526 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09270415 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066123496 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080100582 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06299007 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079604234 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062987208 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088851229 seconds)
  done (took 2.449331479 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075009354 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088456361 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073789601 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094492743 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067940812 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089175181 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073536934 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088660127 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094014163 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067000005 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09390143 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070767195 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.084962108 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067910267 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08485633 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071568523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094100599 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068354266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088348672 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073224446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088425577 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073065766 seconds)
  done (took 2.611985042 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067070455 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065296639 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08560392 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062140686 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065079704 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079316987 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069702407 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081726924 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069443536 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064168686 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082927859 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073424615 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085089857 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062487666 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065359905 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081913883 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131025533 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069178424 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064453506 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085318415 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061101009 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086800757 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061925834 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0613406 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083498042 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070164038 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084448488 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064489858 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065509702 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083036766 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065370858 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081497107 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06764103 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066244205 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082819057 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06513667 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0649853 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083979166 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061384475 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081702771 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067122615 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061641262 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084557774 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067419398 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064172436 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082333737 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067758507 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083278042 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061950386 seconds)
  done (took 4.440389889 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083715475 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.127882829 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086785424 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088804283 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100762967 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091599209 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070408124 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110495734 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063510746 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08334751 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082554465 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102989954 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084684802 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071862143 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090674593 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066664586 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067179113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084428835 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069585851 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083897508 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070428658 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090655696 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099281812 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082355505 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090692334 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067530307 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086193866 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073030941 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099714706 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07232811 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091741578 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073601107 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102969058 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072182213 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086033457 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068758981 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102553146 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08489614 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070655235 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065845914 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089148478 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072437938 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.09352122 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083129771 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087643659 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072037386 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085316626 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062814768 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09701693 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067939626 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092420211 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099480873 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070416544 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084746138 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070296591 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099047684 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066542634 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082048894 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069162262 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097683532 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064309643 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088235736 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081335309 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087022858 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074951871 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101842686 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071020042 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090343799 seconds)
  done (took 6.633825435 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075105367 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090358783 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081070424 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10005422 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091583251 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073510806 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091228622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074470834 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092829391 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079716235 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093846893 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115145614 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069617403 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095678378 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075714036 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094011291 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074971541 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094650627 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074363053 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094750372 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092613012 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082746245 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093216438 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101450853 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105308301 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088752628 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074486905 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093229851 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083187025 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094512036 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104627266 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074575012 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093807824 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101132004 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086160549 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093064151 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067232444 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092843096 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074646343 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093675698 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069485306 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101231898 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072881365 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08843092 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073663041 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093037501 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10183534 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086015872 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096269325 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098250332 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07526113 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101864354 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075190888 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094052758 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101540952 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107839302 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102985031 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101727654 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07442462 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102827368 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101549423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108351149 seconds)
  done (took 6.409039135 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086915138 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094100201 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096036492 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062319522 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063344801 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089397355 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064217652 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082304662 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075319406 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093086948 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076826461 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087746017 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072894122 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095763356 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08830925 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073374668 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088750159 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070589537 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094050753 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069667236 seconds)
  done (took 2.48195273 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07581182 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101369265 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067488448 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071137512 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089243548 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071550667 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087384465 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068941891 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085967307 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069706945 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094524702 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076528748 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085962691 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072866408 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096535572 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072649527 seconds)
  done (took 2.146026712 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077949069 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095877765 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080493415 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087762026 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066909896 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083876684 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068071687 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062553305 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08327619 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081674897 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087381048 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070475705 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087911916 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066649645 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063890144 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090607026 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063698926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083393776 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067307625 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102254185 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079569203 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085644307 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069424561 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068969456 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087408202 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071704681 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086910047 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065020036 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085725194 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068238427 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086581259 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075903822 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083096293 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067100363 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06593024 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083355775 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06792948 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086800479 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069754986 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065149246 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082945806 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066031222 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084872171 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067833311 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080648925 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067265777 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061765641 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090982804 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064664567 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08508665 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066399624 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086469101 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068214968 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07602438 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090352785 seconds)
  done (took 5.092975299 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079859564 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069043649 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081608119 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063804238 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087706422 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067932653 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068435143 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08693401 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067301897 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082907684 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067964536 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087227225 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068312897 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06960566 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086841004 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069643164 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080390641 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068161357 seconds)
  done (took 2.216997307 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072019879 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065624299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093504992 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067582821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084353535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069563289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06138083 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083804477 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064977939 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084154149 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067185508 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067569832 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084026127 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070790542 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085662641 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068100275 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069345386 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084453641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066705674 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080493797 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069284681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064299093 seconds)
  done (took 2.489511091 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072368897 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091710213 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160170011 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106650976 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081342687 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.09857089 seconds)
  done (took 1.476250991 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089992023 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097640195 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06682544 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105524579 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074053593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086685872 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068843287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086296316 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077062723 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100863561 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067634064 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095810105 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095147881 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076445088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093793937 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073677105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087655273 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066916912 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085903563 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105738704 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069221812 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095712711 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068620942 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08699449 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068446814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095204161 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076386259 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099987816 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087405192 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077049423 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092975683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067692979 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096953617 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100404002 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07198098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098787557 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070800056 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107978742 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075302488 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098900214 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070158075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096575004 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099119716 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076076609 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098655233 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070275677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094782014 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069218487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090625678 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114145861 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075855367 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098027665 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095579953 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079518047 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09845379 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115490235 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083694832 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099677863 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095463838 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08420591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098129764 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075026318 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098908082 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103918978 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075736961 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098297969 seconds)
  done (took 6.631606699 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085007263 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105304491 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068544554 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100873577 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095665158 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068914489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086861433 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069203301 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086760229 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068710993 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127569819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068699134 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096449362 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095402452 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068826474 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087646643 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069363228 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094846134 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068152065 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11261712 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086941211 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076440144 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096050812 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094742614 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082243036 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093128493 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068535829 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087469083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068365505 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088047851 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072666023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08837656 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094997262 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067848761 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095566766 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06932762 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087747642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07338469 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087001027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074273836 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095717096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105303288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06902026 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087004131 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081335331 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08713537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067266696 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087304059 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068140359 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087128206 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081247953 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101326572 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100545641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095633125 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069357961 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08692879 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069495487 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086523112 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069443061 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092603257 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076640284 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086860843 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112987643 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068762901 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086865761 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076472492 seconds)
  done (took 6.447595572 seconds)
done (took 128.005112226 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214437296 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18447334 seconds)
  done (took 1.265277333 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068795789 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094953683 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097379568 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127451876 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086347679 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102610968 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118196667 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079162128 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065750768 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085906888 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067318712 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087245751 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131530134 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066785018 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085551502 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069203041 seconds)
  done (took 2.307113536 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101885162 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195129391 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109068956 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065485101 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099575394 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078884697 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084916265 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076694094 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093442959 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066556339 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077378547 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096727702 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065596579 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094905595 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07469433 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097438941 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065277087 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097498726 seconds)
  done (took 2.517900996 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103506222 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141574969 seconds)
  done (took 1.118194685 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.19838943 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12255399 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202332778 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.410396827 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207192139 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276086591 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173163608 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17130834 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154752937 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168199089 seconds)
  done (took 2.953798141 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099067172 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169817303 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308812425 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136894906 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085549528 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115507837 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137629524 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088346103 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100874265 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099198915 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081179969 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096976911 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097285686 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0962036 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073711713 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09696945 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120686312 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074298016 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095497082 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076209578 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117024023 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066528622 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073879323 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093959247 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076615748 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098391441 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066155996 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086220631 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076463451 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093818491 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077963397 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113695255 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096460747 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130168435 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081290599 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130100952 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09720079 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072104398 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094357387 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072701817 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097125423 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076598533 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103242111 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076368151 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086302958 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077360442 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085109044 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066916214 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098571306 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077540704 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098831765 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078472089 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128809578 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097068898 seconds)
  done (took 6.188872981 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.743271564 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110072636 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093565097 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.80357656 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088268008 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1041442 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.708453136 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116476953 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207592233 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766336249 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089054724 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09800955 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180212807 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233765622 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.881371492 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282709176 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637768802 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10770253 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109871592 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132537087 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138885279 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176147372 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148829041 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430839299 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075737696 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091690815 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135920177 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074233429 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159174162 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084035057 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093949839 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155195926 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224535326 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155761018 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095870695 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069622802 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090700692 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147429584 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216548904 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189518272 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157512934 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067741843 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090222699 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139022411 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130640842 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068398347 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139220182 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151473004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.149644393 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07313939 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09493829 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141923544 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137386444 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143070393 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099809052 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269063019 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287674305 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089813141 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099278874 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102681056 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213648771 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103333805 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198204154 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138756282 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167626952 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090393757 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7304173 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147135243 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090485121 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073876823 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118818971 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094481136 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138217355 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144909359 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.347169886 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161695847 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073578121 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088758568 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205253847 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082722506 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091154085 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140462686 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074407539 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120455136 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162780108 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141906428 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146247888 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.205109431 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140165791 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157250937 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074344844 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1220264 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074677135 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188865504 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192955827 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139691219 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184412783 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158712301 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141281589 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146849531 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07509448 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169853681 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096938251 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100262782 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136711388 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191538362 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122383411 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08242763 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093572184 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140383649 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124662062 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085030228 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138135601 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169713751 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454362911 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146270143 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066750262 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107002622 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13862683 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140022288 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095735396 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210945094 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12224974 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145453411 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120444495 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088743846 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118702048 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140162646 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078202502 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121383439 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137065539 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096582722 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212883533 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189845637 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077296547 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193890402 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160326315 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094756134 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148363851 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119388668 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145056643 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076902082 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158074281 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075258314 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766308013 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144164762 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120167462 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07273278 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172470164 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069362163 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103708852 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1026342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068530457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762581734 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086157466 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100038047 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082644731 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094720742 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120527688 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135996473 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072788398 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137196842 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202869266 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095374598 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096982322 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103809816 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139202501 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095579345 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084825325 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104364424 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082598957 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120876328 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093754693 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082920604 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145546316 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161470144 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.172569554 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567600492 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070184545 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103026169 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179329701 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090764262 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.24037339 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15634087 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1775827 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139755725 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10129433 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289752143 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142531934 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.172772536 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086255429 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150892423 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088425324 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13823665 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.1428918 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069597623 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096239011 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140359349 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142789585 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161559976 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911234652 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090717369 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203469526 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067785478 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148370744 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096292816 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076775595 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260035668 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069667595 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.166193901 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.14181599 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073044336 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103481365 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.688024493 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104232555 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139036561 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073299662 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195521835 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141932015 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134818579 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136068062 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096389535 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138320654 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.187372192 seconds)
  done (took 40.203907136 seconds)
done (took 57.428775142 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257065941 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176477924 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240793016 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14306398 seconds)
  done (took 1.792487536 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142031652 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103288184 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116519193 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084706054 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102218037 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08616095 seconds)
  done (took 1.535193915 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.399520042 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26391784 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229481522 seconds)
  done (took 1.794770271 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.282277023 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210322252 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445409642 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296008657 seconds)
  done (took 2.238087331 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174021736 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11244508 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066428676 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104900052 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163104937 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250839734 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126750813 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185950947 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078789907 seconds)
  done (took 2.209615735 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195738149 seconds)
done (took 10.674278036 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123083425 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.269186159 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.17118467 seconds)
    (4/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093278306 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097988121 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108362544 seconds)
    (7/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093992244 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081981751 seconds)
    (9/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.216896671 seconds)
    (10/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.198271 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079242537 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138138373 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07213615 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.194111772 seconds)
    (15/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163432974 seconds)
    (16/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075347343 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.205761376 seconds)
    (18/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.223825991 seconds)
    (19/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099209046 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116830599 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076863916 seconds)
    (22/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.161140135 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072900507 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157230343 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076190625 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110046358 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.132680579 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093409986 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075348265 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.132685022 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10874877 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094003637 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.212217847 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150594713 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.131431254 seconds)
    (36/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.201908857 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.191518914 seconds)
    (38/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073051404 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119684197 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.123374417 seconds)
    (41/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156099404 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094327092 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.145455465 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.208133353 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164560263 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155461738 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068236274 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073578968 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.107563829 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110409833 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.113967179 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.222710573 seconds)
    (53/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073714063 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.136453175 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.116558212 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072125501 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.134251952 seconds)
    (58/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.152421788 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073332395 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068866755 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071105109 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111976545 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072264299 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09243451 seconds)
    (65/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.135510515 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.194281245 seconds)
    (67/309) benchmarking ("sort", Float32, false)...
    done (took 0.149229695 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.177928602 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.176282374 seconds)
    (70/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102780243 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079260473 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05173854 seconds)
    (73/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.131166894 seconds)
    (74/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067278247 seconds)
    (75/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199031841 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078932095 seconds)
    (77/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166547965 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.190341877 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.134236591 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097133527 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072201768 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.15998665 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076200814 seconds)
    (84/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.175560024 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064665231 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098695853 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.067041553 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114259083 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07546968 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096382446 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091477221 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08903356 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094731566 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093734568 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.160895721 seconds)
    (96/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.130097152 seconds)
    (97/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.147322692 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075310138 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066334743 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069402796 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089111974 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052826634 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050720059 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.176744709 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091419249 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07310278 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076835179 seconds)
    (108/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.07491684 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052703264 seconds)
    (110/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074049289 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094842099 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08754921 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113076903 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069618298 seconds)
    (115/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079006774 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.074250014 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.185454705 seconds)
    (118/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073872592 seconds)
    (119/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128954302 seconds)
    (120/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052995669 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191534508 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096207564 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199245357 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051230463 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088795331 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053995837 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053186931 seconds)
    (128/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125482273 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066550952 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072677848 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052569074 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066544581 seconds)
    (133/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.120469546 seconds)
    (134/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051557154 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063456475 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.156656682 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094735359 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065984174 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072781302 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.11117306 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073363745 seconds)
    (142/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089075168 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113817734 seconds)
    (144/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080168983 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093457379 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073273825 seconds)
    (147/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.117782587 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075201971 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051499904 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182111194 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071952801 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087407887 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104722028 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088867113 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074332396 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147857058 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.124861692 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051664001 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067646444 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090464475 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096743382 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088400593 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06573305 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182742902 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074526244 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.158739828 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066368079 seconds)
    (168/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092087387 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051740879 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095785842 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087377154 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06806046 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170325872 seconds)
    (174/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114844742 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100572648 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074582837 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073916623 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070135016 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065938497 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087904079 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191202129 seconds)
    (182/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081732784 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065699566 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094584123 seconds)
    (185/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061650505 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.172683819 seconds)
    (187/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07370178 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202621278 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052807317 seconds)
    (190/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11295945 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068832463 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094776942 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14350801 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073373016 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051702001 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075129937 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052134341 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100100805 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052163042 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.172740717 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051693391 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.0884917 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068043716 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158399495 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094079921 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 0.427197758 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094365412 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066530464 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067815076 seconds)
    (210/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122185586 seconds)
    (211/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066954312 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111116659 seconds)
    (213/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052899353 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108167199 seconds)
    (215/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063256778 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07383827 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095036495 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.0759533 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192185549 seconds)
    (220/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051931499 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063489197 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099113084 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051439341 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.118510122 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062015222 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087912856 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075032621 seconds)
    (228/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053144622 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054059723 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093776688 seconds)
    (231/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063547174 seconds)
    (232/309) benchmarking ("sort", Int8, false)...
    done (took 0.165171146 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075633171 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08697554 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168450382 seconds)
    (236/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.12698124 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066011062 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168121054 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051604346 seconds)
    (240/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196309866 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08168737 seconds)
    (242/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093711671 seconds)
    (243/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068917077 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161761116 seconds)
    (245/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1191242 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050833899 seconds)
    (247/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091756914 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052483187 seconds)
    (249/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.090520334 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080120541 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072291793 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072902579 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065521821 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065608366 seconds)
    (255/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.073761278 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066260369 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051593781 seconds)
    (258/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088510522 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067146877 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07759374 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.13758266 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08905325 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052323104 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065232623 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157224807 seconds)
    (266/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067312814 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.075312586 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051676572 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051312874 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093206578 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062322054 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073819576 seconds)
    (273/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053675101 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112967263 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110553136 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113141329 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053824959 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102079127 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053043371 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143480354 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140590881 seconds)
    (282/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102959904 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074101275 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.074123825 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170003857 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087485514 seconds)
    (287/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07351921 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065270848 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087713739 seconds)
    (290/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067055171 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096576521 seconds)
    (292/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078802156 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152021729 seconds)
    (294/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052860386 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108776867 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051506875 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071483264 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111912124 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052976521 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07359661 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.090310721 seconds)
    (302/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089864849 seconds)
    (303/309) benchmarking ("sort", Float64, false)...
    done (took 0.148595139 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053649787 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092514949 seconds)
    (306/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053986779 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052234772 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065186756 seconds)
    (309/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.084802579 seconds)
  done (took 32.956095439 seconds)
done (took 33.866493617 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080580709 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113137075 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075143353 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114735406 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080924637 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099929072 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073237628 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07761054 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102758075 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081957023 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101032397 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054784428 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096840184 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075058956 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097036466 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092792261 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100614312 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072373787 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073642807 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087703898 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074045041 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087745635 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067751469 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054980795 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100063378 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072512461 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07226946 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097331929 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065243271 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087992211 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068979081 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073292391 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088309326 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078410763 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093897925 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074193866 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075346648 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098334019 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067442271 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08727415 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073711537 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065404627 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094517563 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072845621 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070812884 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093260029 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073690744 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101850614 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091842339 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090526089 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073579163 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099129773 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077114023 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07248266 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092464584 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074262842 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0919846 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092475276 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096592152 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068311126 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073768133 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096553894 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070906236 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095292397 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073949849 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075284508 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098016346 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070556457 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097025799 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070863074 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065407596 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096394731 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068783316 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065724365 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098344106 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076749108 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086617603 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07148701 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072519569 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094282513 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065736429 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090155664 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067605174 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072662718 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089221002 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055369391 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069451622 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0940088 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065318059 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074164093 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094245552 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073013003 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089107391 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076258835 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065541039 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092526301 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066557323 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065630711 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090022225 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069763743 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06590155 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090948655 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075090777 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08898125 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072109524 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08016094 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088536363 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072306259 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086878638 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065647163 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082024986 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098619574 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066266759 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090330633 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065289471 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072793114 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087546542 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065388027 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065478996 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088110389 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071996685 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065805887 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0906774 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072910646 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101657083 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06662549 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069380192 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090082949 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066227807 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071026155 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088633268 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066235647 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089125342 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063131843 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068305018 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08839044 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072673153 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067928542 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096764342 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067478078 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096382373 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070411457 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072180343 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093980852 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064822265 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058866147 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090847635 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068022897 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067731144 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0878723 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068121444 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065492822 seconds)
done (took 13.124108185 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066485404 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168421048 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125420228 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096080424 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110555229 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066765564 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.098787671 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103277536 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09036368 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126371889 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087592149 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107057587 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115411089 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08743731 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066783141 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070047723 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090503997 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08811784 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123566073 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086427302 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139979583 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088041982 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119398069 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090068807 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112418763 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103895687 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089337371 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069993909 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069327673 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115775048 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108616358 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06999184 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067098337 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122756544 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116601405 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084916498 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088732107 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084939585 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088561338 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066182317 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113115519 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09994988 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104681735 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081921206 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094726638 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069024477 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089277681 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086176283 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113929882 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081019585 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110250047 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133462997 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068643051 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104130268 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065487574 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109714056 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081304805 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091129452 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066727723 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090415316 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06623507 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069603407 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111021477 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115181884 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069851469 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104751518 seconds)
  done (took 7.226285222 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084705105 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11591422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084241907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106372289 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066040278 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066393257 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089671227 seconds)
  done (took 1.58518756 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067058374 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08879637 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112925444 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089088407 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108370602 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08771619 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100353039 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067102561 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107569853 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068387241 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087197868 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127696133 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067943204 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097499969 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090907011 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090765494 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091368893 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090002524 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070340772 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112935502 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069648104 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109716075 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069464512 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066949696 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104749348 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067506357 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138874521 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071393499 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090472305 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070883758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06540069 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139675575 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104282202 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077824127 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067173703 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105187495 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081444319 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087806963 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08364167 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095473693 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081677745 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068131597 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091439994 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06538585 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071431276 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101270742 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068221255 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090982261 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07008585 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087329098 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09138781 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081389402 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090201452 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070997161 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068885095 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096741641 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077278264 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090974916 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087761961 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06862861 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108047679 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08313879 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105553438 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083489602 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092606735 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081592702 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104810666 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06999947 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068568267 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094239344 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084215831 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088512439 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068687195 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078093369 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091827495 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090050776 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113553136 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069519152 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10131737 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067384464 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067352341 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090842004 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091237427 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094222875 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067720934 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071788366 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093869511 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065118309 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065966901 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094036334 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065996535 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091014539 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070678222 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067589452 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092514598 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084826783 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067690779 seconds)
  done (took 9.275519093 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069180675 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069274766 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091786246 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068369509 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068391741 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091684329 seconds)
  done (took 1.447789441 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09773929 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092563434 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081356153 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095607551 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106956934 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105619611 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082485395 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106478755 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084536044 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102218632 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082044521 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105791439 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087613748 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096373287 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081842838 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095323616 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082887764 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099873704 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079261792 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096788727 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088225192 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096474229 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074237509 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082829953 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094422631 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072764279 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100944192 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079777621 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102099109 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082860907 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096511395 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071105039 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094924175 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083421206 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104960427 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072619257 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095896216 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071968065 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100089391 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071567659 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106642564 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073900561 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077863047 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09557345 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106106299 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072548417 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071256592 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100400907 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081780834 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09486916 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071496962 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095604594 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070480399 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095054493 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072772797 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106184263 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071831927 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105616639 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073537644 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071952505 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093461238 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071635927 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105649783 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070342197 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103751556 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071808048 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095418449 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074331133 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0968649 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072668181 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071343812 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093316296 seconds)
  done (took 7.322965156 seconds)
done (took 27.827255546 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.646181873 seconds)
  done (took 1.628638892 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.774115279 seconds)
  done (took 1.759050952 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.480208494 seconds)
  done (took 15.469992546 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.612192641 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.759291442 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.809791275 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133856703 seconds)
  done (took 3.29855353 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.886854689 seconds)
  done (took 1.896071905 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234790404 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.246177857 seconds)
  done (took 1.472170596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.731948092 seconds)
  done (took 1.729231542 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.278746379 seconds)
  done (took 2.269072588 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319350001 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180976197 seconds)
  done (took 1.497193475 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.5183099 seconds)
  done (took 1.515577377 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.558342281 seconds)
  done (took 7.562136743 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229405034 seconds)
  done (took 1.242890951 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270340381 seconds)
  done (took 1.273446124 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.08922685 seconds)
  done (took 4.091151753 seconds)
done (took 47.695470645 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077600587 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081407098 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104584138 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079357749 seconds)
  done (took 1.338829443 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07744489 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07336579 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100011292 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072815184 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101584975 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07326759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098317041 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07650413 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072123465 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097014213 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07302741 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095263219 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075844593 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098208501 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071031456 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07539685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099827591 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073055342 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099882887 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074172085 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070768579 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09832055 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076178391 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096241643 seconds)
  done (took 3.02758242 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078215159 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073157483 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097777901 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072865894 seconds)
  done (took 1.325198524 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077184211 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116114087 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089694217 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077274342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.116477574 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110276081 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069471134 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069805417 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095510732 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077808143 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091522786 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097761643 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111663662 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077366976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102925697 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066158519 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069182395 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110681343 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077984019 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100986046 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070524054 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079610325 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091676627 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090452177 seconds)
  done (took 3.148244075 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077482437 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127422315 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078548664 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113661707 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091370629 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065912523 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075842645 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.115112542 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124922301 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.090020118 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070707296 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066513025 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096200606 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066675814 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076690429 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133424673 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135436271 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069081063 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121886285 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066241065 seconds)
  done (took 2.899666891 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075024073 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069830389 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088872024 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069884671 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076534821 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096368754 seconds)
  done (took 1.491365735 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068482883 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0675388 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090899056 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066977788 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071706709 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090748306 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066766038 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06717815 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091817972 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067612555 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066736584 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089073611 seconds)
  done (took 1.915226925 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.422165655 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068569175 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.091992653 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066508401 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070860108 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089976728 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080274426 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068469303 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114950948 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066288127 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090317335 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068234847 seconds)
  done (took 2.312439568 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260812448 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077169041 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321916399 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167759636 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140196848 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155391841 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10560505 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1393245 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196018633 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13746778 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19987676 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223885869 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133229401 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168342754 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11447973 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131965516 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186671165 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222605008 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104928861 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22423221 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206621408 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156550306 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180490596 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128207512 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134309609 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151454809 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072054125 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105153353 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231892178 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160874821 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201410586 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137420504 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097071671 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230453417 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225581797 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196449904 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163406992 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084347717 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156880025 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163433 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255582045 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113872264 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19333517 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13371038 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105013727 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172263132 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14565147 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146124192 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137527967 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11428297 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173258856 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240043037 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164373778 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111883983 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13672097 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141047949 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143790184 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103602286 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269038545 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194555591 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15923184 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095931856 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099566272 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210602526 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15845999 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141656308 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153461574 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119198389 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166840688 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209933708 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146102123 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17260497 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179542298 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089143306 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146624324 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193990156 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156983388 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228027422 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154274347 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073456065 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152426971 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129298877 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106596943 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143561824 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100777737 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206855763 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12490542 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139304734 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13977747 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134926818 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137052976 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195994659 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201488493 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129795868 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066565067 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131254958 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149702297 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176036071 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114148194 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134588491 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147346391 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08023868 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19064775 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075494036 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153556009 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104537354 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15204545 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163413013 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076201962 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178006666 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102793058 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127812874 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163159726 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219615604 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116228487 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083680368 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227239781 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156258305 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131671185 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176100284 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213737842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102205271 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130673917 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204483116 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24298227 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090660108 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2232433 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133684781 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083725875 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11350706 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154451381 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139209743 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149532376 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10775257 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153946404 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225540972 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075454728 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121303163 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166406468 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082075159 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106946052 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139882663 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128147156 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095528876 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126247064 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133900043 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169375786 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180170903 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109031848 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178258995 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100162831 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225875334 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115877735 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13065876 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105269507 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095667125 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166141585 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219155656 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080551842 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225855918 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1550214 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132016297 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148208624 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083664755 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194624013 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079676626 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071457986 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200056176 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139061104 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137612662 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184159852 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130208549 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154955976 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152158748 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163226942 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185033066 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16256245 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133098939 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08796739 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139312325 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153416616 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098871848 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120802025 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083862729 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130761954 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122618834 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083854628 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197249962 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154880868 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12651584 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114282872 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12313546 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204517014 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078404912 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15751372 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146481953 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120711972 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211335651 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187488769 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164644506 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125655733 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201436578 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071343773 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074208393 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116690482 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155432662 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109430809 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08331698 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169610796 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179388324 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156372615 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166436561 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137984432 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14835524 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212176298 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07241791 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143369392 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179335019 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152195606 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153891313 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11283617 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10016818 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199529765 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109891898 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271177456 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143250735 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153074313 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181261768 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130286979 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105500193 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106514567 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192791091 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133222316 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181049115 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126346052 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114139899 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135786903 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081676903 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131077418 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154530005 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147745892 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188882019 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142862758 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161366692 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077715003 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143843119 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175109835 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150432983 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065441268 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148516593 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219780251 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1218713 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145355683 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189710909 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105324555 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15281222 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208621407 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200999014 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109872982 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111209559 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148602983 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181772122 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147156344 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170141832 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138430599 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164450885 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137396653 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086150162 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114322038 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12462094 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133659374 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096698943 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138527337 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143992268 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121569068 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15921159 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1383351 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138193599 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146463636 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124474318 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092340274 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124395658 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234665122 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149945943 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234493344 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102058256 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205733526 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225888347 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075771697 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105751859 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081453362 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167660182 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110517804 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161248053 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124414754 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131779802 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155170318 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172167595 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122003889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068595808 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136810702 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164233666 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138872408 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124323481 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133061553 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223111875 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104118887 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105819757 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153421092 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106486568 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129174399 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234434393 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.086930938 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099398043 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101632951 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081480937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15770156 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213952138 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108666151 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130914355 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143483852 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148575847 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181331867 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103856268 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126164988 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142383491 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178112307 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182962851 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09066856 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14009887 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157362639 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212998048 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132905443 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121191947 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203628961 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211640049 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219612406 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090520566 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142513199 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14274153 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13680537 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195520767 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084905289 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226533116 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108103199 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167055338 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131496504 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119330144 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159520627 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125047613 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089321825 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205420192 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147729777 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100251602 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106425448 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146175637 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151415566 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134000218 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075640518 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193228631 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073121817 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193350552 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203871452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107427056 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132251011 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097815806 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108328073 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136412149 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130408446 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087918824 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143536546 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230177313 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091894319 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207127411 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170819641 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140349241 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192983787 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126448307 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662187531 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079532347 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212255628 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148037194 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236488184 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123489388 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147273379 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112310046 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151183868 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199883074 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132145351 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204027732 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162904431 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14930338 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079638326 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129411601 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138643975 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117925841 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134357251 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142431099 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144136134 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126180235 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.14874411 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156181085 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107675769 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096096437 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21542499 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145504127 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171941595 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168993016 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111703673 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14708686 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193976735 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080730819 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150475651 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213410385 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135506437 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124259682 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082519449 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132991604 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232347896 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073897714 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220397058 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153053915 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138527567 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141886303 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147506265 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186990088 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109704374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178921888 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097002094 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139513567 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142880132 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111175372 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103409478 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107872792 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139769859 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126696982 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129956312 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122328062 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20852131 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071108406 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123707539 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130242772 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174949081 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236865752 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115744364 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084117841 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147268821 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140737792 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144331516 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153662321 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107897654 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107802571 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08268998 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.136792621 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11213339 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142145404 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131165699 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13836195 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22662092 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085429711 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250583042 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12220575 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132471552 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070784794 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105848095 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097399892 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124053824 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136098021 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127095551 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205107033 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123443813 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11702605 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119553714 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074959656 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083435856 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183362641 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13836001 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150234081 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099206218 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.089320602 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137933333 seconds)
  done (took 71.133881469 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133806744 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103693058 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117192784 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171824309 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144377961 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236964413 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180092082 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22219332 seconds)
  done (took 2.406856478 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069609938 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116433087 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102252987 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115692997 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089305531 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068727303 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293924165 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109963096 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067274196 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113746846 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118758065 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091515891 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470428057 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066823399 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093646457 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084328484 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067611448 seconds)
  done (took 3.228920995 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427203434 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628245302 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448851983 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074162548 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.862860584 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106565421 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.32816695 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161585151 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091066039 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.429572713 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.723283097 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.150520348 seconds)
  done (took 17.526553365 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074491069 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068966589 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109341422 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083351313 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098959923 seconds)
  done (took 1.531293169 seconds)
done (took 114.283370994 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079438878 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.343414948 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053137218 seconds)
  done (took 1.524562322 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08390551 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084178499 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110630131 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08408333 seconds)
  done (took 1.470795725 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074800785 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076482263 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110742517 seconds)
  done (took 1.369167609 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277824441 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165194565 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087701743 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082294685 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077948675 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.1041241 seconds)
  done (took 1.371084919 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072314606 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074881149 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098734759 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07583721 seconds)
  done (took 1.421805722 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07611478 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052948702 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054900817 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081555249 seconds)
  done (took 1.372176532 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089757871 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105386776 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080093487 seconds)
  done (took 1.379039533 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106663154 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112235637 seconds)
  done (took 1.325719004 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081561876 seconds)
  done (took 1.183479309 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094313481 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138711282 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155644013 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.13730934 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165886961 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136933339 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.114146429 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087819475 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104405056 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115643026 seconds)
  done (took 2.358846585 seconds)
done (took 16.479545583 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077747935 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387676055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361056565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116725049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668222383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356577096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004327905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118686699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120927616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094424469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08293337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675531846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.968227307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344780696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955393262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322003732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675467523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068200721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092721647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067770515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961863421 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093603243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068005566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068933804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674540869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371169177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094569825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323189003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067583992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095394592 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354870846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094198374 seconds)
  done (took 15.923879561 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0706276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143633434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073934111 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083345086 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096860783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069034389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098364808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069504649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152188884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067465933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111197993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067533755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097562873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068292339 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08701626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094636211 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068648202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068195662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094308421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067849874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112529576 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067974187 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068651325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094393827 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067859042 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10663708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068884531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068413503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094400403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069709982 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097866983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06962722 seconds)
  done (took 3.842522375 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114728022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151941497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073498973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12820016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112740088 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097013004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169528779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093453593 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155490193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068541242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110834539 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067890112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127702165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068337581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113601212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068577671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06901574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094183146 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068475318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094519085 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086744355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093159955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068461512 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068288077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094605198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081540484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094335486 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068404595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068278509 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096234374 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071105553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094914577 seconds)
  done (took 4.147673076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071995207 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075051582 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108706125 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083139642 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095277805 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072356431 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072498279 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096466823 seconds)
  done (took 1.786223255 seconds)
done (took 26.80109027 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078204173 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070616098 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098844173 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08084904 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099024558 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079953825 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067192442 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101757118 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077040166 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072872264 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102269529 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067296553 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097699138 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068097887 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074317562 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094095414 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079497778 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098382194 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07932502 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079743693 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096385742 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077210221 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100847539 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079795586 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105842286 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07923143 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082440697 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099829351 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068636987 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096291334 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076124987 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083348139 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095020446 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079216301 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094060647 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068258309 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067415469 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094158354 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079186922 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100091841 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070967833 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100079928 seconds)
  done (took 4.667238046 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088251439 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090740582 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111715892 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064799311 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097412507 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064620114 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.1150908 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063623589 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058867116 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114236085 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055380121 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058806508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089502819 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054348987 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058336651 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056325141 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087660605 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055851942 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059222845 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085194029 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057472578 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053698995 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086251074 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062182766 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055680784 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087298623 seconds)
  done (took 3.048430989 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074563864 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083238121 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113045082 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126116475 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.130891981 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076754641 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104613247 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086678092 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111941866 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067265101 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07089221 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121551987 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086772347 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100527403 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067854389 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113148925 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081192641 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069033919 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.099907218 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089441597 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.110508106 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077181112 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118324692 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080391889 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066918094 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096104103 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071222682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107436931 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073273484 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076437232 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098868353 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070581257 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096434049 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07908631 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072256966 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096020441 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089046808 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10417828 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077607733 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068089149 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098449448 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068415449 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114420095 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111968433 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093907614 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074415626 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074636275 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103434669 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06720557 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112389046 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076029347 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066809484 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097037992 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067139563 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094261573 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08084738 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069415472 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096662716 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077011464 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096789433 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079590341 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071183002 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109442851 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06692481 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101835912 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066771462 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068221872 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093963717 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091532265 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068498735 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135224118 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068487592 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095017437 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077363638 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101326574 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073442263 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068069371 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109082877 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077304418 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098046235 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076021483 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070710283 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097212963 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087391385 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096835647 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069549677 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068616745 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100827353 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070477436 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095123518 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080655915 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067777657 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097485153 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084645579 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093740177 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069090385 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074353702 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099615433 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067280178 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106509071 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072977506 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068601485 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104365468 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067791552 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097339987 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077711733 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072497331 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.0937733 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072078521 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100545231 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068157378 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069016454 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097069681 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069095435 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10356265 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073526018 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071654624 seconds)
  done (took 11.243192934 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190292665 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.18524246 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.079796241 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177186526 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076031062 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107357865 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177948789 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095807627 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095434977 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06771118 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068937381 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129660554 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123774062 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105625534 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106078341 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068559348 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11298835 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104265264 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181928982 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174443135 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114581645 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076471678 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070254113 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096488117 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069721539 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105100023 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085000161 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102485979 seconds)
  done (took 4.283097758 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080977212 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128427512 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073361457 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089286398 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118124768 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068154687 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101615142 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069612208 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107768014 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079808791 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095012157 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073707752 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074218817 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104694326 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068664448 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104818256 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078230263 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069466722 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098428513 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072564374 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104824177 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081008643 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071840364 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.093943053 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073512803 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094400158 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064711424 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112231468 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068731792 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116177228 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065837406 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.0744607 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108490271 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068540387 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094739469 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07132466 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070496849 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098392491 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070314442 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066211875 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093623336 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057509839 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066580194 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107393597 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074139997 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087301335 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074329781 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072906321 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099560153 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065327302 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098263349 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071132523 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071210308 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103904844 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073355397 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073005835 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099835069 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065752398 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103334797 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071692646 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063798831 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094057772 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073428433 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066636262 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102473957 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072620312 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093912529 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071119642 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072068793 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101487719 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071061546 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070433736 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092562119 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06927278 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09939227 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071932762 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071373211 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09375415 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067707921 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068442465 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082571802 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068309548 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053945672 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098755576 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066407631 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066336035 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097858865 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074152809 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107394695 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.0695114 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10063086 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068729211 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06695121 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098685962 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063224859 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070305449 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111093452 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110446454 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067595608 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065516729 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109506882 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072214708 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066597894 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083465655 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07457165 seconds)
  done (took 9.79252501 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095430129 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09182169 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.0976115 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08238031 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123601779 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092993141 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10252174 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074732156 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069155045 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111559196 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067881957 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103490835 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068030816 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076576161 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123889269 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075144446 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097527045 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077787951 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072038081 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135135014 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082958237 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.1093832 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080111713 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095804314 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072463405 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079123154 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123202455 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079930129 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10582744 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08476862 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079800209 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122768316 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085623909 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099229923 seconds)
  done (took 4.285550528 seconds)
done (took 38.429549425 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.197577821 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.42412654 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194373157 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.09399306 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.200865789 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216389203 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.20455223 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198751532 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.271755872 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193264705 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.439852706 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.787180311 seconds)
done (took 58.559005369 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.270444822 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.334187002 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46505231 seconds)
  done (took 3.935736377 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.559908145 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.080584507 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.454304947 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.19388809 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196893488 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.497962686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.794198774 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.026430064 seconds)
  done (took 27.380531229 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.192762064 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.568374049 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.515177354 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.52091488 seconds)
  done (took 17.935437169 seconds)
done (took 59.221430859 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.2229066 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.218602091 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.239672362 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.189947812 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299628344 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.225807675 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.423847512 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.375543008 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204702849 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179527679 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.195867318 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.198908029 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.205188466 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.445114747 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.203495675 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.196916774 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.214508318 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.612030586 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.570164435 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.198233115 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.203532597 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.204075017 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.199085895 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.214420358 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.207064475 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.196224637 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199242936 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.220506978 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.398891551 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198848873 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.285100371 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.5993181 seconds)
  done (took 190.884927284 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.195334209 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.126007682 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.236323521 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.220638434 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.605479652 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393233355 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330393826 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.684727947 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.213593551 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.20571217 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.487951793 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197251264 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.533954336 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.165602025 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202875455 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.262035565 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.434116365 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.51723076 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208357332 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.467708467 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.223871364 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.507764408 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.443427324 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.416452228 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.215511589 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.284440311 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217681325 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.204059605 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.387233265 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.371008265 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.239755816 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.21874713 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.761270025 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055882374 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.203436718 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.215392486 seconds)
  done (took 149.79369354 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.448923052 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193802585 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.195539876 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196699999 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225741038 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.195204278 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.712300726 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.716218359 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.692463842 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.4134759 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253313028 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.363691333 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194933528 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285875048 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207783697 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19606179 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210160703 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.218853923 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192109657 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194664348 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.702503243 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206080905 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.263388388 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199000859 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.194497929 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221203799 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586647064 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193963006 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222353835 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.50637733 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236256776 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192147538 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.441574102 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.881752232 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300862357 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197133265 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222843424 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.19596295 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.45889143 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19311446 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.194522793 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.19650923 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.734714584 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196952183 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.701180197 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197498243 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.037516088 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.193339485 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197874269 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195157029 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.315397897 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.574871118 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.197291538 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19592703 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198183016 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194942979 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19506344 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.223399957 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.334041165 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.288182061 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.199078631 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19725538 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223430919 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195763926 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.225755573 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196731615 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.578151385 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249481396 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.301036321 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.695597556 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196157151 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281884263 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310506324 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.193393538 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.192571563 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192400007 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191744716 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.294363372 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.192212813 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.555934097 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.192807459 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197933796 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193066057 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.250245166 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.283845499 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.191778264 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.445153468 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195323385 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.192070494 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.848634225 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281852053 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.192092762 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.191459765 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191732126 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192226433 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.559634363 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.192404323 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.690094734 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.312801608 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.196934976 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.248689375 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.194521591 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.573174671 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.668189645 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.756224402 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198614309 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296926882 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19781022 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195665145 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.193965388 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223351564 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.193632174 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.250376657 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.193764314 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.586484944 seconds)
  done (took 341.811835804 seconds)
done (took 685.074700175 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.867440913 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.852673774 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.961332498 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.849038911 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.831717809 seconds)
  done (took 10.495288446 seconds)
done (took 11.631389033 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.366215818 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.365521697 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249066257 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.365027038 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220184093 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.382817578 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.344847116 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.21911967 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.288879528 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.26165758 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.287803657 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239948027 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221838264 seconds)
  done (took 17.949194553 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.497672404 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494173646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259633038 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.489403606 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237373335 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486555648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387128261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.390286104 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.382603768 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.20960316 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205977073 seconds)
  done (took 16.17804473 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490855883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.487678705 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261374201 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496465948 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237349241 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490510975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383695743 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.388994 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.37865104 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209951502 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205618497 seconds)
  done (took 16.166813967 seconds)
done (took 51.429416707 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.198800701 seconds)
  done (took 2.334943501 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.232095867 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.397784843 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.212518909 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.203047314 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.19962708 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.201472164 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.202841603 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.198854845 seconds)
  done (took 10.985081449 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.199705389 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197510902 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.1967385 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.199587182 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.200878934 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.198645025 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.195847342 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.198604285 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.196597407 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.195408504 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.199279047 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.196450964 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.198780754 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.198134715 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.196625458 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.196922492 seconds)
  done (took 20.301879848 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.198478182 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.196431031 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.196793523 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.196115394 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.196723308 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.197237884 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.19806095 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.196612299 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.196028998 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.196345482 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.197112502 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.196532842 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.196554108 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.19732682 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.196955028 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.197721454 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.195837914 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.196575223 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.201241572 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.196931592 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.198511983 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.198053683 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.197316137 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.198308029 seconds)
  done (took 29.870887797 seconds)
done (took 64.629184877 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.037632769 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.66030704 seconds)
  done (took 8.834892324 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.200035322 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.199506737 seconds)
  done (took 3.537216851 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.200405162 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.199621318 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.199467613 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.199616009 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.200156678 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.199642584 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.199718936 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.200417196 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.200630468 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.201757106 seconds)
  done (took 13.137446242 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.201088544 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.200368344 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.198216966 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.199512788 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.200644803 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.199254364 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.200427459 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.200138426 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.201136409 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.198343426 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.200329639 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.19811958 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.200842927 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.198963894 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.200796254 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.198994665 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.198681117 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198777748 seconds)
  done (took 22.731844796 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.200383778 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.200999264 seconds)
  done (took 3.537888119 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.197461235 seconds)
    (2/7) benchmarking "second"...
    done (took 1.198497407 seconds)
    (3/7) benchmarking "month"...
    done (took 1.199062502 seconds)
    (4/7) benchmarking "year"...
    done (took 1.198600044 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.199511703 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.198399841 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.198397687 seconds)
  done (took 9.526794917 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.201379691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.3758617 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.463897212 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.798549092 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.203181472 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.204957388 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.048634833 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.205717181 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.207499729 seconds)
  done (took 13.846258212 seconds)
done (took 76.287638034 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.15858319 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.194978749 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.959847116 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.209955145 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.212112907 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.493080798 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.197747637 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.31299589 seconds)
done (took 36.877846115 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.202415387 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.868417899 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.906708401 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.193929316 seconds)
  done (took 11.106456664 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.188432855 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.024614301 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.182785999 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.123065664 seconds)
  done (took 17.656788361 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.75633277 seconds)
    (2/2) benchmarking "read"...
    done (took 1.526160922 seconds)
  done (took 4.419052481 seconds)
done (took 40.520880266 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201882154 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.200504681 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.198571615 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.200867046 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.19882595 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.198345588 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.198132841 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.201152541 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.202118288 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.201117303 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.200465946 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.19961144 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.201073699 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200649548 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199139059 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198051915 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200104634 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.200590237 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197453257 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.198111121 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19747871 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200033261 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.198656692 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.197963405 seconds)
  done (took 29.92983865 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.20071851 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.19954221 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.200479092 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.200344903 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.198489423 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.200589851 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.201170522 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.199704761 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.201591732 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.200579547 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198586623 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.198932367 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.20089807 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.198594164 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201120538 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.198493213 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.201143531 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199426852 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201911502 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.19913474 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.20142594 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199470999 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20093315 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200998244 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.199494877 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199454435 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.201318484 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.199173059 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201684741 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.198014962 seconds)
  done (took 37.14151601 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.205714024 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.208021813 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.202780004 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.201247343 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.200990443 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.200681347 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.201205506 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.200979688 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.19961895 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.200731064 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.202091115 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.202629462 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.200583281 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.200623214 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.199911985 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.202034399 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.202412542 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.20272188 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.20148873 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.20288201 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.202374616 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.201276158 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.201966307 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.202264047 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.202666632 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.202206695 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.201567552 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.202125764 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.201732802 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.201291721 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.201540077 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.202254105 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.202231776 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.20184118 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.202339534 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.200939403 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.20691639 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.207888867 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.201492296 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.201493215 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.202508643 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.202201938 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.202683483 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.202753137 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.203980292 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.20211795 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.202940308 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.201483249 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.202076132 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.201963723 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.201807924 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.202347847 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.203134066 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.203164669 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.203328753 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.202282684 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.201336732 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.202470699 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.20294358 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.202971316 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.20261581 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.203347746 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.202369015 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.20311352 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.204048138 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.20335477 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.203354809 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.202978808 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.203715749 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.204749827 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.203545609 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.203052516 seconds)
  done (took 87.719703454 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.203414529 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201002908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200614575 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201307513 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20198956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.203643205 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200819671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204184069 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20119976 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.204350047 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203764534 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201481376 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200438095 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.204124631 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203728893 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.200518853 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.204543056 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201649286 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.204160197 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203828272 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204558212 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.201928514 seconds)
  done (took 27.596733465 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203384109 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.203647518 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.202689035 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.204649807 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.202123762 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20464993 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.204436656 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204316759 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204226978 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201700593 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202614621 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203994385 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.201216785 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203205202 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202565177 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20215983 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204627942 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203095113 seconds)
  done (took 22.800950796 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.202722139 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.20278161 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.204848543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.202696984 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.203152309 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.205352177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203362976 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.205133006 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.205711856 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.202884489 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.206038838 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204867103 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.206004128 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202607841 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205588316 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.203808269 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.206170266 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203440786 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206649529 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203059484 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204101672 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206764507 seconds)
  done (took 27.640356041 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206157678 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205779657 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.203502412 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.202951705 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.20345535 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.206381877 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.20575961 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.204291123 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.206210815 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.206109444 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203572921 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.206652836 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.203871338 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.20521038 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.204334212 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204005596 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.206868059 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.204751525 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206743354 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204339593 seconds)
  done (took 25.243867652 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206747494 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207746945 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208380179 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206433413 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206488319 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.208040439 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208038204 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.207658488 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206948849 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.207952345 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208801045 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.20847363 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208101439 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.207090649 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207953362 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208128646 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208452342 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208275698 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.20814696 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208974311 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.208985225 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208438855 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209430002 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.208567734 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.208086402 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208967307 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207887675 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.208574986 seconds)
  done (took 34.970906308 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208050888 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.208789151 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.206480288 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.206976828 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.206764252 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.206946496 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.207629012 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.207518643 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210876619 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.206349208 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.207964346 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.209324791 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208791696 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.208717692 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208598213 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.209431054 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208890852 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.207802767 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206574954 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206417927 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.208755322 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209260986 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.210290779 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206731913 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207041751 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.209426815 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207594081 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206636955 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209488174 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207377494 seconds)
  done (took 37.387571634 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.227966941 seconds)
    (2/2) benchmarking "in"...
    done (took 1.227577057 seconds)
  done (took 3.60236296 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.207272479 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20957325 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.210750679 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.208418922 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.207877278 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212426926 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.210360501 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208446325 seconds)
  done (took 10.822114124 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.211174889 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.210786239 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.211552105 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.211533246 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.210987445 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.214393021 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222938648 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.22540915 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.215588755 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.213691432 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.218175012 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.220479471 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.219850157 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.21285258 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.21392447 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21694639 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.210823969 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.211420693 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.211426949 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.211546191 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211128848 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217351116 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216803868 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.209852658 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.215400418 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.227835434 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.222351011 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.212494378 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.215852233 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.221369364 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.214599845 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.210076869 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.213048757 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.211757692 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.212700181 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.21225076 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226865309 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229793979 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.224153941 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.212909768 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212818441 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.211074972 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.217743868 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.218735724 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217747942 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.214131088 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.215141663 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.211758048 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.215390804 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.217417011 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.216523067 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2142288 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.21035732 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222686647 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.218664781 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224851284 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.227889575 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.2174235 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.221960607 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.227292074 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.230777132 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.222218201 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217967061 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.212911095 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225911807 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.2361684 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225967532 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.225925316 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.211592165 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.213978172 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.22681575 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.230667289 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.225046717 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.213749083 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.214022799 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.214044273 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.216681595 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215619138 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226917671 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.235578534 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.214832482 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.214557287 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225530847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234680072 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.21608906 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.214912538 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.215260197 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.215150103 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.217993399 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229944543 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.230170831 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.215347286 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.218537628 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.217636201 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.222012479 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.214561694 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.216013405 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220012534 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.212991102 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.21644325 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215006776 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.222109344 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.227281132 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215532866 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.21504337 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.227672672 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.217574344 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218040577 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.229884872 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.217218753 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216001834 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.220769822 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.226662018 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.214087419 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.221270024 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.226374256 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.217926143 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.22068541 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.216949791 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.217707451 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229011771 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.242729794 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.21751737 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.217929473 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.223776359 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.226421421 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217057602 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.223496723 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.217504483 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.215832228 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.21542892 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.222639206 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.218074078 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.221163006 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218040889 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222582306 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.215098286 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.217812176 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.218239126 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.222754179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.223134083 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.220790577 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.221669506 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.224126634 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.217777228 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.223034122 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.22987055 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.222664004 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.222825281 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.222549607 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.216634814 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219709603 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.223056347 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.218159503 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223142679 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218442197 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.220956876 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.218594336 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.219272146 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.219063427 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.220174659 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.222463986 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22431079 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.217902035 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.228202057 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220955406 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.216570613 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.219974836 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.219663191 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.222248225 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.219787011 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.221119217 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.224055177 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.225868363 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.221211584 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.221001509 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.227907032 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.219206309 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218926597 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219680627 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.224847529 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.229314685 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.220064259 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.231383792 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.221100288 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21879527 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.220548364 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.22320612 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.223270532 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219478878 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.224965936 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.226186181 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236410819 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233005176 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.224270486 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.224133193 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.224505039 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.224023553 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.23027098 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.219736009 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.221749606 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220870671 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222905571 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.221020799 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.227054562 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.221616797 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.22354293 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.221387936 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.222893551 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.221108896 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.22283608 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.225513779 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225779792 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.219900599 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221786321 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221126208 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.223519097 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.219038929 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223102308 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.2225125 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.222187836 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.222402777 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.235384997 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.220069378 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226793403 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226380461 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.225682944 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.223753585 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.222846174 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228276501 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226081105 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234019559 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.241198006 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.225523855 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234755151 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.23946631 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.2258238 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.229397464 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.222979842 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.220859386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.227226285 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.229288201 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.222966108 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.223067524 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.222392275 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226681288 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223604583 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.234158334 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.222378212 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.224889142 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.223583946 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.229667659 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.220991322 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.22718471 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.228676717 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.228016564 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228287239 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224027471 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.224489554 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228163532 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.222502335 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.223944844 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.223458419 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228307619 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.229155604 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.234025308 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.227887128 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.23022209 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.228980272 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.228300876 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.228462855 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.223730337 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.227105991 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242260175 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.231660118 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236813758 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.23134203 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.225918869 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2366171 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.228700257 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.231825459 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228040016 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228792416 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.227591645 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.227098734 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.223146396 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230694797 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.225719194 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229738069 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.22851136 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.230004318 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.226890222 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.227571304 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.225474342 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.225220641 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225934678 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.228812292 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.225998299 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.232503249 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231512546 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.228854505 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229418823 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238632703 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245246314 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.231193566 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.228365275 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.229190716 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.230338106 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.229777118 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.22615117 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232590938 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.231326396 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.232052865 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.237719107 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.230463869 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240523616 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.226970213 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.231078547 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.232690414 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.224324099 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.227937776 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.230220272 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.227032898 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240062864 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.241070328 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.23031455 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.229102029 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227348709 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.226956204 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.227749726 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.227142129 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228256462 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.226925953 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241596266 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.245903969 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.233913438 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233171718 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.224735209 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.226807454 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.228251064 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.22973796 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237127111 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.228441782 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233687789 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.230684685 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.231960601 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.228535252 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.227897451 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.228772773 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.226578964 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.228598818 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241650397 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.246217435 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231230312 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.229477831 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.243654561 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228926188 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241260444 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.24433393 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.23251821 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.229525929 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.229466608 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.234330775 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.231305174 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.234381902 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.228969828 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.232873564 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232532075 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.228070391 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.235608946 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.2325733 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.229775403 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.232137452 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240831996 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247511866 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.232464599 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233838386 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.227155009 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.233801504 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.233023202 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.22994067 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.230951837 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.233955394 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240311231 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236017134 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.233335183 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.229198729 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234505065 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229093208 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.230667762 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.231096869 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.229959929 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.230818173 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.236625742 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.229838095 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240626925 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.23082042 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.234388981 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235834976 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.233194678 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.246039641 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.231767669 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.23497103 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23057248 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.231785735 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.236139538 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.235433189 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.23068766 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236154377 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231904003 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.235528678 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239725652 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.238597372 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.23739927 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.233108472 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.231235564 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.235723775 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.236847785 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230981828 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.232484589 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231009701 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.236641855 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.231610764 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.237701912 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.233148175 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.231894396 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.235842017 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231982109 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237185438 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.240271694 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23575319 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.231273954 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.233926529 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233701062 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.234084031 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.23665812 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.249508748 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238638358 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.243715707 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.242857942 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235915553 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.236902909 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237154015 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.243927319 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.233880641 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.237135575 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.233015873 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.23866506 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.237343186 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.239432049 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233708657 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.246029081 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.238675591 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.238354956 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248032159 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.253000893 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234084567 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.23776375 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.240498599 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.237278951 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.231584021 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.234851986 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.235915928 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245994945 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.25412876 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233973553 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239784707 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.234868898 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.238699584 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238407588 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234763152 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.238766772 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.232456098 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.239121471 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233757223 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234870943 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.232857444 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.237986973 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.237892327 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.23993799 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.243931066 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232174415 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241201247 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.238020175 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.238894986 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234866326 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235825421 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.233213084 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.233489188 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.239537618 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235175354 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.238535911 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.241640691 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.238955665 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.239072193 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.236830865 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234769569 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240305401 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.245944704 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.241018844 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.234343742 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.238645782 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.239555607 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.242332182 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236450293 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.23577246 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239214383 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.242056981 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.236610443 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236066042 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.237337668 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.241593336 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256634593 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.251996508 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240715147 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.241591436 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245901746 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.238615662 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.234495312 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.238275436 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.244514285 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.242925265 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.242973895 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.237257127 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249806746 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255375863 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.241192803 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.241740627 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.242926193 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.247520475 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.244439093 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237460796 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.238143631 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.2453525 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.256840097 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239744866 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249607347 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268381449 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.256176406 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.24269651 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.237427791 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240049013 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.237302091 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.243604278 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.237690268 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.239341502 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238875801 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.238535736 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.241535124 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246685594 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.243296481 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.239506512 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.238703345 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.243478625 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.243808749 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.236400876 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.239076884 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.238944933 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.238480466 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.238063616 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.238543374 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.242172766 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255867815 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.25256298 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.239752517 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.238485803 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.236638549 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.247825899 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.244703344 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251465132 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.245480678 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.238862799 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.239934183 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.245296035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239543103 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.238088135 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.244213691 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.242697719 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241364495 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.237128038 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.257178038 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247051966 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.249710981 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.243000101 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239417634 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.241229939 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244770276 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240085611 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240198356 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.245636905 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.244004486 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243056722 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.24133457 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.24143919 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.245632799 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.247064549 seconds)
  done (took 734.120141126 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239089418 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239193387 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.239308659 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238637888 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238915291 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239132965 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240111947 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238968825 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.239102082 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238469361 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.239717258 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239859692 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239357606 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240170045 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23951854 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239256093 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239919826 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239689293 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23966684 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240241196 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240115303 seconds)
  done (took 27.205409706 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.242202261 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.239645881 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23935822 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242575152 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239540164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243057394 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.240643279 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243627383 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243371943 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239728479 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.24353175 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243435229 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.240593647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.241067444 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239931778 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242727994 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242823269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241151481 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.242692513 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240026821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243540928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.241163294 seconds)
  done (took 28.495421549 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.242184415 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.242627237 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.245010358 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.240732837 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.243974937 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.241688499 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.243039476 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.243391391 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.245252386 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.248479964 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.244709858 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.246687421 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.251097382 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.248077811 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.249858385 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.243795829 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.388024599 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.243805651 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.243332896 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.24358069 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.241764124 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.254215495 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.243156408 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.241634715 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.245418125 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.243940391 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.244569908 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.244680934 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.24403858 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.248522124 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.248088534 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.244785737 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.247553846 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250096342 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.246921066 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.247836719 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.248177617 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.24499909 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.243973844 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.245246483 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.257258984 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.262933349 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.245827708 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.257151852 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.24583576 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.246785092 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.251385299 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.251276531 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.243171767 seconds)
  done (took 62.40120068 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.246461363 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.246092939 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.243813665 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.246970044 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.246113316 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.246686857 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.247071187 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.246789597 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.2431589 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.243903508 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.247921073 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.242929251 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.242108701 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.244389605 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.245477409 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.242004179 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242363801 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242512572 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.244504048 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.235002078 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.234232068 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.236718092 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.236902418 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.235752977 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2373666 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.235902344 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.236658864 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.228468048 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.225388752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.225240059 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.228021347 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.227632391 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.228877194 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.22624049 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.225787525 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.224307084 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.221046388 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.218902679 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.221223522 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.219769348 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.221297409 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.221311674 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.221232357 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.222170195 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.217321859 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.217422274 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.217380207 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.217702885 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.217665819 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.220516018 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.220034664 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.217914057 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.221116662 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.217603361 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.220464443 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.222019084 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.217496737 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.218179844 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.220785624 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.21809127 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.218350302 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.222013489 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.218659708 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.220914315 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.221325478 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.218586289 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.219563532 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.220943139 seconds)
  done (took 84.792558025 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220691769 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.221316646 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222070389 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220942284 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221523225 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.221541063 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221227606 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.221353197 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.221441405 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.221117954 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222402559 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.221554254 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.222360435 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.221859136 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.221837978 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221302506 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.220782074 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221829783 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221111882 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222224156 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.222577556 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.221412585 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221653047 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.223093371 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222350196 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.222987702 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222671471 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.222167516 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22282457 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.222338942 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222665066 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.222933132 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.222189257 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.223273891 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.223459319 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.22303799 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.222856331 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223121766 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.223178955 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222958234 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.223328998 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223460639 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221684415 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.222660623 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222805519 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.222763075 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.223916667 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.223684441 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.223170071 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22350498 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.224091209 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223785535 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224501653 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22349818 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.2241913 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.224274832 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223992759 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223047021 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223497792 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.224177155 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224159977 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.225013596 seconds)
  done (took 76.964792641 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223559666 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22472205 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.221790092 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.222300643 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224185166 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221981993 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22398419 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.224702428 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224610501 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.224903265 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224976399 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221833334 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221437177 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224709234 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221905992 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221970777 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222343545 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222285346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225425615 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222481669 seconds)
  done (took 25.628289873 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.222481409 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.225681782 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.222695601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223133172 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.225385951 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.223288456 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.225833683 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225878085 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22384528 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226649025 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226816415 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22626949 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223932084 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224225243 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.22586222 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.223384369 seconds)
  done (took 20.758687486 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.22383634 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.226423362 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.226738231 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.226008979 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.224054672 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.224433091 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.226997396 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.224297085 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.223867647 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.227495405 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.226819621 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.226299067 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.227648823 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.228078648 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.224288383 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.226381536 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.224861359 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.224467772 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.227334525 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.227557006 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.224271551 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.224039755 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.226562551 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.226282643 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.225101901 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.225228466 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.224367426 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.224453624 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.22485575 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.226947317 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.224557374 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.226043882 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.224420591 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.225300074 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.227671593 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.224625274 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.226977155 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.227663712 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.227872045 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.227349254 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.227923319 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.224776816 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.228689574 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.227798602 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.22638637 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.228522753 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.225529564 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.226156979 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.225033018 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.226236945 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.228742889 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.228903121 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.228298158 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.22988093 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.227905683 seconds)
  done (took 68.60852635 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227600205 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230163705 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226112936 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229014815 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.229021354 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.227323744 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229368441 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.22625103 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226676266 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228894304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227219365 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.229446204 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227292177 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229641473 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227756601 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228801081 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226768102 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.227509523 seconds)
  done (took 23.270355233 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228170836 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227212606 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.229575902 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.227131242 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.227365442 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229935932 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2279741 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.229367923 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229848525 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.227742256 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227454908 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.230386844 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229928587 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.23057076 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228164602 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227379048 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.229975658 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229548419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227657738 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228356716 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230165064 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229728362 seconds)
  done (took 28.201309264 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.231039242 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.232201278 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.249570026 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.273845783 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.261486973 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.232194513 seconds)
  done (took 8.647934934 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228112203 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230954211 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.229007169 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231947362 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231366743 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227870896 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228512106 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229024808 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229760728 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229130387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229208752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231327953 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231637858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227857683 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23139258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231041455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229430832 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229051167 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230375335 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231863857 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229723415 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231917619 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22916225 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229470996 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229042427 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229619847 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232694284 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229815036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229906774 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232499547 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231654792 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22911938 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23217669 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230730922 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23331507 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233270775 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23060447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2327841 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233064534 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229918184 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.232797516 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232563983 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232322215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230375617 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232234211 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229727544 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228976709 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230189578 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230453295 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233581875 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232765173 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230500883 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234025893 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234575187 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23349958 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233282169 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231383344 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231571775 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23424493 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231764595 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231716589 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235027018 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231256597 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231543577 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233161713 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231689999 seconds)
  done (took 82.42553639 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231607488 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231646997 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230980734 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233237516 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231415678 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232051415 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231642026 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233092787 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232203296 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23185258 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234570562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232015166 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232091109 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232004262 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231878938 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232281744 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233092418 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231629812 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232888488 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234645001 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232417793 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232888475 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232968699 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232972728 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233294465 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234601418 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233459076 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232819823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232592393 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233376713 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233076554 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233392899 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23298956 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.233308723 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232868284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233169971 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233445837 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233217775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232655039 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235806962 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233231715 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236556254 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233484183 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233388094 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234877861 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232559125 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233590095 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23419763 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233036277 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234802305 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235204292 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234673831 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233316466 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234058821 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234553213 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235398852 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234288124 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234376918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234368535 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236840021 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234745401 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234278565 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237851847 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235558015 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235176604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235133512 seconds)
  done (took 82.584849673 seconds)
done (took 1700.098826558 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.309602136 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.318125515 seconds)
  done (took 13.801846654 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.402163873 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.351105936 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.238115834 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.2413137 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.238677705 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.233723456 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.232016992 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.236398938 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.236739189 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.236767921 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.235947395 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.421455214 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.287647892 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.235145579 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.235772304 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.328858294 seconds)
  done (took 41.569231391 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.259893181 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.243320024 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.338342648 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.259638514 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.263116205 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.400509835 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.292052723 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.245038849 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.386056941 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.278249698 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.605435363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.265592034 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.243186288 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.20611721 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.259531828 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.400905901 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.453801146 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.613254857 seconds)
  done (took 28.185792992 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.612466209 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.235369861 seconds)
  done (took 9.020513464 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.26268897 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.280453255 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.249418961 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.22906097 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.269968512 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.295008668 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.24260848 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.237064736 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.242776243 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.279353888 seconds)
  done (took 63.759206135 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.243968027 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.229803061 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.227482998 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.224688917 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.214265189 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.215347129 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.222488147 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.22181994 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.274038403 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.33272297 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.238162438 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.231177149 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.224367835 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.224395795 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.217708676 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.258039301 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.370086729 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.217906055 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.216468199 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.231534609 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.224274837 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.337853156 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.262144214 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.220344037 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.330574958 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.297142688 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.230420753 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.231024575 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.344920705 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.21878301 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.223135284 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.224177088 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.226408849 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.769856516 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.641051042 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.233000083 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.246562567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.234519402 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.219100778 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.366130132 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.224570197 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.231717087 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.216764102 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.619739532 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.372656867 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.32754346 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.289782262 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.228847425 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.225950484 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.284021966 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.228684842 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.225984964 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.252893561 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.940379388 seconds)
  done (took 103.748663841 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.253419385 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.705264729 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.385238968 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.239993115 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.822442801 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.869970889 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.221025316 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.46118836 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.243574282 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21794364 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.492401465 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.679226805 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.227359818 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.232444293 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.916429528 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.294726043 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.220389198 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.968962285 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.223080819 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.224311394 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616953645 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236652988 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.222922419 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.477827741 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.256079484 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.644419105 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.472633514 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.636027583 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.221147125 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.209083113 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.63258582 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.211890396 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.259869552 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.20630669 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.458847016 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.520635817 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.498942259 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.214053074 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.236525084 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.205458657 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.22911585 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.624257312 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.509766219 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.206858933 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.207030669 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.629315909 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.206304314 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.211577794 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.203282517 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.399654336 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.128347567 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.206625475 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.467513771 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.207405951 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.464270074 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.206052251 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.270879848 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.652243133 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.205939046 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.256364923 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.2523267 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.205110587 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.208546058 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206768775 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.212947646 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.508125303 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.568803505 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.206838454 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.510398173 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.619205153 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.208779925 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.68318152 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.051531713 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.209697949 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.246580101 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.212585185 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.758287656 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.652090488 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.252060533 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.206075409 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.496007472 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.20630407 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.466493393 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.220605197 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.208317978 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614394241 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.224104186 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.209644298 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.206944358 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.208738439 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.845617171 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.207820568 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.452844848 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.24015578 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.207548321 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.207334081 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.20774643 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.206619404 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.223684504 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.208166085 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.686769877 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.212114745 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.318439577 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.225828966 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.209399334 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.208971526 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.208414564 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.208328398 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.416969392 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.683808425 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.210278351 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.209364719 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.208243288 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.222606423 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.433528309 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.206925999 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.476163907 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.210296769 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.208921608 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.211207009 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.898465238 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.244275578 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.20813811 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.214533159 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.041540712 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.415608405 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.226226627 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.221332929 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.208142405 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.220933091 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.409719277 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.209601105 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.250502389 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.209268718 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863930444 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.252704684 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.212814194 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.79344449 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.217812401 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.996232837 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.233101106 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.209420259 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.502926387 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.468153162 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.469295905 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.211001874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.212429549 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842181045 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.218182323 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.356022813 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.228178198 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.194482398 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.404669083 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.511715207 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.210018423 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.754323278 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.211232134 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.416675548 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.212770879 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.532457731 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.655818418 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.212929978 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.217114986 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867250549 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855020924 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.018977232 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.212269919 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.468484317 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.188338957 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.663247535 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.209964207 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.212384773 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.642117002 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.214029794 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.21405918 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.211305349 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.210726759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.355841893 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.383617082 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.413512088 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.215473473 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.628521783 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.212152704 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211259769 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.231360954 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.213445048 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.562990564 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.302153643 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.21111051 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.262047463 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.211654257 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211557553 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.641470691 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.096873684 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.214132483 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.363706981 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.797146978 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.213508558 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.211817889 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.859583455 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.442804387 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.717088471 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.262535363 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.482348197 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.218877601 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.249337321 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.753506127 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.277965098 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.640822699 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.21269708 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.216046676 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.771160933 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.213136553 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.262920596 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.213112954 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.214456435 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699050332 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.212328239 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.216578468 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.425487807 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.215522898 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467458801 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.216398167 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.264256944 seconds)
  done (took 1080.904833115 seconds)
done (took 1342.164052068 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.214089364 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.215305018 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.196976897 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.213923537 seconds)
  done (took 25.994480343 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.216489856 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.216410876 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.213120525 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.214998818 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.214701712 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.216507935 seconds)
  done (took 8.443458729 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.235324573 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.212420664 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.213996797 seconds)
  done (took 18.812796584 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.406295218 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.35263376 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.538367254 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.136408285 seconds)
  done (took 9.586892675 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.214535025 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.214375495 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.213779867 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.216216153 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.219975921 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.21824868 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.216022796 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.217180111 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.218538433 seconds)
  done (took 12.099485015 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.686460045 seconds)
done (took 80.776948028 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.25751275 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.639361172 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.04460086 seconds)
    (4/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.309988084 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.292222584 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.723810677 seconds)
    (7/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.459889078 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.473536697 seconds)
    (9/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.339954657 seconds)
    (10/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.46536106 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.251103677 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.215239874 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.236222458 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.722029802 seconds)
    (15/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.349767169 seconds)
    (16/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.235015892 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.964933494 seconds)
    (18/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.408476129 seconds)
    (19/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.242206453 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.611626722 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.326818802 seconds)
    (22/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.545687547 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.237964143 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.877827802 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.318707435 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.224937439 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.904592776 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.235024815 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.235438573 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.156574124 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.205733424 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.341941108 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.955453927 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.307842631 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.228156666 seconds)
    (36/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.53041614 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.537215486 seconds)
    (38/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.449528549 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.053289344 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.220708396 seconds)
    (41/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.181324485 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.967830099 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.557354707 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.196852821 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.317719522 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.340851098 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.294255962 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.322560945 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.307540957 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.204852628 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.466087657 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.705682562 seconds)
    (53/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.250944343 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.197975688 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.767901922 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.239238316 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.283863508 seconds)
    (58/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.5533437 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.965439812 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.268754381 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.613590881 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.227470426 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.235252003 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.882394911 seconds)
    (65/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.292938214 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.603276108 seconds)
    (67/309) benchmarking ("sort", Float32, false)...
    done (took 5.179420633 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.220038082 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.499744585 seconds)
    (70/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.222283139 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.218973955 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.577973064 seconds)
    (73/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.333290044 seconds)
    (74/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.710573626 seconds)
    (75/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.200642342 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.245073884 seconds)
    (77/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.500498068 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.201274787 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.548222838 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.223186268 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.240395428 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.779676246 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.328250701 seconds)
    (84/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.384332273 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.61094606 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.308784555 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.318077472 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.314876017 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.218405826 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.218280201 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.330574554 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.272426326 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.032719477 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.309206894 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.416235536 seconds)
    (96/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.769835451 seconds)
    (97/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.260418939 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.222306661 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.918559635 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.276544647 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.213422943 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.752211753 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.725090377 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.665450148 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.229603311 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.338468263 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.61302603 seconds)
    (108/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.768362252 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.453522617 seconds)
    (110/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.331032629 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.409819543 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.426352801 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.914502019 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.193197497 seconds)
    (115/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.299267261 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.508664865 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.229779387 seconds)
    (118/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.221672946 seconds)
    (119/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.502462565 seconds)
    (120/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.653120709 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.259944404 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.594458708 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.215556922 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.600753126 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.601730248 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.045919068 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.200123324 seconds)
    (128/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.212521051 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.229544775 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.597296401 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.213442344 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.655837379 seconds)
    (133/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.549151661 seconds)
    (134/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.907754114 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.003339011 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.7240372 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.238390984 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.80830838 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.892780893 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.453359476 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.491021538 seconds)
    (142/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.29590262 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.20875153 seconds)
    (144/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.38328558 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.886691983 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.492127428 seconds)
    (147/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.39303635 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.242488947 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.41896249 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.433406454 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.336399981 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.552807169 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.301677017 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.339451183 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.316108134 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.315251085 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.397289298 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.362613851 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.220941553 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.338915957 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.843699143 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.644390624 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.899400019 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.800734227 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.243084716 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.20072586 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.751975272 seconds)
    (168/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.3019242 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.510560228 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.266008941 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.296492783 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.217927453 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.246422395 seconds)
    (174/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.861269676 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.228477227 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.238141015 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.795788713 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.2801958 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.001336523 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.414031604 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.234727101 seconds)
    (182/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.742876512 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.065022263 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.282098369 seconds)
    (185/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.541685843 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.23564761 seconds)
    (187/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.221557393 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.243448987 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.203030213 seconds)
    (190/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.299413971 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.202246105 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.25749208 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.237150717 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.500531402 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.424017463 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.271818582 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.421128238 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.304644437 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.753815779 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.769670379 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.711682275 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.275821722 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.218913083 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.233741098 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.26345947 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 6.220138518 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.241742922 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.810937379 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.322543049 seconds)
    (210/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.756957528 seconds)
    (211/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.223039336 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.921136372 seconds)
    (213/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.96364478 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.541344701 seconds)
    (215/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.949794364 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.436729785 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.985778002 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.749222995 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.221413042 seconds)
    (220/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.372600506 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.412048864 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.255922506 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.665761458 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.045874523 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.895402383 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.567367964 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.731479111 seconds)
    (228/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.194058064 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.21407461 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.240981822 seconds)
    (231/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.203343542 seconds)
    (232/309) benchmarking ("sort", Int8, false)...
    done (took 4.30067471 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.329656616 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.258186219 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.641710106 seconds)
    (236/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.568139736 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.900071211 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.230903147 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.719789312 seconds)
    (240/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.2287919 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.483642324 seconds)
    (242/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.242078813 seconds)
    (243/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.286757323 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.227745044 seconds)
    (245/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.229707177 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.724761499 seconds)
    (247/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.231541461 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.289215836 seconds)
    (249/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.343884529 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.922906579 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.347531344 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.449611822 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.011492961 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.021443576 seconds)
    (255/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.763526114 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.073001013 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.442154057 seconds)
    (258/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.230820536 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.303869609 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.917255215 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.219059809 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.241477359 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.212441559 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.434319866 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.240678503 seconds)
    (266/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.268377516 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.409172285 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.001043881 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.423981307 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.267064566 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.38052415 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.614778322 seconds)
    (273/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.4036111 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.392781758 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.496065772 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.301307023 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.246340052 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.245160825 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.211576567 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.249933924 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.227330011 seconds)
    (282/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.381330471 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.316993364 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.377097954 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.230365662 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.306343533 seconds)
    (287/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.232799553 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.56705802 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.35289832 seconds)
    (290/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.227314357 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.390760842 seconds)
    (292/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.241636559 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.323016631 seconds)
    (294/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.644104093 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.467156484 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.680055024 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.269096757 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.227999966 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.565939042 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.253259792 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.228839657 seconds)
    (302/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.253996713 seconds)
    (303/309) benchmarking ("sort", Float64, false)...
    done (took 5.445817811 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.751193894 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.259891118 seconds)
    (306/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.211333544 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.498523341 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.478751471 seconds)
    (309/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.360878814 seconds)
  done (took 873.004959947 seconds)
done (took 874.158132253 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.259868038 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.252318565 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.238348326 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.257815723 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.349151094 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.265125525 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.247972985 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.239300094 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.285035287 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.287166279 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.235814753 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.2652145 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.238624941 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.237020214 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.237568696 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.251287751 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.144994955 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.240269091 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.254600461 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.248482684 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.254213861 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.236805758 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.288359829 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.265206801 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.242064367 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.240949289 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.239986731 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.256235155 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.34909606 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.239833118 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.242043529 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.248803865 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.144922915 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.240267451 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.233632592 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.257838429 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.249465223 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.248664386 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.242217584 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.270303519 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.498901834 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.240549195 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.239754212 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.239549164 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.240156519 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.243947058 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.239835868 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.244605114 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251671885 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.252664193 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.506159083 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.255773904 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.24269874 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.239864732 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.250793623 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.238803717 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.24367537 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.253720458 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.258761252 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254754122 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.140534722 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.247450758 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.242508794 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.255622128 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.246582263 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.522579458 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.236437488 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.243700381 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.503295796 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.249074059 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.523183944 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.248108699 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.242937884 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.25403248 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.271656881 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.139490994 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.23651051 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.241450726 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.247996374 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.238664656 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.251190427 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.254067596 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.246668013 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.242524101 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255136389 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.26950849 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.252018823 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.241794516 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.250867614 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.260367955 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.248940602 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.251737426 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.245042334 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.237779815 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.251639743 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.245445253 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.243866154 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.243168515 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.24719461 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.253358289 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.496771042 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.257665519 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.239170301 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.239370458 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.242611252 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.254813125 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.495469953 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.242777337 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.264129688 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.290432416 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.244881048 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.132902564 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.246068473 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.257886981 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.252680294 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.245920316 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.238779843 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.135528715 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.490180578 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.256440578 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.245184519 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.241894899 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.258348281 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.245257558 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.240452467 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.145247238 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.244716364 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.257047523 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.36389384 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.254142275 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.275137892 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.242187733 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.246882343 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.276113558 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25844646 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.2745377 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.246385199 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.258944713 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.259137041 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.241988942 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.254716048 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.25527269 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.246028724 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.253629945 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.239018452 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.271912053 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.256190497 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256342248 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.266201705 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.36622571 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.243010839 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.136034855 seconds)
done (took 208.810061569 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.307300137 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.237829304 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.329083211 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.241619302 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.341939406 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.343990605 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.239353913 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.238942638 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.23873173 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.62543387 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.239135152 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.239372319 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.239138683 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.238700911 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.327515 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.241749636 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.239280423 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.668534034 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.241829348 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.317397152 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.23865426 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.239235775 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.24160829 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.711761687 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.243157782 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.240533214 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.317847038 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.242349495 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.58915015 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.239778469 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.245804354 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.667718417 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.340252738 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.259443192 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.251974343 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.249864429 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.34353808 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.260819755 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.326303773 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.325875319 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.329381517 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.281610285 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.24321351 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.246012545 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.24627844 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.244643932 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.2408749 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.26955045 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.241547411 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.241220735 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.591648699 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.253711923 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.24162031 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.240505171 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.24182964 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.273513384 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.242048404 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.243836794 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.340887845 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.244519652 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.309613653 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.629213152 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.720505404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.243922714 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.246270913 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.241669212 seconds)
  done (took 142.780926204 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.314851248 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.320337538 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.353712561 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.251538496 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.298969794 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.358408586 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.251178355 seconds)
  done (took 10.329296922 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.254726804 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.244697021 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.298548173 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.297595439 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.244056488 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.395519762 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.244148989 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.260474916 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.242371149 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.301622737 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.246596025 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.245623464 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.251393781 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.24522321 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.297628863 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.260041363 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.364344144 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.249717757 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.247149822 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.39992105 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.243519626 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.25209784 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.30154804 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.260462696 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.247680551 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.257157769 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.823679272 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.24538542 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.243242309 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.246641848 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.245302907 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.288698713 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.246725093 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.252199844 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.243832772 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366745939 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.24695152 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.24406354 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.247563074 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.250752372 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.246570655 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.247804533 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.247976308 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.244287045 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.246702589 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.274188348 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.246869399 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.24736335 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.246743358 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.247021216 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.300899477 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.247059081 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.244633715 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.244639472 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.307617551 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.254265158 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.248914628 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.245393584 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.247540536 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.245161502 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.402610283 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.29878511 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.247156123 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.299845441 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.247869163 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.248522227 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.248516529 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.248826267 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308701907 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.248437436 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.298888834 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.246417681 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.406485723 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.275642548 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.249640166 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.255390657 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.25436853 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.248734101 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.245211612 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.258514403 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.245441443 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.253926802 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.258956344 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.255510296 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.246482949 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355949356 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36139573 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.246562296 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.265909144 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.259641253 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.24594179 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.306049218 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.248444421 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.247297771 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.305117194 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367683413 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.30654903 seconds)
  done (took 144.927399658 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.258215832 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.261110081 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.25435856 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.26934966 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.254060169 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.253705433 seconds)
  done (took 8.737009832 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.255626541 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.250480022 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.249926693 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.249758068 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.251137558 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.251287925 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.251566484 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.255867851 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.253947358 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.251743483 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.251864894 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.255517042 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.252011252 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.251502807 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.25138429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.251416393 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.251821672 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.248054076 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.250255815 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251679653 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.349334477 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.252320657 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.25189138 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.256052749 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.255373508 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.250900242 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.262699808 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.251021188 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.252081757 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.26411989 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.253481405 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.253307007 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.257163928 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.260210795 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.256041334 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.256417654 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255186653 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.257388503 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.249911731 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.253651954 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.257219131 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.252931402 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.251835727 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.25767892 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.258593896 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.260998355 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.260384501 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.264493864 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.253250637 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.25698849 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.258062468 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.253037442 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.254860248 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.258708047 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.26241801 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.260365155 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.261210998 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.25467325 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.254272492 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.25961908 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.253905216 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.254582142 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.259082311 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.256877039 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.260111683 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.259256968 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.259906179 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.257289519 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.254514368 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.253885724 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.25899805 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.251520381 seconds)
  done (took 92.655497736 seconds)
done (took 400.607095049 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.422594344 seconds)
  done (took 7.613505094 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.473038775 seconds)
  done (took 7.665651066 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.120518996 seconds)
  done (took 19.319724469 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.322226965 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.336872793 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.258496382 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.260880289 seconds)
  done (took 26.37047488 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.376469571 seconds)
  done (took 7.567599509 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.252826535 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.247019952 seconds)
  done (took 13.69515203 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.599309143 seconds)
  done (took 7.791007317 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.042061944 seconds)
  done (took 8.240625473 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.256504888 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.268405955 seconds)
  done (took 13.728205787 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.236064087 seconds)
  done (took 7.428667566 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.80154178 seconds)
  done (took 7.99674313 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.257222933 seconds)
  done (took 7.451601298 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.302587558 seconds)
  done (took 7.496301539 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.401532084 seconds)
  done (took 8.594403807 seconds)
done (took 152.149805816 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.254036802 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.255390423 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.256650036 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.255309107 seconds)
  done (took 26.214338546 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.289291859 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.290451572 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.291084911 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.301063775 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.293588703 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.290088411 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.281967131 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.282282217 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.301822194 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.294380724 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.292853227 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.292998453 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.29045304 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.282950871 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.291914143 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.292062125 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.302222069 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.292534284 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.283447126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.294169257 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.258787661 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.302809569 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.294421901 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.259544355 seconds)
  done (took 32.142764784 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.460008981 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.332256536 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.415218845 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.313153052 seconds)
  done (took 6.715506038 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.309787708 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.310897234 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.322566339 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.362382191 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.388109101 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.321868465 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.282567889 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.279755817 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.266410615 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.311222774 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.386866496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.327336735 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.394131076 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.258652581 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.435045351 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.257411407 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.258261765 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.311220226 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.361687645 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.375691194 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.259612318 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.311039702 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.314093636 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.327481553 seconds)
  done (took 32.929437096 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.257881596 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.266810293 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.265024563 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.258518109 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.258917877 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.259552885 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.264565448 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.259677317 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.280257018 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.260085951 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.257440078 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.259037583 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.258791539 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.259671529 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.258150919 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.271288295 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.272331642 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.2594386 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.26244023 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.265049719 seconds)
  done (took 26.450245617 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.256432998 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.110729294 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.60813062 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.51263721 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.256852327 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.259352731 seconds)
  done (took 27.20114563 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.32504694 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.443220259 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.26668252 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.578433014 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.662346692 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.267739029 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.264340966 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.473972108 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.743896596 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.747330952 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.316360939 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.327908188 seconds)
  done (took 18.616063526 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.26363405 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.260865577 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.268355317 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.276434734 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.313212817 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.270671905 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.271428187 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.258405845 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.315935725 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.320420635 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.271164719 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.3143412 seconds)
  done (took 36.605341474 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342559925 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304211318 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.152647196 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974408079 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633689368 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.46808445 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.988429717 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.672458401 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.264223485 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.530696013 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.930731478 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362355428 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.511323968 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255950159 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261378112 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.172213962 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486660621 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710661768 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261642974 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9070817 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28606192 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.264165381 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.00135424 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.286076811 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468391697 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.386388836 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.517945421 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257598723 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512055324 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271432871 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268100988 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.257567007 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531008589 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891763469 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353078879 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268308551 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.93663094 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.973617816 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.262848574 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.924325271 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.705376508 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262772498 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268212959 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25849897 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.191494203 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264639213 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680974676 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.266705682 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.969558504 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.25943359 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.26899166 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352522986 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.263006186 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.073375331 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25602089 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260214202 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.256603061 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268474209 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82928521 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.375343853 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264154518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.196016663 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367694077 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925527743 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836362324 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.363288928 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.263149787 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26298372 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193246124 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.983802494 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278456971 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407158978 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.280195473 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909253485 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901436981 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.948285648 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205048926 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779210093 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277335785 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.196024022 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487277098 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25912063 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19577554 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.203823665 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.193574422 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917221796 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272492861 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.595376173 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.275634115 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.673468574 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.274592914 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277856821 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284516484 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.484153006 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.144744092 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260618785 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.707029421 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421817322 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283358798 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67702374 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198026341 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.265535038 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515985121 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.47314081 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267906951 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.183929783 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445627067 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267963282 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.279833323 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.274365656 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.274984969 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.786365906 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277698282 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.384792501 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281370594 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.263385253 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957156956 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274985843 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.365611116 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.96150902 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505739198 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.995153292 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267389798 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344635762 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26583443 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.262128332 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.034537742 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.779008935 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.26216511 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.264132109 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274238141 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.275455829 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.263164002 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211440854 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.26451383 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979617989 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.26963271 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.486307553 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264305548 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541114112 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196387654 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410291286 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.353056859 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.486229005 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.36570988 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.264220185 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520176872 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266518282 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270839294 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277613416 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282619008 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361649884 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285715458 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.271284719 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.520496275 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.268447733 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.268638853 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.454679525 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.268840283 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271839926 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.26889828 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.082769614 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790141633 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242829722 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.272254498 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152865317 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.278502532 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329665893 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270836843 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.275390603 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.90979732 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.068650546 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.273247614 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.273192607 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490135724 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275457891 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.945088974 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345790401 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.445015697 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.797231979 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281104822 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.199114489 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.977588373 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.960295156 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267207745 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.200271535 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266298495 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274913687 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275754343 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490430502 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.797687133 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270567025 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.94808333 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.275432431 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276812072 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.270957938 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265946196 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.906065305 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.410498189 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281300901 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.280648916 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410075479 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.281492543 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.200349046 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.270141979 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272306665 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266830558 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.266794548 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299702124 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.948809048 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737980552 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525648611 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.966213303 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281204311 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.04356539 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.299897215 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.269215089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.7484461 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297230005 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.279110931 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279415377 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.277979488 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.950764265 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941504805 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83482301 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929464534 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750529282 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153989047 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.285547356 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.271233412 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.687956033 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20541309 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.824002653 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440188041 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691191217 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215253972 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450335201 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.376776622 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969432788 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281250754 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495554259 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148787989 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.759459037 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296059189 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479540453 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303569156 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.26942966 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198988914 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.555420937 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484144403 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.7602841 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351922586 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687332968 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.755506546 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.285867298 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.271707883 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.555564532 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430055325 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.98759835 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.439794032 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.280380219 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.002581931 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74621028 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278389965 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.495255218 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850751813 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.280227369 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.454685385 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209048445 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.28165781 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.281957766 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.271410122 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.402668678 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.259624872 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.539512254 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281013936 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203874525 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272251176 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75312668 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.13012589 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.276559737 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271227305 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968977665 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279548199 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526478155 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.275379229 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.877152957 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278093375 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.205110222 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204240992 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.964116669 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278598855 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247618161 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728826473 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.36828632 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259291001 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302039526 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11842741 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526530016 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.285914648 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801562373 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501198457 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.04754202 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297718199 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.37207049 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.796646586 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.273752811 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272520533 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.508596647 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093523719 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495648479 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.192737571 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.188065044 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.275746425 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487064185 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.273614524 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.026838095 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511592504 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.985374137 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.283265893 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929874337 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301726871 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.018115089 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.202459308 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383384341 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.285467243 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353114201 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283168796 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.283309402 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.283449672 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430299481 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.029383543 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292112413 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.28852995 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367037462 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.439830657 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.883337488 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.280013372 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809615768 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950848235 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.810934901 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289084864 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27493784 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278741821 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208347886 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4236973 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.499863254 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547750797 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401989008 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.420067768 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299097575 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.811030819 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298797322 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488774157 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54990046 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.170289686 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282482835 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288782547 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.275048288 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285838804 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.485970102 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735690912 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805669675 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396888968 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.286812119 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.696228432 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551533777 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275087585 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27463788 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86714484 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.296431611 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.569988598 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.284055888 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07945091 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42593123 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285753765 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914334359 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.285947524 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.431378773 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.049066792 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987386338 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.533492843 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693840461 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.29001289 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812063179 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.919869312 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542533216 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343276063 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.287812574 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.378024722 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423699151 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.27420421 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280417067 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27794323 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123036802 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.987700246 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.286914733 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817007473 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544864499 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.274422761 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.27769507 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304008319 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.286644207 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.501029334 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947241513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50470387 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287067804 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285438494 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.097020163 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817980637 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294002763 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212438178 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.282196733 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501140952 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.518191192 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299519267 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.731145625 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.990413514 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805325428 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.253533852 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300743077 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280466483 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.924556984 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819208815 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.897795353 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740866141 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.841259953 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279519207 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557535032 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.284668513 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281488612 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558743586 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.283722807 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.279907916 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293522839 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.815887896 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984383789 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.28876087 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.012682187 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.218764648 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62165396 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894922092 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217659234 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290154239 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.45056099 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285300207 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40877651 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292939916 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.283604082 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284094425 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.039290851 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558712678 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.286335442 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.277530105 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.873480759 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289170518 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295360044 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498883535 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290142424 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.956856224 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.630667038 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.537173837 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.288501512 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.270431376 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.285467629 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282157371 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269159799 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.478174121 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508025821 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812085028 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.296086965 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.294693288 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.286191227 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.498305161 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493218959 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.085492332 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31026145 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282139282 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300649496 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.193173959 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.784084288 seconds)
  done (took 1544.831569239 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.322234524 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.323647669 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.323300625 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.29368327 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.302653401 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.316161723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.393736248 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.331135312 seconds)
  done (took 51.83050363 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.294539848 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.500508161 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.31783498 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.296411403 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.299325685 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.289943703 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.696720112 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.296950359 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.296034755 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.297479097 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.287715935 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.293361382 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.863691149 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.300653907 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.294691645 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.281529006 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.296284028 seconds)
  done (took 64.435421955 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.301610048 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.505844663 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.356095721 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.296142679 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.987927706 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.301172608 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.499361861 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.336864998 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.288181297 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.314886612 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.928541902 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.291488154 seconds)
  done (took 82.634508973 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.29399078 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.294732613 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.295067241 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.294844031 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.295075374 seconds)
  done (took 7.700155272 seconds)
done (took 1959.502593814 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.539732037 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.918800282 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.904561167 seconds)
  done (took 5.049524677 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.43476504 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.483454891 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.604770873 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.608864315 seconds)
  done (took 7.358600868 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.562433634 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.676656703 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.477157086 seconds)
  done (took 5.940994328 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.564426972 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.287815519 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.359619386 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.281928773 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.28443471 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.286075365 seconds)
  done (took 20.078772549 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.287690196 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.28983315 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.287424116 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.290316581 seconds)
  done (took 6.380996585 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.268709908 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.004493271 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.275057088 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.287497369 seconds)
  done (took 18.060589587 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.033271249 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.046671562 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.032103285 seconds)
  done (took 7.337372787 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.288138941 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.138027649 seconds)
  done (took 9.651221462 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.601089116 seconds)
  done (took 2.826194267 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.418574641 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.553442297 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.225497 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.188269981 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.267170429 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.725244978 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.77126687 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.377424715 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.176467857 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.247468503 seconds)
  done (took 26.178331896 seconds)
done (took 121.840430218 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.804229604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.533379711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.492781974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.774971017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.516946782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.492390688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.505927723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.7461505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.284511701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.27691939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.775786186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.517552049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.453388873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.287917488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.454497524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.533737476 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.516602935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.837181708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.461992998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.656402552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.506820222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.408869727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.604620968 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.458093729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.515959285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.44286041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.990406537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.52657385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.637505377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.045057016 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.447149477 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.837093395 seconds)
  done (took 186.57218026 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.289488391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.289137832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.307146745 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.288714823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.300075719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.291757123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.302828653 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.288780299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.304188158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.290877028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.29098845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.290288773 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.292644925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.301082735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.290220231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.293388332 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.298259723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.290416614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.312192796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.291079266 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.290550822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.304051942 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.290195395 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.289806375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.304859068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.29090339 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.305190091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.290433001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.291470442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.290995044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.294665629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.292772685 seconds)
  done (took 202.668381578 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.290319213 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.291203287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.29296708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.291077188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.298153314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.295594696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.292790458 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290742197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.294636226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.306441814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.290930443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.301760509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.289836735 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.291410655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.307129221 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.296336756 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.291974321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.297247926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.297783448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.291884939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.293805981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.292158989 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.291816031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.292194163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.295464726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.292665736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.294605596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.291817725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.294462031 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.293747278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.295514891 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.295169322 seconds)
  done (took 202.654418595 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.484124283 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.296395647 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.296011034 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.229194889 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.296939771 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.295670375 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.292730171 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.49193656 seconds)
  done (took 13.914074167 seconds)
done (took 607.035362164 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.462284714 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.194910256 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.487501914 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.31993299 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.971403096 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.32477571 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.317097282 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.47251314 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.202478892 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.479983049 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.480047885 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.320877897 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.617541789 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.319025266 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.553089008 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.409695086 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.129021807 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.232813095 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.619244244 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.779255198 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.558549332 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.725081104 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.47477836 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.199023376 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.61306242 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.721477696 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.943538683 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.127092443 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.31627366 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.612791352 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.814482965 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.184534068 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.374885395 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.356158108 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.407393288 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.392005964 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.170509335 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.355683673 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.499205421 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.491074696 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.771609965 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.022694225 seconds)
  done (took 88.058763627 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.287240787 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.287322331 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.285439196 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.28715277 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.288235129 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.287011121 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.286799227 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.287669305 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.28695168 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.287570558 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.287615661 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.288120612 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.286442608 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.288672731 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.286196114 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.286361731 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.286821393 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.2889208 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.287361229 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.28649629 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.287975956 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.287219733 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.287343933 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.287437914 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.288369582 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.288169221 seconds)
  done (took 34.708048374 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.300861907 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.522746193 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.695461263 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.312921344 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.305105567 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.308459595 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.373564075 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.303847573 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.307246717 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.308474495 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.446657717 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.303067678 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.338446005 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.704081053 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.310642479 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.3026229 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.301659964 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.304291961 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.531323508 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.317796181 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.377198172 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.303412189 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.375475388 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.316111715 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.308295675 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.305775958 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.31023123 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.798578583 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.310974495 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.448241313 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000107162 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.375037118 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.753099207 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.708155856 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.004114116 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.306685018 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.303209761 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.453678623 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.309981942 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.306521624 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.375723793 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.310239993 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.703425896 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.918065562 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.325203262 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.302960508 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.81931027 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.455653709 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.527126615 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.3172565 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.724549061 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.312624891 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.304930278 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.308555727 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.526404305 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.316754566 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.307845369 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.815941487 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.315583163 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.377803875 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.307428585 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.30722213 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.54049741 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.311452315 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.529365414 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.312645739 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.316946431 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.309378289 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.706831352 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.31295607 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.932765253 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.326301361 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.30487538 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.450985137 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.53185324 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.853483 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.315357939 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.544758434 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.766227002 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.378917108 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.314788472 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.791453117 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.382749343 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.315536281 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.307674457 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.307002039 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.30553445 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.348742186 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.376953729 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.865475491 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.932454995 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.836463879 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.383564131 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.323838339 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.310105445 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.819153707 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.323588135 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.306025474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.699662292 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.938959966 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.327476049 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.317766533 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.922404287 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.330348587 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.380287193 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.317955582 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.713732343 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.316279688 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.349268929 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.306356878 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.318836018 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.315150083 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.381334009 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.318308378 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.306533607 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.90953721 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.475576367 seconds)
  done (took 171.436682927 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.304317931 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.304475848 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.315545048 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.30351937 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.303627007 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.309853896 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.304050422 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.304457733 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.310416769 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.304238036 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.305698383 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.305523519 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.307049691 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.306640907 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.31417937 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.31191822 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.914890034 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.30493184 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.304648389 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.317996274 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.080967919 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.309134098 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.303938969 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.306621807 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.306445664 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.308166176 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.314027621 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.307843455 seconds)
  done (took 151.238903989 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.308691524 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.824433788 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.313004745 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.428319707 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.329525831 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.306115095 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.428432388 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.363513738 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.313381789 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.306320302 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.306067006 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.58781263 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.312750853 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.774518577 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.485301254 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.428749789 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.781887577 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.312201891 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.308145821 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.307399383 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.431243905 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.317130698 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.588775512 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.831796078 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.312360337 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.828463767 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.301352175 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.309812574 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.312607782 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.829819814 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.311563206 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.58674279 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.384806878 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.369959224 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.830327548 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.784097229 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.781989359 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.442606425 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.316567094 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.307291175 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.308324376 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.29845079 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.830540068 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.313601679 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.314338677 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.820106793 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.327934703 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.311675968 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.318851095 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.308413399 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.367254323 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.368778701 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.59512975 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.838379234 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.38148933 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.332034833 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.432061894 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.663647131 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.315709623 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.782818876 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.30119143 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.827706638 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.315767465 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.299950744 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.31059953 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.314770955 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.441898118 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.4303797 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.785478981 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.318388238 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.783920185 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.445694191 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.312704826 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.310073553 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.3131451 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.834419149 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.787218016 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.445844426 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.436338623 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.491725328 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.302703538 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.314298932 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.300459052 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.384719592 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.313124109 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.833184745 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.788181013 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.315425517 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.313788228 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.314294608 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.312862978 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.473610405 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.84032944 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.388677062 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.776706062 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.612622636 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.600081557 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.3167167 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.365343428 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.312245157 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.597703507 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.318070579 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.364119113 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.721328115 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.599240757 seconds)
  done (took 155.470776034 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.536497264 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.411219822 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.395003792 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.418642039 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.821060937 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.870418982 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.405292467 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.432113624 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.412672863 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.54084746 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.399241935 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.406993924 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.481757063 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.387084116 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.975710483 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.379698123 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.397377502 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.433259985 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.414114592 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.297922015 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.89683571 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.591435713 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.476028867 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.275530142 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.4073066 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.023218973 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.839225038 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.809518374 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.474384824 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.48827587 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.810442707 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.37744428 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.216174695 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.942527402 seconds)
  done (took 62.696342051 seconds)
done (took 664.839501116 seconds)
SAVING RESULT...
DONE!
