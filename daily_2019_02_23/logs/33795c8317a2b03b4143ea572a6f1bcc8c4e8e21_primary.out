cset: moving following pidspec: 5631
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.349139791 seconds)
loading group "string"... done (took 0.597890514 seconds)
loading group "linalg"... done (took 7.542187589 seconds)
loading group "parallel"... done (took 0.176989943 seconds)
loading group "find"... done (took 1.21386781 seconds)
loading group "tuple"... done (took 1.894655841 seconds)
loading group "dates"... done (took 1.28526639 seconds)
loading group "micro"... done (took 0.239137016 seconds)
loading group "io"... done (took 0.981967442 seconds)
loading group "scalar"... done (took 39.795629919 seconds)
loading group "sparse"... done (took 12.616771523 seconds)
loading group "broadcast"... done (took 0.992668199 seconds)
loading group "union"... done (took 13.703152286 seconds)
loading group "simd"... done (took 4.646844205 seconds)
loading group "random"... done (took 9.358275415 seconds)
loading group "problem"... done (took 1.951246195 seconds)
loading group "array"... done (took 22.124439332 seconds)
loading group "misc"... done (took 1.979824519 seconds)
loading group "sort"... done (took 3.376407308 seconds)
loading group "collection"... done (took 19.128678276 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.558296119 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144544883 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120568939 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142218883 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186229826 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132419322 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141656394 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086060564 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.90915267 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161643892 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14170355 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.515880623 seconds)
done (took 4.961250027 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.19249398 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088032633 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098842942 seconds)
  done (took 0.849122383 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066332926 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128609468 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081871632 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068017458 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068002143 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082181258 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066924594 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066839476 seconds)
  done (took 1.232723136 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073545751 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070162599 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08541088 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068869964 seconds)
  done (took 0.970258395 seconds)
done (took 3.985989846 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.933789491 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.252871431 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193354422 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.484652878 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133342367 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188461235 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662154336 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318403049 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216973516 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103326217 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10721473 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391580188 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107600032 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682731043 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075430756 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10668292 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160187485 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424233752 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081321993 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083088317 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103826783 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14096558 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100490095 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07874162 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168795304 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071215957 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153479521 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095275034 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068509209 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.249846791 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189338394 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679132365 seconds)
  done (took 10.518158174 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098973873 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121508236 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069737556 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142346953 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120679211 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072400052 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073386613 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083256587 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09506349 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161329345 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117795082 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124308349 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066618428 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070259266 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103147837 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231613194 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.091688582 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102209626 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072549574 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091970932 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110743677 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099134477 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082567189 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096687008 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151837298 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192361859 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098276906 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111682191 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069388808 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098041314 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130088516 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133629953 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066717328 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08451651 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159733989 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095760804 seconds)
  done (took 4.574399816 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.101384403 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.174634724 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093310282 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156272989 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085542525 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13069861 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066694946 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099966404 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252153359 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.162007826 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.492606236 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129466202 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088455288 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069655514 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08693111 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068475456 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.621001331 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145707643 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123378739 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085113261 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092222454 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071295622 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371380032 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085485201 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068991814 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070502747 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.076680637 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150152017 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069282568 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.267749615 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088784608 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088991727 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119684448 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179197114 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096856157 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124292721 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083519604 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067077479 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172837394 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075265542 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098999614 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08591338 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091506977 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123035392 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122364651 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070570361 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082040155 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185136143 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068465097 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101707207 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.968463506 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166532052 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094692408 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066756976 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297557376 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10297946 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067041947 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064913713 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291506992 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185047775 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085231011 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068234405 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088061108 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07032867 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381539303 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070308641 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.004082646 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070058473 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078292592 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087377031 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068463172 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090300315 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073703478 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102888295 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068143538 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.0694563 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084094307 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068133953 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085736043 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087656273 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210379219 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085095641 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068433732 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085304481 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087020973 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113054889 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071055176 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06647687 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117743092 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110301573 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070020463 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069411942 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082762054 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104627132 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086734936 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102383277 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071114445 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129486602 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068482577 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079550999 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.148756725 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069021789 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116531045 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077761112 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11488338 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097077654 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069595764 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157549268 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066456453 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082888549 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067409068 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082852453 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069265743 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069812748 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100087498 seconds)
  done (took 21.807222693 seconds)
done (took 38.671766693 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.309478757 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094862421 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094846966 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094188106 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077511264 seconds)
  done (took 1.423243554 seconds)
done (took 2.145001574 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150176489 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103140045 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081660444 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097947417 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082043689 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103400874 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118069284 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082798495 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118758163 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065275394 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115132426 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064614076 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081583674 seconds)
  done (took 2.020399441 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083203266 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085804312 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086236969 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081839585 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080031045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083041839 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080174593 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105850723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080990198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088626143 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064282769 seconds)
  done (took 1.640587745 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081786704 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084073317 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085812396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08099474 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079460959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081214455 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079589082 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102543567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080858972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090400738 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064950636 seconds)
  done (took 1.634903073 seconds)
done (took 6.013419693 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079225582 seconds)
  done (took 0.794193517 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.745070032 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.39739353 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085474843 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137087989 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223804915 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160933038 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.459428761 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112135184 seconds)
  done (took 10.246450785 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101423844 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086350607 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083977843 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088042578 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071170089 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089293681 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072993559 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070045053 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088377464 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072159595 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084708746 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069235247 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086834532 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070138245 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084336309 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072208603 seconds)
  done (took 2.078701959 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105531633 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104519407 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090774693 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076174493 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090537507 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074009429 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091731638 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07541381 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087271834 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074804649 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091563991 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076017975 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089068729 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066774051 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091085993 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07763358 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087021176 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076217068 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092151307 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078187934 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09165359 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067009992 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08878401 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076233608 seconds)
  done (took 2.853826963 seconds)
done (took 16.693506344 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131723598 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076566806 seconds)
  done (took 0.930949628 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083235954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098891037 seconds)
  done (took 0.912391864 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083859534 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081166256 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090521919 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094187541 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081458098 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06730653 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103435955 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067948137 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082536282 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06807388 seconds)
  done (took 1.55030718 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069918841 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094768531 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070908281 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097877921 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076417094 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080851819 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075015368 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084358748 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079459887 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078794353 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071952272 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098520728 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072746485 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100629464 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089615059 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070364769 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087604962 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068972467 seconds)
  done (took 2.201193613 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067391611 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067873122 seconds)
  done (took 0.868058989 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068291849 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064828803 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082334167 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067929748 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079550904 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064351538 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080165097 seconds)
  done (took 1.240242214 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410883148 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110460234 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265011959 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072762144 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107103851 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.29789595 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06683824 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071781517 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089372941 seconds)
  done (took 2.264880216 seconds)
done (took 10.695726877 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081034339 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086887887 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11185557 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.441508309 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107255256 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06723695 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144306276 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.213117967 seconds)
done (took 1.983578473 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127175193 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.626383961 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413351606 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.23145239 seconds)
  done (took 2.008352927 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385976984 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091564566 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073315281 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068245877 seconds)
  done (took 1.353522937 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06744222 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070243923 seconds)
  done (took 0.875796115 seconds)
done (took 5.100901157 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068027143 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067187275 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080521625 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06751748 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064884416 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080560471 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067261568 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.1136572 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066976486 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084951777 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067282176 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067722453 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084375112 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064382116 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064366538 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083936713 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067396539 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065666633 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080434819 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064703672 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080581684 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068357219 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065083173 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080602609 seconds)
  done (took 2.539277918 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087258421 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083110134 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073159581 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088443703 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071263097 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088446797 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072309042 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068532208 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088063036 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069479572 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086962955 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071550338 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085055924 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071244201 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084811248 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072251361 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088260029 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067435824 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084394496 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071610561 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073271209 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083313007 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071346425 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087973132 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071187545 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086379226 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069797958 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082942305 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072613069 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086805022 seconds)
  done (took 3.097989235 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072666697 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064281503 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080911913 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072150303 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0648511 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081632743 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064585238 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081638156 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065617471 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064671188 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081518129 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065022775 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065717631 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082000252 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065966442 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084157313 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08228209 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066239747 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08107805 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065915432 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084508945 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065098332 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06483937 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081536352 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064570313 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064745904 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080105694 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065063995 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081827141 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064739245 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067586572 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084263184 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064703638 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071957076 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084876682 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065079724 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084280719 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065014672 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065975713 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080064733 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064831013 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065259852 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080692365 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071509928 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065035721 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083330727 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065253414 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082081942 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065518217 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068688285 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08030671 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064504892 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08153851 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066859678 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069591353 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080480492 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066260078 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064856542 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081254059 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064686499 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080223483 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065229409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068250223 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081345794 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080486464 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087666171 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065161764 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066904048 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082045896 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067232396 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067597592 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094732976 seconds)
  done (took 5.984666604 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120915797 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093910845 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082740749 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067204722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079475703 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065653791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069671439 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081273674 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067446746 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086399133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065547447 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082129538 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066486872 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080771702 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081932317 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066737406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087347165 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064151576 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065912261 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084857685 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066149059 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084496846 seconds)
  done (took 2.456092619 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190186541 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090053587 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11257979 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091279315 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085959726 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075046508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087894913 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071811982 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072585192 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084707207 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070653258 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087399377 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069171915 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085514846 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070580033 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085873265 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071445475 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086286275 seconds)
  done (took 2.333139121 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079753751 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067245277 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106986244 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06760684 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08465474 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070618077 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089230118 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076833202 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086198576 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067731931 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092061194 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.17908436 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086317394 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067564359 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086761565 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068426679 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071082564 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083839613 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076582775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088624584 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073674808 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091525399 seconds)
  done (took 2.607994601 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082512101 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069112681 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102226928 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087249543 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064132556 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06602849 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089702675 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067972454 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089998433 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06917657 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083517601 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068479138 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073202975 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083932588 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073363397 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084000537 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069823868 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084081396 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069955725 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064608517 seconds)
  done (took 2.289464274 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089821877 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085168147 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069384774 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093895619 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069458027 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086437766 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078138405 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085591996 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069478724 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110898277 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069236034 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085394912 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077405702 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091560144 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070197411 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092675673 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093768849 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077156421 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085249703 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069381622 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110152628 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068551624 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093684661 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069318177 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085316178 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068492813 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085352052 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074906384 seconds)
  done (took 3.058070189 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067600618 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067726368 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081656726 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064478488 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064828049 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081277546 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065367125 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065991721 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083771969 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06485474 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082919295 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067897289 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067492187 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083580718 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067680149 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068357766 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08371655 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064999513 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06531375 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081107377 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067867654 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0833063 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067611697 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065179066 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081710134 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067561545 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065109428 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081063594 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068081249 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06488938 seconds)
  done (took 2.906548985 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078210747 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091557213 seconds)
  done (took 0.924239828 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065413312 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083433427 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082044664 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073079055 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08953712 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068686591 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09317819 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072613815 seconds)
  done (took 1.379310696 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084490444 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080443655 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084826583 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096404683 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078814237 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08530873 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159087984 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086097978 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074906392 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083970767 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082093094 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085017761 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07471359 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069129358 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091347648 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074781855 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082919555 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073804515 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070704331 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083062516 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070159235 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096134286 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073787444 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082167388 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069457684 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077600716 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097259425 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070269764 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087768274 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076117225 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089630043 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062628933 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084014015 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068528415 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065939901 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09454735 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084161867 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087911965 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.0777513 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086162808 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079266672 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080318545 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07373135 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091451203 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079619548 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069487703 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086273286 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064131841 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082227223 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071324204 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064376485 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084448268 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06312943 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092046744 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072920781 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096562797 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06804026 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070757341 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087321859 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071671277 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090960819 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070106974 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071073144 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083636299 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074957969 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089412318 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078346723 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080017522 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062285237 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067086211 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093999132 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090964078 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090648176 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068944034 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085805281 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067015504 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087020661 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068544638 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074439855 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090493019 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068866599 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090676068 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075576511 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084653059 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070404607 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092377739 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066800198 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070639962 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082358124 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085349896 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083138487 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066681636 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082042876 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079457914 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071805292 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084866864 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066273588 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092652677 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06194182 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069777275 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086032868 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068769701 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095571871 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073646754 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090284387 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077707311 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092369385 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068578869 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088604039 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065048279 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069640444 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083720129 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07586635 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078943542 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071186982 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069315033 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085393068 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077710928 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083656854 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068703059 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092546447 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074285365 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067107802 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081584472 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071233652 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084541196 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071992265 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093052412 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067105038 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063680039 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080194013 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071271424 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084066446 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072279299 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090465911 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071992852 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062522247 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08331072 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072829281 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094286115 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068627707 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085304739 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074460431 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07033017 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083401686 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07483979 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087810486 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067082289 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089843657 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069506019 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063811256 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088778131 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071424221 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083874088 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072187735 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071240601 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086600072 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069733189 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084143567 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074412875 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085997562 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067939659 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068513503 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08372449 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07899722 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087782614 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063777508 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06555146 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092493603 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066408998 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084059242 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066935124 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086587513 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069579193 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06686141 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084232101 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07010051 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097287719 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07259604 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085970964 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074383868 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096823216 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068283872 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071956482 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084841122 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07003146 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086105761 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077626972 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090260114 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074148257 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071243565 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081439913 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074785856 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09328425 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068456949 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0663372 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084381679 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072512448 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090173581 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07285601 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086187618 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066413279 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069810407 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088683798 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072151852 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084657408 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066810829 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09032475 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067757136 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092173907 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069670778 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078893598 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088466145 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063995196 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088391965 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066542053 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091263081 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063941219 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066242772 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085018551 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070194225 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083749797 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071352012 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063435481 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092588742 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076875661 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085074764 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06725507 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0683971 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092368674 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06931144 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089891453 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072060666 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091481893 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079410572 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068031351 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088516704 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079491288 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085764834 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062638352 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090878256 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06721933 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067548053 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084387129 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06658187 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08850346 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077238333 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09210335 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062115332 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071496422 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083760663 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067821121 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080917935 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074383548 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071440866 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08602929 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07588769 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086796378 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069733338 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072258997 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085689669 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069694917 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086596873 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071675672 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086808045 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070933356 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068143133 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089331258 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067618169 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083248126 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070129204 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068257888 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085207481 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074481731 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084530754 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069444425 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071020624 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085971676 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069983657 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086187195 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068224588 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089076888 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06974893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068302999 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08848675 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06422149 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093264156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068015041 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07694696 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084950063 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065364508 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091288265 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071211783 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090743609 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069771862 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069601571 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08749407 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068469003 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087964307 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074952388 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066816525 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096526562 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077520753 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086197074 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070755547 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085957158 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070245661 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067332129 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086503906 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069710448 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085378101 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068876278 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090384128 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072290708 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068493735 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087326539 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069543494 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084856415 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06931353 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063699154 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084817251 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068426036 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085228322 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078621774 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068802394 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085060991 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067310652 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086387865 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067825404 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065488413 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09379634 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094005169 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069142673 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07633434 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085056422 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069601093 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09672098 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065919278 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08362213 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066899198 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066448687 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093283308 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070502167 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094736367 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067970489 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068298394 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082261527 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069727075 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084671612 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063135163 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066424743 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089302548 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068032379 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084094676 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069054107 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072370198 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086727036 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078735261 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084601333 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068991238 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085935394 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065757071 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067906651 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084892512 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071835291 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086284806 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065764125 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066581089 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085740923 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069346572 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069858321 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085584386 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070254587 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092682826 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069163687 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08922741 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07237809 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064115827 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089264433 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068803878 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085677743 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067393454 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072285952 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088435285 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069073258 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094814449 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068739713 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087165221 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069072372 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065933253 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086264687 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069149884 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085955943 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068703769 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069694893 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093909648 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067016119 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089722896 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069126704 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08649338 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076142483 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06969732 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089713306 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076706509 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087053361 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070719633 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094341976 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072734521 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089888968 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069877385 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069458141 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092254833 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06824936 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093016396 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069136473 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06954077 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087111589 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066835131 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085227951 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069121247 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067002048 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091613624 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069859927 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085308633 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067107721 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066910041 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086790861 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071297162 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093505584 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071287388 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08964997 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063917731 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065097343 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08729318 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066686344 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087458629 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071795089 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07427307 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088168068 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068704734 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085614114 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077863874 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091404412 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072094174 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066266479 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089644135 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069789182 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087593738 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06889799 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069030858 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086936531 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071952872 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087844512 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068060039 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093276887 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071599376 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069952223 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086984553 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069518306 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086002488 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064081689 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069369546 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087846375 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074388909 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088390777 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068959321 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097257952 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066247782 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069093513 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089676251 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068294559 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090942939 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064765947 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070388258 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087230378 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069708341 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081346368 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068031283 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06558225 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088891739 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067631388 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081630618 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079696492 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096527539 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072322903 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066618725 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084990301 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064254835 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081450343 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067479678 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069790038 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087484112 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078282359 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085409002 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068168246 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081287641 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069449001 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0722114 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089079874 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065712695 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08203623 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067509978 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071876232 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091656035 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067976882 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085678326 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072775765 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070986537 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084551282 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072561107 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083172946 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072478769 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099742881 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069912542 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068334645 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092902398 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077293995 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087121805 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064570439 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087403492 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072016537 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069683244 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087195515 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070209809 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102628247 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071716389 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085923955 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067367905 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070566904 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086492639 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07783048 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087514399 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070285803 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091104194 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071183474 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096213006 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072133788 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094984525 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071925969 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071940415 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086001292 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0693449 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085257409 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067712499 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069569305 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08751716 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072883633 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094793646 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06854531 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098365517 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077686628 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088969023 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066274288 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067311471 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08651121 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064225583 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086227903 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067288735 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066471958 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085010216 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067469209 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070094383 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091896202 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069429255 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087800514 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06886387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062469746 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088756555 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071214373 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087420492 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065634249 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068558325 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087897265 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07289063 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089918399 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066738378 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087892291 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070929247 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069288409 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081970772 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075269924 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085279314 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071854505 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067923907 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086923467 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070157278 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09030018 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07533103 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088284185 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071391996 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076771597 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089205411 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065725264 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083521442 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074076467 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066095979 seconds)
  done (took 47.184759076 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111374598 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083365977 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064308299 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081830181 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07706078 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083642333 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06377757 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065191831 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083008865 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067879612 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081625113 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065035463 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091331772 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088759456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09569575 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086088653 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064337065 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064985614 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082404541 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065918114 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091708424 seconds)
  done (took 2.458168817 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088968353 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102788552 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08001136 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101388856 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09137582 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080151026 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097215278 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079775849 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101315682 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093727253 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08331986 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096959191 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075767906 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093431382 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075419632 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095801421 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100575603 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074544454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098698113 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079759549 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094735212 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097211185 seconds)
  done (took 2.777826225 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069321828 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067337274 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087658766 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063425375 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067310474 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081925327 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071146745 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084178295 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071821138 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066812016 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.093326037 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067329654 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087851847 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066358354 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067666097 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08376656 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135093507 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071314199 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086203419 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069968958 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063635523 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089000129 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064035137 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082916382 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066703534 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071873929 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.0876545 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066075099 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085807779 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066776718 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068531701 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084646319 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069623693 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067929716 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085140719 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06699155 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086574794 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068256902 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063839404 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084508069 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069672065 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082855652 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068965715 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06928292 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084189393 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065714991 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087724451 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068733 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063647254 seconds)
  done (took 4.507845579 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088701751 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142945458 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08897936 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124178287 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08411993 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094658355 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072731004 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124355211 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085459321 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066629309 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105261692 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083447394 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088443946 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072679201 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093010504 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067510251 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087469695 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066877924 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090978858 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067873496 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08997412 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07419919 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102221118 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.10052931 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072151424 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067356371 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086679958 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072225253 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100622003 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091844884 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072828026 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092660975 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084877207 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.089383698 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06806307 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089319538 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085520703 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087353316 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070887158 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084873492 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07122084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092217772 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075228425 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103896427 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068979873 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092013929 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068420715 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083978993 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082688563 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08913696 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077376434 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102390434 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090103298 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069701528 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073171217 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102884921 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086163029 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067044227 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071332215 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099894004 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.083809728 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072696967 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100843067 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070958443 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094426044 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084033703 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091991411 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072368424 seconds)
  done (took 6.754009083 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07701402 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092719981 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08361655 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102936109 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093259484 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075790754 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093052513 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074439574 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093310466 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080098111 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093077913 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117425734 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069733862 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096668617 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07551057 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094316055 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074035934 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093907099 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09326019 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074912484 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092817717 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083675639 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094139759 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101992245 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105566445 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088827073 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075016798 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094324384 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101562023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075395976 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10510061 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074997839 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094150455 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101028246 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087387401 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092264672 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067463118 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093107354 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075653793 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093449901 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069248354 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101726402 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093124736 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07038002 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093800102 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075284038 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102321257 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.104552655 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078325854 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098527577 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075541297 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102884006 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092566242 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075506381 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102278891 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127954283 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083532213 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102484455 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092903781 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083867652 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102109476 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108830008 seconds)
  done (took 6.398853083 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090935592 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096573898 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098673441 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063849626 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065529037 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091910336 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066715294 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085209787 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077741229 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095139128 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07970857 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091102376 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075824122 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099318137 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091373055 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075462303 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09035237 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072534644 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096374923 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072035025 seconds)
  done (took 2.487558851 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077379974 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104656936 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070285046 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094127671 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071359761 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074804333 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090008195 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071086197 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087829338 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072894216 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099007059 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079858041 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088551578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075041369 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098282664 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075125406 seconds)
  done (took 2.147084031 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081013744 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098986337 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084207983 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088666103 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066775447 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085319521 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068608049 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064531128 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085200472 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083572727 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089366623 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071784392 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08914792 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067541506 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06565139 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091451618 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064895756 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08585488 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068836933 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103380861 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080513945 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08707945 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070188086 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090035897 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069087753 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094025577 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07067722 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066803518 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087226961 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068870502 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088694353 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07678618 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08464175 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068263195 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086577979 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066986057 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068939412 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08860222 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072299146 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087518204 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068105706 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087600191 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07000485 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069628982 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084414041 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069214806 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083985347 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075627884 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066927257 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089232854 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067858576 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090408624 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070217878 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098748311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072955488 seconds)
  done (took 5.163827758 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082875033 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072900055 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084005718 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066544001 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090587072 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071093786 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072635066 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090328156 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070580458 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085545873 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070675346 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090235551 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07176094 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072290816 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090592464 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072320254 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083873948 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071254412 seconds)
  done (took 2.231215841 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075100682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068430431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094901637 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069175822 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088323127 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071763578 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064265669 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087599656 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067922552 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088198065 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069406195 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071434922 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087415945 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071489681 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087580348 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069249251 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070996285 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087160571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068456002 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084200752 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071764848 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06706263 seconds)
  done (took 2.50430672 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07558105 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096766188 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167701468 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111179783 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085073637 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102475167 seconds)
  done (took 1.461976223 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094751191 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103864414 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069737491 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109445535 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078100772 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090078189 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071319905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08940967 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080700447 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103838626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071121825 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09981495 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098367567 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083672267 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096713802 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076440958 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090770889 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070982885 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088383088 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108733455 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071339073 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098949094 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071921924 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090690029 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071994883 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09891883 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099381909 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085910534 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089556499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079772589 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097265953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070679851 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099106941 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103780152 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071938199 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099115429 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071013323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110139834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096098692 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079820545 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091119772 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077607291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099520059 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076406342 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099985529 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089209713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076916612 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089984397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071591508 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116079372 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096045381 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079148608 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096602607 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099208289 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080236483 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11594833 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104165599 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079230837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096232365 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104139724 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07983743 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095646413 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098340831 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085886431 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096424634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079210598 seconds)
  done (took 6.734241378 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085307444 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108416807 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071357461 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103468463 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099263811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071931319 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09081741 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071450081 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09035025 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071568332 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131803892 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071685678 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10009952 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099037193 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070841941 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090477393 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072246722 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098900298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070782217 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116993861 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0900205 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079127299 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099200707 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097276033 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085679416 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097166565 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070800566 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090329903 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089535408 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071641878 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094665547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071060109 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098109418 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070605421 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099075672 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0711679 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089740672 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076024729 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090961421 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095835596 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080757099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108392567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071715286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091174911 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104956266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07086055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09113461 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071210398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09088577 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070290278 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104565166 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084545803 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10496263 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098628658 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071529053 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090352182 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070971398 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089698082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071352344 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095884214 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098306007 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071057582 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11662061 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090015188 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072092688 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099467763 seconds)
  done (took 6.629789637 seconds)
done (took 129.754786714 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20146903 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185977379 seconds)
  done (took 1.213154895 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071456444 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118752139 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081185868 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13112443 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089340254 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101887807 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121074393 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081764948 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06951372 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089158487 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069009647 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090390485 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133503603 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069768417 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089106557 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071531439 seconds)
  done (took 2.311220169 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105664399 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201688788 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113136432 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067678605 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102152658 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080591054 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088524108 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080249037 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094415494 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068503059 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10023666 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078442451 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067769111 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098092399 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094289621 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08059111 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067707943 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100896969 seconds)
  done (took 2.52762244 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09808734 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111107998 seconds)
  done (took 1.040717096 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204098809 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124292607 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206717393 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.48264892 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.247119852 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.294170484 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175901124 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177010333 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157744109 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175572156 seconds)
  done (took 3.074302592 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101763426 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176660122 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321781361 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143090754 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091049286 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120431625 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142943676 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113989959 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085166665 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103758754 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104160652 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080393326 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121638898 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078448312 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098262994 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080191878 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125108536 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076237489 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096924931 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078804484 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121336749 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068486965 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097948626 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075986695 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.1016527 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081472044 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08845124 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068649145 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097426707 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078144549 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10178558 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118092725 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081721752 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134506292 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105502718 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137260659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099963654 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075608112 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076761964 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094511966 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080218933 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099959149 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106918252 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079130521 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067155397 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100358343 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067902662 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087625497 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083113531 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100595388 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081794992 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101840293 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134538911 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100557325 seconds)
  done (took 6.373320965 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.760217376 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137314322 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07378321 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.828625798 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11753931 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085895312 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.754779252 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095412188 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240814841 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762673856 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114269659 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079632688 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211986223 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219999722 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911002223 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291957238 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.646638939 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106937998 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110975911 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136607934 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165443411 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160190695 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153710199 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412219077 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099727474 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073756255 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141846591 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100560811 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14346094 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107187996 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075787387 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161842618 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252489278 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.165637191 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097830013 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072557156 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073413806 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17359098 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225693714 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197537463 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163040129 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069619148 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093422862 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14530611 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136041118 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070116277 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146438869 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178264986 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.153460695 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076318013 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100667222 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146393894 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145061673 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148532496 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104931925 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292435406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.296336139 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073334214 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125754283 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087187645 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241425135 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105847275 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18693514 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143136364 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194167596 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072740845 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759674678 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152581366 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093542481 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078194815 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125232232 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098458222 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146352048 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149580754 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389540569 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148503843 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076399726 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092377056 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190478083 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107451496 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073002891 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145998128 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098425961 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127815914 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151886123 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.153008304 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153971001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232057476 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149676712 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.146403209 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097400258 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128786543 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.079282262 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195102066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.203170878 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1475268 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.193850349 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165977237 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148561259 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.154046473 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080570776 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175662103 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124608681 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085747914 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144286852 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198313582 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128179588 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105971424 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077501433 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143920332 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130966489 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10929687 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145585377 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.154497033 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455185391 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152450277 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070133684 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110140703 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146664756 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146624239 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098825191 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223185175 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128157328 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.154292745 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124991331 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090208811 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125343751 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146483768 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082863769 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125737554 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164394902 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080613709 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219325858 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198069668 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082789053 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223737757 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165109385 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079513453 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156094017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123846699 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150301078 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100090356 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144412179 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098540531 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730569348 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169876537 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126618124 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076901778 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168050335 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072818961 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105930964 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085999778 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090278636 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758138836 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109196897 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103620051 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086573488 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099198231 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126874561 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140802243 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076833244 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165788332 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191868407 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101121123 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124041655 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085331559 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144848286 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098072829 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106459397 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086955903 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106933401 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128263085 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076199567 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106390876 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152980878 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144977466 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201506077 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557254018 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093413009 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086001071 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208596877 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093324486 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.249692934 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142238691 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205975147 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146667031 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102806756 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302460847 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.149289801 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170204575 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089041325 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156032663 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090274727 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141522215 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148335931 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09324638 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078051389 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.145583093 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.172201279 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149733499 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953561878 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073302615 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209655408 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089891903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154981077 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078358659 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100996555 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269428231 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07348977 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.153927113 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.148069569 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096354099 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106788482 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.837390491 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086628434 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165104672 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078410012 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201688944 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147027658 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142072655 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163181966 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080479436 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145542403 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191175745 seconds)
  done (took 41.679965363 seconds)
done (took 59.049076101 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282796057 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21678088 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.23450154 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149419217 seconds)
  done (took 1.817991496 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.148989457 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109413405 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119675431 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087709218 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107472391 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087703061 seconds)
  done (took 1.520501727 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.42855332 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280542653 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240804153 seconds)
  done (took 1.810574713 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.304205199 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235347538 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462170572 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.307494081 seconds)
  done (took 2.278848766 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198292941 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118127473 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091794315 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086809561 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.189271905 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247662831 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130665601 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193127602 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102495594 seconds)
  done (took 2.265192568 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.183792726 seconds)
done (took 10.736533309 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114125675 seconds)
    (2/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.252605205 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.108167376 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.275270442 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.22943059 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.170178232 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.159664415 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.150527312 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.215408141 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073408485 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091658151 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103281736 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077996763 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10498449 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.225244917 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.134056251 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.158838966 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088863755 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.221625016 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.223756573 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.153767567 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.173410996 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099265488 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.139613833 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103391114 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.129930032 seconds)
    (27/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097655298 seconds)
    (28/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.140941323 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135428083 seconds)
    (30/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.168660921 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091302064 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09070412 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.205020791 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075098762 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.091701954 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080000047 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.159599802 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.201361375 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095971246 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134195017 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.164642593 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098313099 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.155399749 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.184645045 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073935977 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.135586264 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075427072 seconds)
    (48/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080576648 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101304256 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095217234 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201525264 seconds)
    (52/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.2288946 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.170259017 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075054908 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113117652 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116560404 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096236688 seconds)
    (58/309) benchmarking ("sort", Int8, false)...
    done (took 0.166595441 seconds)
    (59/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067238102 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117636381 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070006902 seconds)
    (62/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.141398823 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099012 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076229582 seconds)
    (65/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084750782 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.200186777 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078481402 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.1008841 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079773688 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10341392 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.177320686 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074071202 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.210987537 seconds)
    (74/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074077449 seconds)
    (75/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.130398772 seconds)
    (76/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076784957 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052918566 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117775465 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.069419841 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094688596 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067678599 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.204522559 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.179326857 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.063890813 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.100027453 seconds)
    (86/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072004822 seconds)
    (87/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.171824547 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073060165 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134277482 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07055205 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07642799 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.128228624 seconds)
    (93/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071076534 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096844327 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.139626931 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.175148884 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114986772 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053150303 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.076044503 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075400324 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.059932288 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.141590176 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.174074916 seconds)
    (104/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.134340311 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053703403 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118970222 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.19194626 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.215369221 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.153897383 seconds)
    (110/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.164007668 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053754279 seconds)
    (112/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.094261979 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149272739 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.165463029 seconds)
    (115/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076929298 seconds)
    (116/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.087093906 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069123922 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079532423 seconds)
    (119/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.138735299 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056471957 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054217659 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115676566 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075040738 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.075940389 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.161809332 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076612979 seconds)
    (127/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07931552 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102874284 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069743791 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097974288 seconds)
    (131/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069581117 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123072862 seconds)
    (133/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083057288 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115660658 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074022051 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065151269 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097691455 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077890937 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.134755358 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173180158 seconds)
    (141/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.076983408 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097927286 seconds)
    (143/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.124415163 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113722275 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098081607 seconds)
    (146/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215171696 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163585152 seconds)
    (148/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085262388 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198257882 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055348648 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094064517 seconds)
    (152/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112551946 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069157187 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.102178226 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075139217 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055693681 seconds)
    (157/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.388854239 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060070852 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146899023 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079806686 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090460341 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077643519 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090334276 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05406763 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089577518 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.084756519 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077346341 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142670601 seconds)
    (169/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054179117 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053656922 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076851756 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054984737 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069497976 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116749445 seconds)
    (175/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095876734 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075491025 seconds)
    (177/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106198409 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.092213233 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053300344 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096846076 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07575247 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053634114 seconds)
    (183/309) benchmarking ("sort", Float32, false)...
    done (took 0.153398144 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091023618 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089983488 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053893693 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074563239 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.195087765 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077486971 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09122341 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106403955 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092291062 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068491615 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100452507 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053698315 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055024812 seconds)
    (197/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.125139993 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.143845613 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.076781966 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115940595 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089161736 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09853473 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077865592 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054617777 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069147791 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101064916 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070006614 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195697029 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077965837 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098603291 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068441931 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088822324 seconds)
    (213/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09445022 seconds)
    (214/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063228745 seconds)
    (215/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095269864 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072610196 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105448401 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149220262 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090596952 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075105528 seconds)
    (221/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054626367 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114279085 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074418113 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.077122728 seconds)
    (225/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069217499 seconds)
    (226/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071102448 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099695588 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.142120111 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089838575 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068644912 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054780571 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076915017 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073663788 seconds)
    (234/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06493284 seconds)
    (235/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079522469 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067466468 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054328739 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091756449 seconds)
    (239/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063770356 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165977782 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.20505823 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076519325 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078117028 seconds)
    (244/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.076956408 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068567114 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072064681 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141853171 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068262294 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.174298577 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074944764 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089862802 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054238112 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073284732 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097551906 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081088393 seconds)
    (256/309) benchmarking ("sort", Float64, false)...
    done (took 0.151361891 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067867354 seconds)
    (258/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132596006 seconds)
    (259/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081553579 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111031854 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074555302 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054159032 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117140074 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076372776 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091948054 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081845558 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065010576 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075555558 seconds)
    (269/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079098247 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089818601 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068230058 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054192946 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071166591 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096567371 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054226242 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.15568586 seconds)
    (277/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076001664 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069772677 seconds)
    (279/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077154434 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053638565 seconds)
    (281/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197773338 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076400321 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089256428 seconds)
    (284/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054886777 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115767327 seconds)
    (286/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.077478565 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054411799 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06775129 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098844168 seconds)
    (290/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067957279 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055503055 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113901569 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074858255 seconds)
    (294/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091461772 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138079358 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091640244 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074197963 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055808877 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.15800084 seconds)
    (300/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07152827 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078222287 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053771534 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076736606 seconds)
    (304/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.07742647 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055909957 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073613746 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091291928 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144384273 seconds)
    (309/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143833408 seconds)
  done (took 33.897050178 seconds)
done (took 34.758995155 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084419014 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118675016 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077690468 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117980004 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084816202 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104102032 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075915333 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104891037 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083975661 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107881512 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081639858 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057144471 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100546856 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077393719 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100105543 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095727522 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104172831 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075183001 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098091923 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067650021 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077084025 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090866365 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069443231 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056909359 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.1028098 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075366973 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097340009 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077241794 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06815584 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089966315 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070973862 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.09804706 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068217117 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083017719 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096399466 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075408628 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101178991 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079571918 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070634093 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090185989 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076855811 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090558093 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075615785 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076511532 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096084213 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073453332 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097988507 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082658582 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118197522 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070010612 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077232872 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10286924 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080811688 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097753446 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072650195 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098432902 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07288194 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119717988 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077068765 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070433587 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101598251 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077864736 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.097805302 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07599622 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076523481 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10278212 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.0788755 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095996957 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079236092 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074619789 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090841711 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076966977 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094014514 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068272306 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080073925 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102093429 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067428902 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096448779 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07579206 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075208797 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090584542 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069800338 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071125798 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097179213 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070791081 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057346349 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094243355 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074653074 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090315459 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077237046 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075089837 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096929497 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070244535 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101668457 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068092437 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073850283 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091041694 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068686382 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070661436 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095098244 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067797373 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093404189 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077812853 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069889097 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096941379 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083782481 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090886696 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074198537 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067396371 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090934931 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085032256 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101364166 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068568399 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07062364 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090699519 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074920537 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068063587 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091107644 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068712279 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090565513 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074988106 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068211237 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09327682 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075591897 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.0830665 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093715044 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072700449 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092563481 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068439878 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07445841 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091335458 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068223667 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070591307 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088446531 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070005312 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06989774 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09878587 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071025467 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099470362 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070629469 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077120018 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095025081 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074749397 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096264223 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067857927 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06122431 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093677499 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070872176 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070479634 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090934211 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069861065 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067600813 seconds)
done (took 13.545982983 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068993698 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176226899 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131469515 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100706946 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114367741 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068215322 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103799497 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133662552 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07054605 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133073301 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090707249 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112491474 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143718155 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067690974 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069158991 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095627341 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06968195 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116660599 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106369982 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113255153 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146938899 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067276091 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125815675 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093416608 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115402554 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120931762 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069183502 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095285414 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072445408 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130038325 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088932489 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072113041 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091809352 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128007342 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099873083 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113072231 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069380722 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111540114 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068418007 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06856597 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119958364 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127183144 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107961438 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086540176 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094449662 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071872768 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070103996 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112822143 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118017732 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08464301 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116121945 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140338363 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072318243 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109152288 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067988375 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115604705 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.087708008 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093826914 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070029265 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071958625 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090994749 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071813832 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11643898 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.120007993 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073291829 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.110028252 seconds)
  done (took 7.470037997 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088125212 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119041082 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087414313 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110714802 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069181982 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069776127 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091988248 seconds)
  done (took 1.558972429 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069699004 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092160408 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116483451 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092995029 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112945231 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091694253 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102722094 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06988835 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109409838 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06964898 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114019372 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109009104 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094567191 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076812361 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118194401 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06926064 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094120356 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092450157 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072130196 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116422081 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072029489 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113666322 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071314965 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069861046 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10774475 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070031423 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143112659 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074360081 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094544083 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073361282 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068388792 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145710758 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107026449 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079894163 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093016283 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085936738 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107868797 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06854236 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087176508 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099352286 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085100277 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093526761 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070654374 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068192619 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097894909 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081086046 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094532099 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070855143 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072371727 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114019616 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071030674 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108060111 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070214192 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074507509 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095395329 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076020479 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102468616 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071303302 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090361258 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094981571 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087617284 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111107535 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085410687 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111258548 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072369695 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108438075 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085121767 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073149303 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095243142 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073004074 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110972308 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06796562 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072000478 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104240706 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07084099 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11719381 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094122105 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094990458 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080637031 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070297028 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094137132 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070239508 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116612516 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073761474 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092937512 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074317252 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072718321 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091898257 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069020088 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.0735638 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090931785 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071662847 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073041959 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093936771 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072587479 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111391304 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070770794 seconds)
  done (took 9.542938217 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071342977 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070084315 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094981979 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070911736 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070119891 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094746295 seconds)
  done (took 1.405951297 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102496456 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096237209 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085095411 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098875151 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111793473 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108630608 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086104686 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109471009 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088365033 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107137675 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085955022 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109127187 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091249698 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100492644 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085420946 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100101631 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085686777 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104122181 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082725695 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100708116 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092135573 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099897015 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07741892 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111057631 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073857879 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099170594 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081527671 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106042424 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082499913 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110018093 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076903347 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096362649 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075014055 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.10889074 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086648809 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09855541 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075807565 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074190826 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103898061 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073682288 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110154405 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077083783 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105716963 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073496725 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110190763 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074959253 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098379892 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080572926 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109118042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074143407 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097758031 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075270054 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096560177 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074930853 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074744335 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109516472 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097457136 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08620531 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.099319502 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075421684 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072672121 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098176815 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085426831 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096959726 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083668373 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097041686 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075545692 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100359145 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077429224 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098522124 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075504465 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096722525 seconds)
  done (took 7.537334341 seconds)
done (took 28.434628909 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.654614789 seconds)
  done (took 1.586646851 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.801717353 seconds)
  done (took 1.735531463 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.567698199 seconds)
  done (took 16.504639002 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.656895252 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.809945888 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.824770119 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158285267 seconds)
  done (took 3.380526733 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.889159551 seconds)
  done (took 1.846610472 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245296248 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255738174 seconds)
  done (took 1.437360569 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.72818133 seconds)
  done (took 1.669715884 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.304389708 seconds)
  done (took 2.242412691 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.341130025 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18896801 seconds)
  done (took 1.473610034 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53267751 seconds)
  done (took 1.475567762 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.570513363 seconds)
  done (took 7.517410751 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233633024 seconds)
  done (took 1.192490191 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.274970988 seconds)
  done (took 1.223330019 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.210663717 seconds)
  done (took 4.160145223 seconds)
done (took 48.382310911 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081559708 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083891646 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108230833 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080587352 seconds)
  done (took 1.296389728 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081438383 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076064556 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103302322 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074270546 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105531188 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075694416 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101674954 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081163842 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099609219 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077095674 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075778899 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098758927 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078498542 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100821845 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073249615 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078881048 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103396824 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076131187 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102501931 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075938926 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097234749 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077857939 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102395463 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074714559 seconds)
  done (took 3.045978962 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08006502 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075990183 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10042401 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074725186 seconds)
  done (took 1.286714287 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080058757 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119375131 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093275552 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103776521 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096438547 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.1140233 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072341473 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073049464 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097242161 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08028674 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094500753 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103609355 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115425043 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08022172 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105902416 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069719019 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095579115 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.0916369 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08059525 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104732673 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073039398 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103125263 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071350775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117362888 seconds)
  done (took 3.193193539 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079926407 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129783292 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082871066 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116323325 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095547007 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069131831 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103119209 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094721919 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154620059 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.091692859 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073538187 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068569156 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099487534 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068621981 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079922142 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13695881 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141032303 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072498749 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12573872 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068873609 seconds)
  done (took 2.906764753 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078075877 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072390975 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092140441 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0719229 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079980046 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09909915 seconds)
  done (took 1.454830511 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070415407 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069912437 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093711627 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069516852 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074227336 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094336637 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069797164 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069738281 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094087421 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069954297 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093870984 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069263342 seconds)
  done (took 1.898924923 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.458877475 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071905444 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095607229 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069128377 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073942956 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093657153 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083762479 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071066899 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118155545 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068888327 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093955964 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071544432 seconds)
  done (took 2.332856989 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273961007 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080865604 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.338814561 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173252177 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143123699 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161098896 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132881795 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119980203 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204165133 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142835258 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237524595 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23205402 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115642539 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198403514 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093236089 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.136948317 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219418049 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203904366 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13416088 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234228083 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189837061 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160758384 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21193811 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133368637 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139521351 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151379247 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074419273 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10780495 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243839705 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168415533 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208315838 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142697677 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099782042 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240751503 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228341608 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20315191 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167612031 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089044948 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162967257 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171552769 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267023819 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117431612 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22794922 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113990175 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108425956 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178741872 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150637172 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152398775 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140340693 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117611626 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207161167 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24729099 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173106812 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090937426 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140211187 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143696644 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147867698 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131894361 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254101805 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226010846 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164714252 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074282646 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125589054 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220121586 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165667688 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146642245 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160536392 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124151365 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176101698 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221540252 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150330009 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181582037 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190949413 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093777786 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152932073 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20324847 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16150211 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240083439 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160532047 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075455636 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15775951 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132563335 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110159475 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149144082 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103725375 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244424534 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104694141 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14487909 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142181129 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141181312 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142710173 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22915219 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187714849 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134665222 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093174016 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109431471 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154560279 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207557968 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116555325 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113740565 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15406288 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106939086 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172467512 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10382713 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158222155 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.08100969 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181872816 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168562789 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079050395 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159260704 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132270974 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132046611 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17145264 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228015177 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094775862 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11159976 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235685729 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162142457 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137711292 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182608935 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223342607 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131585112 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106630811 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212972515 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253372389 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118653632 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206238686 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135621226 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112770476 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094255087 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184613479 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11951925 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152760182 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111845808 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158685799 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235138494 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078059483 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123835411 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169988385 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110752155 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108695762 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144862231 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105557678 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12378373 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131457678 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138389561 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175682215 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16051184 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138354726 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159852332 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130093931 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228351227 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118273759 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.134378171 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110163565 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097925384 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17208519 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225649275 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084310413 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237163554 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161526284 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134962537 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152621748 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087775613 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201629942 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082458151 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099032903 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181556931 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143615367 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142160967 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192373425 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134021254 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161101223 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157044208 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191525719 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168054391 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168776886 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13683075 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116266818 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145432338 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160835517 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077052253 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125319749 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111973656 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134826707 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100108495 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112809483 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179792562 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187694319 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10303861 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144225229 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127777861 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1886369 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105790987 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166126979 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153331481 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125634383 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194604457 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22454022 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170826397 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132644709 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208378068 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07491327 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078099078 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119670232 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16351232 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112609502 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088102796 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174201993 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188699398 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162878768 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199642712 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116536805 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154444896 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222215994 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074887376 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14826911 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214056525 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159611543 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.135235835 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114973015 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129235972 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184196331 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136310967 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258174487 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148612705 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157603068 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216864615 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134547335 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084807655 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135217682 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174596705 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136493028 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216802043 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131281824 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093282337 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143298574 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110171514 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136084047 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162974759 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152945269 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199406047 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149220368 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170062597 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080797736 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14919086 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18258772 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155362075 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068011458 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153779231 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23163844 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126508945 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153216851 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194569566 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108353804 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155544136 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248414129 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182251417 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114762391 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141170366 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155012347 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164551132 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152156091 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17612159 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141754695 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19515626 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117618711 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115242064 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11659187 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104894358 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139771136 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125887558 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145683688 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150490132 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124700039 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167317965 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144858036 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14343165 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153512011 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128009578 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096582916 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127895762 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244956728 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155217981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245107934 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106415375 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.216199756 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236909297 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07813433 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109122078 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.084043155 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203313619 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088812869 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195781744 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101293035 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135669132 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161391386 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207538792 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101279603 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097322936 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117018933 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194448163 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142352899 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104080373 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136832918 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23177567 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134620762 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083981736 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16008911 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135877019 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134579605 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246047351 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064741643 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12796996 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080074466 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110585036 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165211174 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222199002 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087633054 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157424988 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152581293 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15526026 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16643701 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130817698 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127021746 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143709951 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187060269 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163413143 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121611806 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145975226 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165376617 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224800412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138771799 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.126605678 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212786913 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221112454 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.231123493 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092500196 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147905403 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148566836 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144263328 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205969798 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086982082 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23556885 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112640251 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173993095 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133387629 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12476796 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162301337 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127269192 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119886413 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20585173 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152361138 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112547106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084393977 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146275162 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181152212 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108930179 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104134881 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174462718 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101653172 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173190343 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236005994 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086105007 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138882282 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12806071 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086936732 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137826833 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134497134 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118024848 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124998247 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236792418 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121879149 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216538115 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177642627 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147481681 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202361456 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131268164 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668808741 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082953374 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22223555 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153645602 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25055811 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129901848 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153486948 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143603448 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157471288 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180562279 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138360776 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208728155 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168499171 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155569493 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109240383 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135549634 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143305129 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094865151 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139123709 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14809077 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14790232 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132221673 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154356509 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191024108 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086247495 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128102985 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200420615 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15202527 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20584976 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178727959 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115256955 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15446607 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180239812 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109594867 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157184071 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222850353 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141895401 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132236754 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085613148 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139215119 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239834653 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077068578 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230075509 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15865376 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143222786 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147615537 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.180665737 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170425873 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139532261 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160408031 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127242645 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146373785 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15051914 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090172397 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107344163 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137601455 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146597412 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130377408 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135483499 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124218165 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218871178 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074371157 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12647463 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10848695 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208151312 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251102645 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093287287 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11274221 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151324471 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14637675 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150370495 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160004894 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111800501 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086350325 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113074436 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.138814948 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.117788922 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149852282 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135179261 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143053219 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236994136 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089234076 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257244255 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126088439 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142258767 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073350894 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.11010162 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103029682 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125924751 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137026818 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129176776 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240713148 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.10252666 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121792886 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123114475 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077067609 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112985488 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166769413 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144017587 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155781568 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12841219 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066538193 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140210461 seconds)
  done (took 74.073831454 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135860066 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105697822 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.120917646 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176392008 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151271531 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242739169 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184437819 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227034006 seconds)
  done (took 2.378809966 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07206064 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120833039 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105734121 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119082905 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093023081 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071303673 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308949539 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113435417 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092408099 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09461178 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123458059 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094302861 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.48348176 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069031646 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097017546 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087651122 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07033102 seconds)
  done (took 3.243691537 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.444965374 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.638232135 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450330081 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101254868 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.857371113 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111406553 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.280482551 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164441456 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093520112 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.425932014 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.73564465 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151512394 seconds)
  done (took 17.491607161 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077638512 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072593433 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113539973 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087243065 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101169491 seconds)
  done (took 1.485676811 seconds)
done (took 117.029482045 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082593764 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381660522 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055953878 seconds)
  done (took 1.506074986 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08697792 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08889526 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114890154 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088111468 seconds)
  done (took 1.421296598 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078058877 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079452097 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114104699 seconds)
  done (took 1.310974502 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.298296749 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172121197 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092318026 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085657341 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080581415 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107395221 seconds)
  done (took 1.31834233 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075150969 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07884472 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102149668 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080054594 seconds)
  done (took 1.374513188 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078874647 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055009478 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057424799 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083851418 seconds)
  done (took 1.319974968 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093425791 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108646291 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084312769 seconds)
  done (took 1.328069951 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111939056 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.115748043 seconds)
  done (took 1.271782744 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084216728 seconds)
  done (took 1.118945435 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096524669 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146419159 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.167347161 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142279542 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.177632838 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144784656 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118085603 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092153307 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107585213 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120954638 seconds)
  done (took 2.355777865 seconds)
done (took 16.000326659 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080606974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396406483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364424999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122046312 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671888593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387167574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981682703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122282702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111668282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0981168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087937214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679638681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973067009 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352221062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958687334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322295902 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680672016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07126416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096760237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071022658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96872447 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096129565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070749722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09684208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652073472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375130402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097312547 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318525255 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096893216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073358406 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357616716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097162101 seconds)
  done (took 15.962751601 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073983537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147160601 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078539082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086706296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100139402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072471128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101058366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072448019 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152032815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071751204 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115699738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070757928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101461618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072200714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090247868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098088515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070741834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098080379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070938905 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071044368 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116371968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070248996 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097593635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07124685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070891246 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109246648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071196661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097165023 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071050705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073289402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100216302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071763104 seconds)
  done (took 3.880516195 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118418485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157433339 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078066709 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131874241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144111943 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07300275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175062207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096697808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155202023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070747354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114571926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070865237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130997786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072426029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117381607 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071507809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09849905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072612255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071374157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097921145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0906377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097316126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071968808 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071853049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098124419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084654116 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098195434 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074377571 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097238193 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074388579 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075192408 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09832273 seconds)
  done (took 4.201784406 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075780266 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077676371 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112978172 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087609164 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099930722 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075039372 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075930446 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099693107 seconds)
  done (took 1.750552908 seconds)
done (took 26.831073015 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081439153 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072474279 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103414753 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084738566 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102810092 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082721515 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069827228 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105204856 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078261842 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102454501 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079617409 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070513143 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10070552 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070291786 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078109515 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.0983142 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083194141 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101300777 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083590363 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111086081 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073470255 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078157724 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104111138 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082479048 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110611151 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083120477 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110363479 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076600488 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072421035 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100451872 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079057188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115848617 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072388871 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109460976 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071670219 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071585794 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097899557 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070897639 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08362206 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104478057 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073941675 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104789836 seconds)
  done (took 4.747716543 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092638377 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096847972 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116009335 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064954656 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098559954 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064562043 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120496484 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06352225 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06490696 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120523273 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058777664 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060650597 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089422876 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056704761 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060233868 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059103219 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090162405 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058779386 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060449094 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08800408 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.06344572 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056838236 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.09016769 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06269729 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058550705 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064673542 seconds)
  done (took 3.033101046 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077471765 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084952301 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125409203 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160413318 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108797699 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.105793617 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081014274 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089759628 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114810047 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070121863 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101514023 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099870125 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116306409 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078245789 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070488911 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113493514 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085431104 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.100258718 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078033966 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092322995 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114496507 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082252826 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119818599 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082996419 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070534763 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100866848 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07477429 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112027626 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075755694 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107571622 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075124596 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073730623 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099514388 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081987682 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102402586 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073125328 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.118256361 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080651674 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078998628 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098142185 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074025721 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071830038 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1183536 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.116249819 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09660123 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077208969 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105052318 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080317363 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096894619 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089580635 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080222756 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097133622 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074120417 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069985517 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097298218 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084223195 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099479271 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073220058 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080753858 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100413404 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083420924 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102535259 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087202969 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070660928 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10436875 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069714673 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098475206 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069661725 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092988883 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098979445 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112018997 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099008743 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071148529 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107639601 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078113396 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077063776 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098688309 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086331121 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108144698 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073856487 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107815534 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074789337 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074144206 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11716929 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073419496 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072881442 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099084744 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077372027 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100831377 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072606518 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084458621 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.098245866 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072778591 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11630674 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071028366 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071728935 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104071693 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074845511 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097950941 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082951527 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103147989 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07147571 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080331626 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097871567 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074173644 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107581448 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075194342 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070433769 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103342429 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077532758 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098217227 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071567701 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072863366 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100055677 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081016103 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076496387 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102771508 seconds)
  done (took 11.622205703 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.201691827 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192119177 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07258774 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184597577 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082658273 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110003776 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185644536 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103018138 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099666753 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071432008 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099511059 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109884618 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132960741 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.144875462 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082143204 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070001028 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116318386 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140231721 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189870467 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154800155 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118352552 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078947957 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101280566 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072178659 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.100464128 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080365308 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.116139366 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083594002 seconds)
  done (took 4.363318003 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085675337 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130659032 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076874661 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119804939 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095390336 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098554301 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075802678 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073232126 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112209203 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084166792 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098410274 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078355974 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105946927 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080367482 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071769836 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107857156 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080332712 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.10001842 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074633152 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07520032 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105019436 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084227693 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102521769 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069621847 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078088796 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097569725 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068488051 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11666189 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070819494 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120902906 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069003708 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105197006 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080893499 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071189787 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09870736 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072823921 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100862508 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073410577 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072039826 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097336194 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06984098 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060821917 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097915803 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084804356 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104942249 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063151465 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07780038 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104678639 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075980362 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.096239041 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073741613 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073457704 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102886298 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079215703 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076182531 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103460282 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073728479 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098135674 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077561043 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072553007 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095172776 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069998389 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075449302 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.098603369 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078885806 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102773363 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06991959 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072287004 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102359233 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077238159 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100389445 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073777197 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068031519 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101077171 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076529637 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07531772 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100803352 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069650825 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097745829 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071223113 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058586474 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098023598 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056848234 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073680964 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096980395 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06968098 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072880599 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106548403 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084488781 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099848256 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077264672 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098601828 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070011142 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074041453 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093269724 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074259572 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085907663 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114607611 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097233976 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068662409 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084113716 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10385247 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06981995 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059641338 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106705142 seconds)
  done (took 10.094294253 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095834796 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123131508 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072864283 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085466705 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125608368 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096045666 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106408406 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076763212 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073511891 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115974321 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07133898 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107930686 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07548695 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079523486 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123843607 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079218511 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101161986 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079702976 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106699769 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.107644769 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085310172 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112610553 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080982981 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099115377 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075590191 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110776288 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098503764 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081679225 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108033115 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085072847 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10921574 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.097898692 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114464099 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.075600932 seconds)
  done (took 4.311864597 seconds)
done (took 39.215621402 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.145254451 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.34976915 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.122835385 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.968424501 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.173843262 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.143414951 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.133510673 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.122087173 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.726280904 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.122638152 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.371313601 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.673050621 seconds)
done (took 59.120501075 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.201113623 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.26056638 seconds)
    (2/2) benchmarking "String"...
    done (took 1.395100035 seconds)
  done (took 3.72130629 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.534523836 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.078229805 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.40064402 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.121852583 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.120825311 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.551086639 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.667062747 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.950690502 seconds)
  done (took 26.955218149 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.131869507 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.471148699 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.426620482 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.428112727 seconds)
  done (took 17.525997183 seconds)
done (took 58.004875846 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.11936143 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.13750479 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.134792221 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.108972464 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.226557166 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.151727597 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.418633731 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.35980338 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.133118149 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.130854581 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.12234721 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.125393947 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.128283553 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.395068381 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.126526313 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.122734226 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.152888994 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.593059695 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.492291486 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.146591775 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.126286073 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.149209215 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.125368338 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.12619316 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.134584934 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.13031828 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.122160338 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.149315691 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.306842471 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.126402184 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.210752639 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.598236761 seconds)
  done (took 188.69845258 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.122869368 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.242971963 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.392822216 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.143875192 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.616655925 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.327254376 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.262544865 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.675343223 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.13897492 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.131983747 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.23823227 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.123454966 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.290049622 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.109180104 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.134129194 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.204373974 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.427181248 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.311963138 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.136976469 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.397604726 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.1357983 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.122905739 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.079272153 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.222311869 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.158414542 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.164795129 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.133147212 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.138247479 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.313333246 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.375880585 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.127587735 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.15253781 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.682919645 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.986047862 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.145470132 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.154204111 seconds)
  done (took 146.589500413 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.387880167 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.124183443 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.124700294 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.124068959 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.153082165 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.123917665 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.636711147 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.649387203 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.622458312 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.576340538 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185339467 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.320644077 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.123687064 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216111375 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.137472594 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.124870533 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.138408096 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.150706798 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.12655877 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.125260122 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.637790979 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.137398745 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.159762167 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.13141092 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.125508634 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.153676879 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.518340096 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.125241562 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.154746731 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.439466777 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.168472776 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.125450402 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.397556634 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.126396451 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232429388 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.12795271 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.15472232 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.125852356 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.390251836 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.125842062 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.125094733 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.126541222 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.128432194 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.675361266 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.125402777 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.638627985 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.12594255 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.998724161 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.126497319 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.125947696 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.458792152 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.54158662 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.12587355 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.125359695 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.129026073 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.125717418 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.125941316 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.155815904 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.503395421 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.223237792 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.126420869 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.129840842 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.156433923 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.127699506 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.146896036 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.127047682 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.175040723 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.185013787 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.349918747 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.64107323 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.127225643 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219181036 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244285466 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.126115303 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.125588438 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.126932076 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.125171281 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.232459798 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.127007396 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.515691595 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.133406362 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.127969118 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185781812 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.21980664 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.127365101 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.415799012 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.127041586 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.127254502 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.794113447 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.128266441 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218540762 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.128295345 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.128059353 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.126546165 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.127627647 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.518815922 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.655048919 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.293486465 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.130017829 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.129385418 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.476568848 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.130178037 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.528798232 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.634455779 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.694078084 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.129010273 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233463748 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.132856393 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.130337817 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.128546589 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.156147937 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.128511665 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.188151184 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.127355691 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.525763851 seconds)
  done (took 335.45195972 seconds)
done (took 673.19574031 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.803894123 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.756787281 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.883509131 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.770827577 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.760636521 seconds)
  done (took 10.048716005 seconds)
done (took 11.12187728 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.302805433 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.303512516 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.185689356 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.305556413 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.157469678 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.321268267 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.284239397 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.149417433 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.226066062 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.200850072 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.225640441 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.176054667 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.155507062 seconds)
  done (took 17.067292513 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.444893481 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.451797094 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.198324142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.44318972 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.171130655 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448718898 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.334974097 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.36060523 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.326063241 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.14656738 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145247251 seconds)
  done (took 15.547136186 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.442216585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.480987586 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.199923749 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.449676774 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.173572312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453757811 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.334005198 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.345544131 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325578869 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.14665035 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.144646031 seconds)
  done (took 15.571693349 seconds)
done (took 49.260168032 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.140757402 seconds)
  done (took 2.216232782 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.17432346 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.333125811 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.155403176 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.145783449 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.141734642 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.144415346 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.14583504 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.141705416 seconds)
  done (took 10.459273964 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.13917206 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.138418334 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.141109887 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.140786741 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.137651898 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.140373911 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.14069143 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.137498508 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.140575376 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.140844202 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.138924351 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.137251426 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.139986755 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.138288217 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.138376887 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.141127061 seconds)
  done (took 19.307815985 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.140468653 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.137535669 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.138412725 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.139604442 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.137885185 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.139215245 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.139249667 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.138119014 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.138569036 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.139427972 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.140413819 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.139427396 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.139622942 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.138421864 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.138644662 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.139318104 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.138234931 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.139554704 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.143846433 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.139038414 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.140853498 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.13971425 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.141810663 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.138753566 seconds)
  done (took 28.425228223 seconds)
done (took 61.483500464 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.144103172 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.685136484 seconds)
  done (took 8.906808106 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.14170087 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.141802611 seconds)
  done (took 3.362216632 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.142062382 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.141143287 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.141716408 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.142191297 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.141398062 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.142228138 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.142313254 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.143358991 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.141603872 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.142123858 seconds)
  done (took 12.497629504 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.142853641 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.142675004 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.140235795 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.143250501 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.143654443 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.140038971 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.142747304 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.142863582 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.142657932 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.140451858 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.143285733 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.141470204 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.14371562 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.141876362 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.144688677 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.141881446 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.141364601 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.140744 seconds)
  done (took 21.640014043 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.142435704 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.143112934 seconds)
  done (took 3.364613638 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.140575853 seconds)
    (2/7) benchmarking "second"...
    done (took 1.140616928 seconds)
    (3/7) benchmarking "month"...
    done (took 1.140640315 seconds)
    (4/7) benchmarking "year"...
    done (took 1.140749177 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.140791088 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.141024665 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.141746871 seconds)
  done (took 9.064658161 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.144464178 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.323004372 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.402607962 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.753342756 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.145601663 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.148188963 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.041423857 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.147868684 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.150623871 seconds)
  done (took 13.337077907 seconds)
done (took 73.251158701 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.131668598 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.137197656 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.96344206 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.155667032 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.154161161 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.480320743 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.173207468 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.25571973 seconds)
done (took 36.531186856 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.153982375 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.819544725 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.863994525 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.13931922 seconds)
  done (took 10.903266215 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.121883136 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.063582892 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.138817636 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.142671173 seconds)
  done (took 17.548694981 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.735061111 seconds)
    (2/2) benchmarking "read"...
    done (took 1.469531114 seconds)
  done (took 4.285074648 seconds)
done (took 39.971346304 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146626642 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.145394714 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.14295124 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.146915915 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.143381342 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.144085658 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.145534176 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.143189323 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.144429092 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.145885814 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.146276178 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.145423187 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145975686 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143188661 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143534459 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.146219564 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146238285 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.14378725 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.143656701 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.143761064 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143767257 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14639476 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.143578251 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.144108907 seconds)
  done (took 28.555815135 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.145978472 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.144550883 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.146242572 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.147161906 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.143212662 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.14702981 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.147272277 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.143634479 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.146059238 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.1466066 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144017079 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.143882106 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.14723254 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.144416098 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147871831 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.144831562 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.146925288 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145251954 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147459808 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.144807222 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.148048971 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144249293 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.145102365 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147130987 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.14542112 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.144916303 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.147487418 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.146518512 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.14744585 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.144911677 seconds)
  done (took 35.4582132 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.152926243 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.15446069 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.147746298 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.148400557 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.147467549 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.148244012 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.147993841 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.147359492 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.148311205 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.147647108 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.148412235 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.148929471 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.148382969 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.148803915 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.148804397 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.149630102 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.149422466 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.149597403 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.148140581 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.149018081 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.148571061 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.148840671 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.149987729 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.149238746 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.147689771 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.148612303 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.149312674 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.149762721 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.150029996 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.150724209 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.149941837 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.150152688 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.150822465 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.149943943 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.151175029 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.151673574 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.154106247 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.156350455 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.150903257 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.150097258 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.14992364 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.149963146 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.150834773 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.150709303 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.150778378 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.150775298 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.150630082 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.150677071 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.150272419 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.150804502 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.150795504 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.151076118 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.15081366 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.151479458 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.151075586 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.150783201 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.150135405 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.150712698 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.151344886 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.150751968 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.15091869 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.151881578 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.151252217 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.151122957 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.152064752 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.151475266 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.151691351 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.151421102 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.151013253 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.151899599 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.151711392 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.15257308 seconds)
  done (took 83.906945725 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.152542136 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.148652377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.15069163 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.149557756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.14971392 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.151630701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.150263335 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152189393 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148951141 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.15153566 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152413141 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.150098827 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149981611 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.153264923 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153942159 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.150065824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.152432821 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.149954267 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.152835503 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.153635166 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.15227846 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.149264276 seconds)
  done (took 26.412983809 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154412052 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.153682381 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.150755917 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.153233085 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.151185903 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.152027742 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.153431301 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.153216299 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15379107 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155939639 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152224091 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152903489 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.150588163 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.15162818 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152889644 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.151906118 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154219682 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.151670705 seconds)
  done (took 21.838686316 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.152021246 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.151484768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.154268886 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.151369003 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.15146049 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.153492998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.151556337 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.154156173 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.154546426 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.151997769 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.15463721 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153835887 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.155259285 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152153163 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154411963 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.151880538 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.153534306 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.15187443 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153863345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.152140389 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.152655011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154928827 seconds)
  done (took 26.457682861 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154253145 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.155612163 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.152515355 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.152371703 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.151189274 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.154441245 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.154683179 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.152181314 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.155170644 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.15565632 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151879532 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.156907268 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.153534641 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.153854923 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.152160469 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151968937 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.155867488 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.154616811 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154752471 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.153134606 seconds)
  done (took 24.16797788 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.156136465 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.156336014 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.155834499 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.156256998 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157485332 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.156937352 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.15721077 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.157672898 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.157843822 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.158356715 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.15756602 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.157618415 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.157776827 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.158008673 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.157120839 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157989149 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158025661 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.157870564 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.157454723 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.158306036 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.158964341 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.157766988 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.158074959 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.158134918 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.157880655 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.157972864 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.157799704 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.158949548 seconds)
  done (took 33.504979878 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159205877 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.157496425 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.155937918 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.155926509 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.156319081 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.155488336 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.154647647 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.155522871 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.157627409 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.155326638 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.15767863 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.158585056 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.158036424 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.157429217 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.157826256 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.157496001 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.157731495 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.155510283 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155842247 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155508846 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.157883995 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158687333 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.158858688 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.155983783 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155998706 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.157846723 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.156143862 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.156210729 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.158826174 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.156949359 seconds)
  done (took 35.802986195 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.177588933 seconds)
    (2/2) benchmarking "in"...
    done (took 1.176910573 seconds)
  done (took 3.448042496 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.156819954 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157994849 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.159029222 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.156661135 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.157202882 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.159505974 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.159555223 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15752737 seconds)
  done (took 10.359202683 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.157756864 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.159219585 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.159283265 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.159588853 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.161176863 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.15882111 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16387374 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.176113369 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.158872403 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.159296026 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.164418798 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.164867467 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.160813514 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.159059661 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.157684908 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.160840133 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.160992696 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.160350788 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.160734876 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.161498407 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.160604174 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160577039 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.160891124 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.157065058 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.160987045 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.169259348 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.164204332 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.160999203 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.159172761 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.162905141 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.158950244 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.158338544 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.161963276 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.160847503 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.1620363 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.161770251 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.16847077 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176551222 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.166101915 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.161997475 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.16200936 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.1600051 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.161124893 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.162136665 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162323387 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.162305026 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.162072039 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.159925742 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.160233668 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.163274792 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.166183666 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15959926 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.159605089 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.165394195 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.162402045 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.16745133 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.179870736 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.163563143 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.16898884 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.169597452 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.172984535 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.168335759 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.162511771 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.162750342 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.171367751 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.182742326 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.166873134 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.176336778 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.159813096 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.163041503 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.167573165 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174502749 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.17014351 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.16343862 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162385779 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.163207436 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162499093 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.16393888 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.168741511 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.181765173 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.16411736 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164147776 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.171469091 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183461916 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.160495811 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.162753108 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.163972247 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.164243029 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.163981453 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17261007 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.179113227 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.163839792 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.161457016 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.161871632 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.164139632 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.164227181 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.16224107 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163485773 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.16053277 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.164475039 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16362585 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.166169952 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.171365197 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.164272201 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.164044852 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.169972073 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.164506421 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.162080068 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.170634132 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.165095485 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164941234 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.16466199 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.169215785 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.162286007 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.166727139 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.170983459 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.165141539 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.165461715 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.165573947 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.165992461 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172614215 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.189890608 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.166067846 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.165469816 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.169569574 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.175759779 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166304793 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.167712673 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.165651141 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.163322495 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.163379129 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.165786419 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.16587273 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.165741886 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.166364094 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.165341831 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.163760925 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.166073846 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.16539405 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.166326085 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.166108395 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.16529971 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.165875209 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.168327925 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.165475862 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.166372662 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.172473644 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.165139067 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.167437824 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.166168283 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.164042608 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.167160238 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.166098832 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.166501297 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.166986096 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165976514 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.165992683 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.16673931 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.167384268 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.168474996 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166634855 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.16680046 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169567042 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.167576293 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.169391692 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.165076426 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.166208261 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.167467831 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.168232981 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.166161926 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.167969099 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.16624993 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.169955253 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.173207468 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.168160616 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.167897612 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.169512109 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.167707432 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.168211777 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.168304233 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.169679054 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.174322718 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.168849446 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.174230601 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.169416206 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.169028616 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.168109895 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.167733732 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.167053912 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.168651344 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.170378533 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.175798989 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.179666424 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.176294129 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.169441162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.171952824 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.169660001 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.172462997 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.17198011 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.168372287 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.16990903 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.169605119 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.167463572 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.169333632 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.169186652 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.168816218 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.167454973 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.169920277 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168851859 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.170200407 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170434449 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.168584927 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.168585065 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.167052357 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.170584918 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.170074797 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.169519154 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.167701952 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.167726744 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.16858103 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.171099533 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.170014059 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.175396861 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.167681902 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170004445 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171792581 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.169121987 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.168848639 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.170479194 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.171436262 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.169552675 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.175714637 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.186333343 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.170629581 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.175767375 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.185274134 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.168723683 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.17248748 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.172425316 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.169091672 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.172323447 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.179086033 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.171035941 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170996822 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.170042863 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170302467 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171808071 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.17682555 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.169363426 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.170789071 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.172031237 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.171380122 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.169143641 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.171161769 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.170877223 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.17154552 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.172426905 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.172647465 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.172639001 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172497778 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.17414322 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.17110461 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.17191123 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174559237 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.179170678 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.176087575 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.171309615 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.172467332 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.172042035 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.176285399 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.17143661 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.172047924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.170807034 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184418586 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.180669933 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.177623476 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.172985874 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.173036795 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.176933218 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.17337096 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.175823371 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172058636 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.171523815 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.172271621 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.17166714 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.170426298 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.172959337 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.173049989 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173498403 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.17280907 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.176810966 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.173551957 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.172113626 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.173020025 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.174977636 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.174104581 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.172478005 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.174372294 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.175144816 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.174179908 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.17220625 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.174261654 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179178466 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189750259 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.17455932 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.172538341 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.173375409 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.172601663 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.174886589 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.175308842 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.177227125 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.182405909 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.176965089 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.182673858 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.174733787 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182520012 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.175958406 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.177922079 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.18228067 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.172548198 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.17281668 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.173153529 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.175449572 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.180701552 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.191935669 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.175618428 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.179747993 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17634798 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.17560823 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.175421444 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.175217659 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175853077 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.175053601 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182553065 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.192027813 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.178799812 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.175777971 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.173080515 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.17531769 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.176181168 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.174496146 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178777828 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.176188329 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.176365946 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.174498368 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.175420096 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.176290232 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.175328205 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.177826977 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.174895099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.177577124 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.180993324 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.192399855 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.179741845 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.17765091 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.183236523 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176761716 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183038673 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.192362602 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.176740915 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.178051856 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.176958636 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.176965623 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.175365591 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.177051279 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.176897963 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.176697966 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.181317661 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.177449441 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.178067128 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.176193037 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.177785955 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.176383722 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.186102569 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20047396 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.177960688 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182208909 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.175826234 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.1781049 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.181866924 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.177778332 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.17594567 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.179405067 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187233863 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18634674 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.176922223 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.178391072 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177769569 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178430529 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.17846728 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.178704483 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.177710554 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.179131707 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.177152181 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.178136412 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.180696121 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.179658911 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.177887747 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177560656 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.178280191 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.18726876 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.179277927 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.17921832 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179104653 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.179728027 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.177453601 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.177510458 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.178092188 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178536997 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178604564 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.178929674 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.184994905 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.183888585 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.180683556 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.177434821 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.179035337 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.178637498 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.178923909 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.180092498 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.179722287 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18011082 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.179670891 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.179878035 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.179600602 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.178263207 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.180351553 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.178896397 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.180323378 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.181348675 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.185538856 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179285604 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.177215815 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.180357296 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18050084 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.178365647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.179647043 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.187421614 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181656892 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.189215799 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.187820541 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.183773115 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.179883941 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181387399 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.186578602 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.178197266 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.180906182 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.18067596 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.18171898 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.180658986 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.183049567 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180852895 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.186617194 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.179893543 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.179615229 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187864905 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.196793885 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181292709 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.181254778 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.185157378 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.179742093 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.178320252 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.182429697 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.180539357 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188043724 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.199142793 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.182245675 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.183118667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.180279231 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.183382258 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.187680539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183264124 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.182061294 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.180329745 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.183263889 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.181979114 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.183869857 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.179586752 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.181566602 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.181157278 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.185274418 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.18913 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.180477663 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.184022188 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.181458069 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.182672444 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.183934327 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.18403443 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.181401761 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.181627669 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.18339583 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.184197192 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.181676562 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.185090119 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.181283247 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.183706681 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.184838358 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183800596 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18542271 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.191876925 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.190733124 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.181619993 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.18340527 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.183064305 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.184283907 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183712219 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.185088065 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.184634979 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.184154048 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.183024532 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.183777688 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.185165908 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.186459986 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198603935 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.199862048 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182134654 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.183608619 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186272154 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.184547709 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.182159073 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.183975112 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.18505403 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.186519414 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.191990751 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.185654846 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189275575 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.200235118 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.183710479 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.188794685 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.187308783 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.191405915 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.186436484 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.185318297 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.185339882 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.188685724 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.199444931 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.185613978 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193870693 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212902132 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.201438879 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.184548596 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.186197321 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183234026 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.186219843 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.186569561 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.186327783 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.186271413 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186467226 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.185795375 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.185950834 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189509932 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.186057521 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.185622879 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.187197976 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.184956506 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.1868498 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.184414002 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.186757975 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.186765383 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.18660172 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.186175342 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.186870102 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.185532113 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197482402 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.196216821 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.187837018 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.188343981 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.18467206 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.189461933 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.188662088 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.194822199 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.19406254 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.187205921 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.187303505 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.18870083 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187037917 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.185487048 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.186297794 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.186590921 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186325217 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.185059154 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.19887836 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.195951869 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.191147207 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.186276668 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188022253 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.188422405 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187287578 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187765236 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.18865393 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.188989238 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.186951233 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191436637 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.188968994 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.188754713 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.189526847 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.195942337 seconds)
  done (took 701.727563151 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.186463627 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.186534155 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.186619013 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.185825051 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.187789631 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.186927795 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.188082027 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.186121178 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.186183675 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.186216425 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.186272282 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186290472 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.186422707 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.187088672 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.186684466 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.18721641 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186899754 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.187537912 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.186454759 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.187665229 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.186883804 seconds)
  done (took 26.046338732 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.190253635 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.186742068 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.187334951 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.189896275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187021906 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.18964368 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.187572775 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190327969 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.190058472 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18722589 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.190471893 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190811568 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.188140359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.187317593 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187308239 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190924774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.190220717 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.188496464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.189549519 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.188572676 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.190232591 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.188749593 seconds)
  done (took 27.281492789 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.190635755 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.19096361 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.189454879 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.188588966 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.191063727 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.188299679 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.190370336 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.190596535 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.192426014 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.189994896 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.189420862 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.19086471 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.197590143 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.196374405 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.192179824 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.191734402 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.335468735 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.192146185 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.191377615 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.191518242 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.189309768 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.195181959 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.189374044 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.188639822 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.190087277 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.191756245 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.192805768 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.192246298 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.192323057 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.191790485 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.195036081 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.191799745 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.190504058 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.191967498 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.190288298 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.192108877 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.195742681 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.192196636 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.190738934 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.192073993 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.200635233 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.212322981 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.192230274 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.198424731 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.192539555 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.192038777 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.194759405 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.200007034 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.191017417 seconds)
  done (took 59.707571638 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.192720787 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.193401668 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.190949676 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.192717467 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.192447151 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.193465539 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.193031429 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.193279965 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.191822226 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.191065806 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.195010569 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.191784748 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.191845739 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.194173704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.194335378 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.191387253 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.191488884 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.190973865 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.192016881 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.191982977 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.19125837 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.194211813 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.193936419 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.192068367 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.193794425 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.19226882 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.192082798 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.194328339 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.191169119 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.193019269 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.194372245 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.19400159 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.19504775 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.193044117 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.192470217 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.194235134 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.19594633 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.193497166 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.196223767 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.19254123 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.195260636 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.194432968 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.196106737 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.195772717 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.192617318 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.193911415 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.19262808 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.1935788 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.193265582 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.195450193 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.195134949 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.193780799 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.196328308 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.193376821 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.196120916 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.195799152 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.193922838 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.193372013 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.195486692 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.194314746 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.192914385 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.1962038 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.194418901 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.196043086 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.196094481 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.193666198 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.194614874 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.19612853 seconds)
  done (took 82.300293568 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.195649317 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.196038054 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195793458 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196510643 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.197059166 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.196492503 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.196586238 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.196095684 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.196479193 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.196295493 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.196432979 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.197049355 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.19722362 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.197345558 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.195951213 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.19566921 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.196523828 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.196829476 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.196543674 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197295352 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.196818085 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.197003606 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.196932448 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.196441572 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.198036999 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.197603472 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196173766 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.197526921 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196213354 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.197189796 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.197361039 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.197096132 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.198321545 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.198159734 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.199044938 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.196684548 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.197309188 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.1981451 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.198272768 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.198522534 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.197962085 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.198264677 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.198583614 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.197542093 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197518993 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.197883679 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.198417299 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.199053351 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.199374729 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197830986 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.198777271 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197832119 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198536111 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197894111 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.198589963 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.199556048 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198139757 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.198207737 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198376895 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.199891237 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.198417045 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.199251062 seconds)
  done (took 75.377990826 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198967841 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198656209 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.197533084 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.197813733 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.199147593 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.197733125 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201049757 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.19967118 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.199655949 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.2002304 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200087481 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197261452 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197679635 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199403764 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.1974605 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197220002 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.197229413 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.196643075 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199218489 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.198266613 seconds)
  done (took 25.104288263 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.197645902 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.199913675 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.198720826 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197864089 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.20129532 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.198640813 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.199992604 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200945686 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198318165 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200149724 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201296874 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.200809664 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198535568 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.198087539 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202164116 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.199205135 seconds)
  done (took 20.327821375 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.198648507 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.201154005 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.20032612 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.200459867 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.199180127 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.198605509 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.200798679 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.198362928 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.199834325 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.202029066 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.201370747 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.201045014 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.202061197 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.201515271 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.199881444 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.201980195 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.199491828 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.200305864 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.201815229 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.202150263 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.200893349 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.198478735 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.201439037 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.201545746 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.200185193 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.200154137 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.199422548 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.199876782 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.199237391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.202943822 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.199624184 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.200339851 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.200495725 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.199600545 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.202553432 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.201962673 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.203275203 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.202993083 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.202875288 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.2035875 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.202491045 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.200433023 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.203290769 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.204182181 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.201653836 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.204176693 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.20088395 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.201334225 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.201983124 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.200351399 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.202461185 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.204086549 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.204560871 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.203536468 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.203965338 seconds)
  done (took 67.208212161 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202717617 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.20356778 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.201954437 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.203467236 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.204160101 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.201332047 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.204685051 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.201492562 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201597735 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.204203037 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.202954545 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.204624394 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202116975 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.204069455 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20357176 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204639508 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.203269137 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.202780109 seconds)
  done (took 22.795128807 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.202339503 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.202215834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.20439383 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.202679186 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.202084617 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205274543 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202908916 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.204620975 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205921215 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.202401577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202367757 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.205021063 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205196929 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.20523044 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.203064451 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203309618 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.205711351 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205231358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.203808315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202461555 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205934665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204853142 seconds)
  done (took 27.625578547 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.202421914 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.203245965 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.22151542 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.242504249 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.234053216 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.203602425 seconds)
  done (took 8.446247533 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204087791 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206212164 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204543392 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206885845 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206122751 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203472142 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204249972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204437571 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206446004 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204679567 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204687716 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206025575 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207368158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204146256 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206084423 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206745338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20406811 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203897994 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206518961 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206907153 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203821274 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207503205 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20419663 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205461903 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205235841 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203673388 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206419574 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20470484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204166538 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206921647 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206657984 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205350031 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207278987 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205787212 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207904377 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207978936 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204543621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207884301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208644961 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203804077 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.20819173 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207769727 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207239596 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205852987 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207875458 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205261571 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205353044 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205838348 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20587334 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20804419 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207677121 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206856106 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208456831 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209461207 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208290103 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20879573 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206599642 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206160783 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209427745 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207700719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207291421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208985322 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207184 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208478057 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209420799 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206641129 seconds)
  done (took 80.763173122 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206685767 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.207202216 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205978536 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208463235 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207926297 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206950462 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206365966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207032821 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207832668 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206914015 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209748215 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208075693 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207706879 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207087499 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206430751 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207179437 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208076738 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208180986 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207325542 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21107045 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208212395 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208542176 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208193661 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208583008 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208344211 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210196085 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207567808 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207388863 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20806869 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207515602 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207793721 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208785767 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208454379 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.207993214 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208538427 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208075942 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207295608 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208320702 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209361045 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210810647 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208442392 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211531006 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208955614 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209089019 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209675473 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209092183 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208873916 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210732657 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208628814 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209126965 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209720131 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209935635 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20921603 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208250263 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210486219 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209263305 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207993632 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209577988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209205953 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21207151 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208476453 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209734843 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211573823 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210293326 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209224082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209524165 seconds)
  done (took 80.914060971 seconds)
done (took 1636.62151871 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.286777218 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.192401105 seconds)
  done (took 13.623978719 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.367948141 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.321084498 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.204865321 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.257455461 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.204749259 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.206236241 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.198217144 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.205195324 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.204997337 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.205470332 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.20557029 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.394066988 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.259179365 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.205223753 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.205890928 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.297825358 seconds)
  done (took 41.087296751 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.232626883 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.211263324 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.319888442 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.22599191 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.232587831 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.387346158 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.260228539 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.210929543 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.374561355 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.247680837 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.724662911 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.232340427 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.210146437 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.28145757 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.225562916 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.38767472 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.441199025 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.722778306 seconds)
  done (took 28.072067852 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.642231337 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.203692785 seconds)
  done (took 8.986611066 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.198656606 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.227919152 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.237966368 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.245964564 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.211608844 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.222652905 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.234770631 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.259141706 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.228300703 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.21249715 seconds)
  done (took 63.422394669 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.226631292 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.207465832 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.20943197 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.206047777 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.199054346 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.212034606 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.206502756 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.20190775 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.685293161 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.327532353 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.221901471 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.214757892 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.20717259 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.207884248 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.20598935 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.241983284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.33037725 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.204969498 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.204882742 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.213068103 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.208067056 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.310715773 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.244215006 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.205692106 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.326972641 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.721842304 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.20982518 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.21439769 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.317446591 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.206140726 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.207675687 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.208076796 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.210000074 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.76771701 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.69671238 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.21370748 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.230849725 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.217183317 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.205810882 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.349764575 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.207941373 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.216163087 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.209833901 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.663055702 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.36177697 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.316671109 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.423926347 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.209936666 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.208269522 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.268279373 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.210025864 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.210505379 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.236914064 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.943403103 seconds)
  done (took 104.037115552 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.232321656 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.687215018 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.369015478 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.224929977 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.983668081 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.849443408 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.203137969 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.472140237 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.235894655 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.200350609 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.5238801 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.68526878 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.2028094 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.219850567 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.874091984 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.21288226 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.200302752 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.965760004 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.198492002 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.205061814 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604682421 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.214829352 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.199966835 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.358794648 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.239323416 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.641789222 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.575752418 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.639917839 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.202067091 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.199805739 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.641523127 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.206008612 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.197866769 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.198313457 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.463262184 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.531590952 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.514334089 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.200283225 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.236641519 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.198369301 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.234341647 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.634761489 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.519220961 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.198504935 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.198630185 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.653727819 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.198254712 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.208765392 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.197522976 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.394142562 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.199457794 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.196892498 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.61888636 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.198606926 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.542799524 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.250710865 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.278812418 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.65922801 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.196406056 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.255321077 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.211808902 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.195925315 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.198021766 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.20195619 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.195864201 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.516290675 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.337004281 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.201250491 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.516020882 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.623976649 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.197460877 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.686512595 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.002367644 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.20770872 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.278925567 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.196223752 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.764527852 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.653650846 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.221523777 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.195556216 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.495983297 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.198455075 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.499652775 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.206153473 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.196119286 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.601248647 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.214759407 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.211911833 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.194499001 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.194406122 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.84085741 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.197221029 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.442829777 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.260219223 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.192565239 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.192954119 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.24152924 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.192452746 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.205875853 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.198176815 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.675111042 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.194490631 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.494119447 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.210233136 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.192838249 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.19226756 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.193252593 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.193675057 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.403153036 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.605984867 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.192312266 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.192972315 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.189637587 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.198437843 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.328563202 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.192378658 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.453120798 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.193371879 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.190858187 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.19296987 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.824574866 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.234298474 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.192192024 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.195450048 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.042247918 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.397915339 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.214475194 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.191214349 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.191430415 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.202100288 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.339001567 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.192147533 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.279348993 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.192594884 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847648194 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.192083967 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.218276761 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.846737759 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.198495995 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.020737001 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.2079564 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.192187643 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.479074376 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.448214316 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.229227491 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.192473842 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.192775534 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.814553123 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.214552094 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.338303285 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.210300905 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.229055674 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.388107097 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.580711552 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.193438176 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.783958557 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.195087072 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.398621548 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.192495708 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.493123097 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.632266754 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.193071958 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.198857122 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.843465569 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856790248 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.815546815 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.195514843 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.502218369 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.183013014 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.646146071 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.193693059 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.192442737 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.650188628 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.19712185 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.199130299 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.192760348 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.194215013 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34566992 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.364270918 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.645675798 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.199207088 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.609453936 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.21460383 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.194180951 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.201301522 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.194558197 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.548730207 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.196796833 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.19592752 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.197071083 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.194014579 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.202108894 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.620394439 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.016034537 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.194767181 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.345441916 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.772826445 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.195633226 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.195964211 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.761706671 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.448055517 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.657644805 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.245815666 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.45776853 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.201051116 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.231605087 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.875156071 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.214730627 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.624095693 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.194795688 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.195138115 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.730998916 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.19464714 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.551398351 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.194887061 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.194946972 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.673457982 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.194521765 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.198463052 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.350856625 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.193944021 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.446608242 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.194504726 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.232630136 seconds)
  done (took 1078.435651115 seconds)
done (took 1338.810286932 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.195933046 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.19835551 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.186974482 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.201025573 seconds)
  done (took 25.919571007 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.209035589 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.205326573 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.205839299 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.203024843 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.208556092 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.204370648 seconds)
  done (took 8.375747579 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.260756464 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.200802418 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.199296799 seconds)
  done (took 18.801035186 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.393378857 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.332923436 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.531681126 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.100271417 seconds)
  done (took 9.499181262 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.206800389 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.206646107 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.206443794 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.209141587 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.210711122 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.21241464 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.208633595 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.209769757 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.212186992 seconds)
  done (took 12.021292483 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.660898026 seconds)
done (took 80.414825851 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.306230301 seconds)
    (2/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.505349834 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.38044665 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.184133733 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.37699476 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.585320266 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.260340686 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.236765796 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.566764085 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.423874446 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.259871914 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.240277355 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.227137792 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.199157584 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.419457037 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.670570227 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.972211115 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.676469763 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.547278382 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.486496904 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.339063398 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.30617095 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.324194388 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.42139538 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.199927871 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.009404593 seconds)
    (27/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.279106429 seconds)
    (28/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.455845342 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.75832198 seconds)
    (30/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.564351324 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.510935215 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.21413482 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.201695992 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.303960447 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.199933632 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.220742022 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.378725833 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.189786979 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.406520029 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.892911788 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.322045168 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.279104222 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.18670253 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.201888628 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.425221004 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.222759691 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.317263852 seconds)
    (48/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.323298255 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.287743754 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.466494804 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.201262075 seconds)
    (52/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.161622058 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.962504288 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.219642384 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.536432085 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.289819803 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.859253854 seconds)
    (58/309) benchmarking ("sort", Int8, false)...
    done (took 4.244649823 seconds)
    (59/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.421104245 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.20675473 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.26094429 seconds)
    (62/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.356144268 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.97426689 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.202355735 seconds)
    (65/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.318025206 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.429490751 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.233142569 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.535724152 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.22281244 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.167767841 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.313580132 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.881426746 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.39432281 seconds)
    (74/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.306693408 seconds)
    (75/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.534017443 seconds)
    (76/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.329516493 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.776829406 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.290367138 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.310811587 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.39386963 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.225957806 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.190165399 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.227874432 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.892541894 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.230799065 seconds)
    (86/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.270560954 seconds)
    (87/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.31780304 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.623601147 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.527111176 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.303570707 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.302079129 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.197666533 seconds)
    (93/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.330591988 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.231807682 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.328636259 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.724707998 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.180402557 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.405478337 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.381905665 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.655981613 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.679921996 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.707897927 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.999757544 seconds)
    (104/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.333637336 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.693761161 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.437927011 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.672261278 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.201478159 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.790808942 seconds)
    (110/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.441379314 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.409292991 seconds)
    (112/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.606204268 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.205530307 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.70520237 seconds)
    (115/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.233775235 seconds)
    (116/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.756725163 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.031543754 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.231300929 seconds)
    (119/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.316326003 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.190919345 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.413316498 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.295149982 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.232314704 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.191799121 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.723504986 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.230159916 seconds)
    (127/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.207726558 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.20930886 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.208938061 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.48724022 seconds)
    (131/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.204604441 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.227507264 seconds)
    (133/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.884863461 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.908273269 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.870367022 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.834822303 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.4876939 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.266476124 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.353423437 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.205959529 seconds)
    (141/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.398792443 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.022250008 seconds)
    (143/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.410727739 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.205394914 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.311908414 seconds)
    (146/309) benchmarking ("sort", BigInt, false)...
    done (took 6.206582375 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.350460578 seconds)
    (148/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.689914819 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.207734126 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.696713587 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.274055976 seconds)
    (152/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.881718163 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.894027394 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.234723957 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.235495761 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.509883984 seconds)
    (157/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.416573005 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.891480665 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.233441325 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.734466744 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.460144937 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.242153627 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.538834656 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.371126823 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.417037811 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.542735553 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.210067682 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.247475943 seconds)
    (169/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.818132597 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.975383439 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.602027898 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.698899706 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.217458217 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.253972762 seconds)
    (175/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.237270937 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.662870955 seconds)
    (177/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.223226105 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.226692614 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.519509707 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.273724996 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.56517915 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.359782388 seconds)
    (183/309) benchmarking ("sort", Float32, false)...
    done (took 5.153669202 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.225475023 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.597184914 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.812981003 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.235705192 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.28298981 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.262016344 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.241845229 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.284359837 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.223286506 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.595366995 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.246597964 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.317041174 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.626400363 seconds)
    (197/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.545999292 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.039682515 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.98826523 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.207330928 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.267742165 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.978038387 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.197857872 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.493916788 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.347010851 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.22001818 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.208540336 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.215809447 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.86933895 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.411830629 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.793591958 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.293609043 seconds)
    (213/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.293428805 seconds)
    (214/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.596601851 seconds)
    (215/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.296742713 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.229725677 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.36207812 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.21063348 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.04787256 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.896619974 seconds)
    (221/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.746105219 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.227805159 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.23390082 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.547077815 seconds)
    (225/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.254848824 seconds)
    (226/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.278341454 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.238491714 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.478822335 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.254817695 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.634313173 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.209181776 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.198217619 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.363738407 seconds)
    (234/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.237775977 seconds)
    (235/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.228643806 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.61326154 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.882703576 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.250404795 seconds)
    (239/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.8966291 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.213941268 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.211012998 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.238305333 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.296784559 seconds)
    (244/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.763580768 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.035829196 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.276119168 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.308036682 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.944666697 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.311813733 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.297205475 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.805747481 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.965510312 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.238852067 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.222286581 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.900721661 seconds)
    (256/309) benchmarking ("sort", Float64, false)...
    done (took 5.460956567 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.401904967 seconds)
    (258/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.50141961 seconds)
    (259/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.333905225 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.456251982 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.239726753 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.202160685 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.579526187 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.602603601 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.323477993 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.208138993 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.198241342 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.6037694 seconds)
    (269/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.223502513 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.978741149 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.877622953 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.765702548 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.654395495 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.240175859 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.54679837 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.201281629 seconds)
    (277/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.240036585 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.298751662 seconds)
    (279/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.957581906 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.728823652 seconds)
    (281/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.211786804 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.305876112 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.296596496 seconds)
    (284/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.209862413 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.306761687 seconds)
    (286/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.714127596 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.643251694 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.331654119 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.967305296 seconds)
    (290/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.297430281 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.20286828 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.471908696 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.241049075 seconds)
    (294/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.341009677 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.215777633 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.062017259 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.257230455 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.780566873 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.33410105 seconds)
    (300/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.300052322 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.222022514 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.212943462 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.250930479 seconds)
    (304/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.516909159 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.501026241 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.238387326 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.608382082 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.224985893 seconds)
    (309/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.214989794 seconds)
  done (took 866.573669875 seconds)
done (took 867.716563422 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.248502483 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.242362927 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.225183569 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.24597584 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.337574013 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.254711721 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.235334506 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.228190513 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.274484555 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.275077605 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.223700092 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.253255935 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.226803892 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.226259546 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.224898019 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.239760365 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.147974526 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.226709307 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.242873381 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.235109165 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.24281513 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.224907821 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.275156527 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.253662234 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.229492461 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.229943612 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.229021313 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.244615256 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.33829216 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.230389555 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.229153564 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.238083851 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.149137579 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.223413087 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.220961968 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.24649745 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.238433558 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.236115745 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.231196212 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.259050391 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.500978875 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.226332427 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.228486988 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.229105136 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.229194515 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.231670824 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.228505186 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.233591707 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.240597444 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.241536859 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.492439739 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.242249103 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.231363367 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.228458368 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.2383693 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.227149999 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.231369156 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.244744845 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.248164326 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.244566315 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.141321947 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.232754546 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.230284279 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.244635734 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.236474222 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.535968114 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.223671417 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.232946344 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.508064695 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.233572122 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.536494055 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.236565921 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.231104568 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.242811767 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.261214321 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.155190742 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.223867258 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.22786179 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.237168549 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.227969437 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.239452214 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.241742613 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.23469703 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.229966333 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.243180505 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.259521435 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.239463457 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.229888265 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.238656878 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.249457444 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.23706774 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.24126052 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.233697413 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.225460592 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.239537939 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.233850239 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.234074308 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.233699044 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.235674921 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.241367369 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.511028276 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.247263243 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.22636437 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.226114715 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.230194164 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.243412557 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.512063498 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.231712263 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.252467774 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.278204392 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.232701375 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.148507984 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.233688012 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.246718863 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.240437657 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.234601087 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.226050756 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.150120444 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.509540604 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.245382478 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.233039572 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.229971472 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.248089127 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.233923062 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.22860962 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.161449414 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.232734037 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.245973166 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.35305761 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.242515967 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.263697402 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.229904276 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.234771051 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.260210405 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.248359543 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.263718063 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.235298609 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.247450479 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.248794741 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.22847313 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.242978196 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.243840004 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.233915334 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.239570362 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.226843344 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.261323255 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.245578332 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.244966921 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.253623231 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.353753875 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.23012289 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.152574283 seconds)
done (took 207.354011543 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.291143763 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.228363342 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.312929396 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.229776001 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.326819076 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.326234392 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.228718269 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.228339252 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.227969412 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.609137071 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.228001615 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.227674748 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.228724255 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.228649842 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.311196568 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.23056768 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.228057422 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.572739005 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.2316149 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.301272349 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.227510187 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.22868402 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.230755104 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.611570247 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.223780055 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.22845099 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.300524361 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.231315282 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.574443046 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.223020616 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.229903587 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.575736033 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.319971494 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.248650791 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.241985966 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.239104662 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.328001471 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.245839478 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.314641165 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.314881109 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.315054367 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.269940962 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.223912024 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.232151607 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.233408763 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.232164833 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.230241941 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.257786337 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.227245889 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.229412223 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.57296237 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.24189833 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.230962053 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.230882438 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.23046079 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.260866207 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.23117152 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.232899868 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.321463477 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.233240307 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.29443423 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.611008471 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.612506406 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.232785166 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.230788628 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.230559991 seconds)
  done (took 141.552023225 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.297092563 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.303021449 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.336320766 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.232929599 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.281645219 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.339236156 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.23235884 seconds)
  done (took 10.187153112 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.237784012 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.233343994 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.280070932 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.281323896 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.233303399 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.37846917 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.234289527 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.244186374 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.231625899 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.286517281 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.235982563 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.234745873 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.241221414 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.227810989 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.281114302 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.243902036 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.348727307 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.23365186 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.233642165 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383550044 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.231547404 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.24111468 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.284592781 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.24401635 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.235218709 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.239982057 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.798172022 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.234417481 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.232717712 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.233894779 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.231972156 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.270981619 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.23488111 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.235260034 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.233082106 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349267911 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.235474962 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.232900584 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.234404534 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.233094252 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.234853873 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.235442645 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.235089423 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.233570702 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.235819919 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.256612336 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.234902514 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.235601847 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.234816327 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.236085843 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.285171099 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.23643759 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.232674797 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.232983713 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.290508581 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.242338918 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.236881665 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.232844209 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.23563058 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.234006125 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.386217816 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.282314215 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.236043692 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.281866293 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.23663743 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.235587136 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.236869801 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.236749151 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289900391 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.236005398 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.283995916 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.233210782 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.389242026 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.258988896 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.236628738 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.238159845 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.238713052 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.236233272 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.232328755 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.242064961 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.234055337 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.236382787 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.241271584 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.234559207 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.23517458 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.338484768 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344122441 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.235831503 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.249279229 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.243002596 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.234757016 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.289866905 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.237961158 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.235122534 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.288503121 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.351507117 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.290425225 seconds)
  done (took 143.541529728 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.241032028 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.244289714 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.2378364 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.252964117 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.236781525 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.237837206 seconds)
  done (took 8.620504102 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.238347841 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.238858004 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.237632751 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.238452883 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.238089451 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.240082738 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.238949815 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.237941869 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.240820934 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.238402081 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.239818741 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.241560079 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.241422854 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.239495603 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.238188495 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.2389787 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.239483145 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.236815141 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.23895142 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.238485112 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.333023268 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.240134841 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.239127562 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.239074163 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.24340781 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.239401087 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.24492939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.240101667 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.239555004 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.246058243 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.24139405 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.241158748 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.239727446 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.24360406 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.243326731 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.239511572 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.242498928 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.243055568 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.237781906 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.240133608 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.243752223 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.239930442 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.240860607 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.243706426 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.240308021 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.243027777 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.247210455 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.247688472 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.240992109 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.243526514 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.244080125 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.240940464 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.24250129 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.243661555 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.2424647 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243833183 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.246662929 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.241880025 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.241089068 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.240714226 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.241396952 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.242237076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.242000701 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.243461526 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.248859926 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.244029191 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.242295004 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.244803288 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.241363683 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.241669652 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.243471945 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.239893085 seconds)
  done (took 91.644381907 seconds)
done (took 396.707750968 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.417385068 seconds)
  done (took 7.59182187 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.46182336 seconds)
  done (took 7.637831712 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.005867062 seconds)
  done (took 20.18367719 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.31571217 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.286346974 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.239940403 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.24266765 seconds)
  done (took 26.25956481 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.424647713 seconds)
  done (took 7.599961217 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.235369585 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.235734192 seconds)
  done (took 13.648627747 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.552427781 seconds)
  done (took 7.72831604 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.701856841 seconds)
  done (took 7.884217081 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.261356599 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.263286826 seconds)
  done (took 13.950994019 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.221154428 seconds)
  done (took 7.396242842 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.867434776 seconds)
  done (took 8.044530876 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.243062573 seconds)
  done (took 7.421587327 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.238943101 seconds)
  done (took 7.415198617 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.550008444 seconds)
  done (took 8.725875305 seconds)
done (took 152.662662007 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.234317103 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.239305041 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.238936617 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.238014233 seconds)
  done (took 26.125886545 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.276810722 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.277333636 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.277850571 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.289030266 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.280713027 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.277289664 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.269235884 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.27019188 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.287727224 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.280732853 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.280821957 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.280309595 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.278525738 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.270370085 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.280694539 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.281047136 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.288880173 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.279037679 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.270876936 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.279688814 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.245931786 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.289075948 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.281849991 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.244416513 seconds)
  done (took 31.81673204 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.438903754 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.315492946 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.397315334 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.29585267 seconds)
  done (took 6.62470632 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.296357104 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.299465231 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.309508449 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.348670861 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.375900803 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.308118443 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.272387515 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.26670521 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.253407772 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.298618224 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.374180548 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.314118277 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.388437303 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.245311852 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.444944329 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.244966832 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.245492295 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.297589537 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.34907407 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.361848024 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.246952343 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.299037214 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.302436782 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.315088868 seconds)
  done (took 32.636593138 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.245998897 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.254641576 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.251109109 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.246460723 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.245469988 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.245631346 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.251923506 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.247564135 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.26727381 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.247090702 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.244676855 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.246431995 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.24490004 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.245938342 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.245945236 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.258520889 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.259230488 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.246246762 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.249647489 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.253381843 seconds)
  done (took 26.177934506 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.239013643 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.163733775 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.590211526 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.496249622 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.238850051 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.241257907 seconds)
  done (took 27.14905972 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.306081503 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.429216107 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.246096899 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.558046339 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.632717067 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.246358427 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.247343165 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.462573683 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.728177014 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.723263015 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.295756931 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.305104744 seconds)
  done (took 18.361407457 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.245150473 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.239903143 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.251993349 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.255556523 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.293643371 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.250346125 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.253526849 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.240445624 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.297066154 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.299272026 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.252082303 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.295146236 seconds)
  done (took 36.355058151 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338998636 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288119259 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.183990178 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964916962 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961461462 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.454697009 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.995534488 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.648487295 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.248516342 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516575012 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.928879572 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353978354 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.498314398 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.246277164 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.244838544 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.147706105 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46768373 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696049944 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245199432 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893460779 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270643459 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.247615755 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.977624027 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.271873267 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.455186738 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220321851 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.504520549 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.018920685 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50204706 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.254898868 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.253762457 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.243589774 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51778343 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874956351 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339865356 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.254584015 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.927074439 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.873582294 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.245958677 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.890262227 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.723746488 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.246568252 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255901967 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245859018 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.178685777 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.25052528 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659708364 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.252557809 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.956079295 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.244573194 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.255622972 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338641843 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.24930605 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.235055933 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265745894 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.250724996 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.242249549 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.251216189 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815268361 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766866522 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.26154987 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.182496349 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.608519431 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.972672031 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814227522 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.348126963 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.249483782 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.249032515 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180391751 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.952692926 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.265462979 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392366773 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.27288853 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89727097 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899580841 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.952330455 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.18759987 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770575904 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.25081186 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.183692504 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473468293 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.023056003 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182231551 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.191469266 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.181069133 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900677617 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255858371 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.595789692 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.254594293 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.650991906 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.259721721 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266149974 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270783811 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.470721084 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.132687713 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.247319456 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.707839665 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386386968 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269278794 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655622627 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182908072 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.250794428 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504163208 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.458533191 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.24816439 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.153805777 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430043564 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.248956014 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.264868661 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.252408965 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.260956793 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.768536834 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.260751941 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.356663617 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268277147 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.025533574 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949772175 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251786765 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.350435552 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.939026726 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486626366 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.969632025 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13226162 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315562885 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.253314152 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.248866984 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.989029875 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101961983 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.13067541 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.250985058 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254042711 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.261695423 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.249808424 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197716383 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.254047152 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.983653488 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.028226281 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.472534827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.258105284 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525808612 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182763586 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396576684 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25857804 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.473178887 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.354732497 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.250163736 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509111366 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.249908835 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.257399264 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.263493016 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26776093 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346256969 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271534157 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.260087151 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.507133978 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.253986953 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.254359192 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.000494648 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.030053147 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257762492 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.25649665 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064485719 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776601942 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228867433 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.253780796 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1390892 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.265559435 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318916113 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.256245974 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.260870303 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.908867893 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.043782101 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.256259412 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.261368927 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474305532 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.262538412 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.910374911 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332751939 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.429785093 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.780671917 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266250514 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.185814577 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.962560949 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.945042362 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251764056 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.450825405 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.252355722 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260511175 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.261486547 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.763640629 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.778222378 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253537337 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.916328848 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.259845312 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.262575248 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.257360905 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253775162 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.881843505 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.369922932 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268406756 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.26603855 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397906678 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.266442949 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.185813136 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.769610351 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.258302495 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.252865761 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.031204447 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28769988 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.926212705 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713445479 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513332084 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.926619894 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.265196919 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.079415383 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.285046157 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.251641917 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.736197717 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269082351 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.265495327 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264199541 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.263808354 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.978263827 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.694305373 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819312573 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91449287 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729560969 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080764358 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.2557847 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.150521689 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669618031 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191049699 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910083124 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423708664 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.667806961 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200161597 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.434744745 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.364716958 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.952794724 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.264179826 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.481596501 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075331414 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.74976005 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278669059 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466425763 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28971616 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.255499317 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.185084797 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.53976674 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466020428 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.789361276 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336140615 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664361359 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.760516175 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.044849459 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.254611525 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571549818 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410381679 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.801344192 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.642387913 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.256632731 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.99439017 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72280987 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.261914324 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.78128472 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824027966 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267741112 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.439978713 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193155297 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.268547776 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.266831817 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.255703044 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.38441162 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.256739711 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.510436886 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.266368784 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190213242 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.255873197 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748174299 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.117479398 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.262451055 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255695569 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957530312 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262800724 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518192817 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.257757812 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.866842626 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259454381 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.191956568 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19241581 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.95136705 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266272978 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232922511 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720455551 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.602797441 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.232177555 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287748846 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104798364 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513535438 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.272135438 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.787861539 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484949281 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.036645262 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279642128 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.357841616 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.756616102 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.259444419 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.155448993 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.494400476 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071678392 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.483358342 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.219739478 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.163420741 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.255211775 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.470347157 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.162784674 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.993119348 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502444378 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.970423369 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.268266103 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909679234 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285385796 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.990238197 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286444146 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.623001363 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.265534568 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329739876 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270286513 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.269375777 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.270079942 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413958762 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997719664 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274862151 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.273450722 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35316208 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.406040964 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.876345628 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.033346541 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796455641 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943366432 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.792386578 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272120327 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.260584396 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259915589 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194077766 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408395396 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.786198955 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534163511 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389339458 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.690034163 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282943517 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.781802514 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28197868 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473658224 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536088686 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.129733721 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266763887 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920689968 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.160733644 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.271794157 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.471402362 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727062367 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799306434 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379437672 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.265792816 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.673853479 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537279483 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.35131308 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260794588 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.849067857 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.279779923 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.587877318 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.267744673 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027327343 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410342554 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270975521 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903338246 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.270774839 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.422729366 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.035229028 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035332222 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.520533973 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.682543371 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.274161766 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798456929 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.900108464 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529505741 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332578379 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273468314 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.367167263 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40738763 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.269217079 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.161452724 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.262692498 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109930973 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.973683171 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.272529767 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795011022 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528590327 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.259945791 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.270203259 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285202548 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.272401775 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.485228781 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931914035 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.489183146 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272547233 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272183936 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.253783162 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795106941 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278098956 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197828875 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.267897826 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487518797 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.501696614 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287687847 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.716006397 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.974515317 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794032958 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.238237039 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284638238 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262587931 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.902097814 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794982367 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.887997019 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736155546 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923797997 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273660422 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541359189 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.269264508 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268870786 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542590801 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.268366126 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.270543098 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277494491 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.796141811 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973415021 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.279684027 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965022098 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.203737985 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.490387412 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.884878798 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204206955 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264960699 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.432496017 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.266748575 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395667099 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277485556 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.273461819 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278924037 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.00075767 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544932052 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.27211708 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.251932004 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.867233419 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.276831603 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272818584 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486061802 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271524928 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.938266156 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.617616913 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.522268278 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.275190174 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.252376444 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.271084287 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265740005 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.982486196 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236090481 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.767585621 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797594914 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.277750798 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.279205913 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270686247 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.482503623 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479191076 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.061678347 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291550547 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266786864 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284889786 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.172315835 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.034540738 seconds)
  done (took 1530.270185753 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.267790659 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.302705647 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.301318709 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.296447653 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.299837542 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.309855518 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.304778726 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.329725578 seconds)
  done (took 51.61683121 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.277552066 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.418876737 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.295475549 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.267564729 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.277635883 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.26576243 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.686503807 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.273436157 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.278183033 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.275693823 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.276482422 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.272101169 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.873197511 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.276974374 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.267231449 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.26887387 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.278709536 seconds)
  done (took 64.042692258 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.266832733 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.412498562 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.347057951 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.272485282 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.817545836 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.276999828 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.323738178 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.312285104 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.268444481 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.54079009 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.927841825 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.308949503 seconds)
  done (took 82.283366478 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.276128403 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.275370068 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.275174313 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.275272034 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.27608978 seconds)
  done (took 7.585372466 seconds)
done (took 1942.222567611 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.514047404 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.882898679 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.8485845 seconds)
  done (took 4.938412342 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.412712904 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.463672398 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.583070104 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.587665058 seconds)
  done (took 7.252390549 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.549028814 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.651631971 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.466931279 seconds)
  done (took 5.87274307 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.551608117 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.268439332 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.386609368 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.266936699 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.26770754 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.269606658 seconds)
  done (took 20.009779922 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.272234384 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.275086883 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.271257174 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.274300775 seconds)
  done (took 6.298580371 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.251116134 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.965767075 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.252623834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.267061603 seconds)
  done (took 17.941801656 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.017750309 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.029386164 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.014908402 seconds)
  done (took 7.267434752 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.278944346 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.108246859 seconds)
  done (took 9.593139219 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.559598755 seconds)
  done (took 2.76443307 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.403216295 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.597424226 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.255650339 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.194301416 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.244887555 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.661612563 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.718473606 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.345751193 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.195061081 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.188145968 seconds)
  done (took 26.011681684 seconds)
done (took 120.879115932 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.774212557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.269729247 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.469676544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.736093148 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.492565578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.468387462 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.478669684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.699719127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.248452716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.238277958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.734431943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.492424018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.433785569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.2686941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.433054216 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.268239171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.499175514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.82672693 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.419659738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.615754861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.481218788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.376272542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.566862983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.399866478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.495705937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419360802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.961771737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.513207671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.592859903 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.981275286 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.423933942 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.799140401 seconds)
  done (took 183.087686381 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.267079495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.278077688 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.269866185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.294851399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.275462592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.269762749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.28174771 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.268675211 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.279884316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.289048888 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.268859587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.268168626 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.268652366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.281459265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.271059646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.273900112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.269764768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.285276999 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.269427442 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.268148417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.274831707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.279682149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.268473318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.269227487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.269171613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.270625784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.271518819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.269737481 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.26943205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.274235466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.26953029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.271159803 seconds)
  done (took 201.96631398 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.270348815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.269620171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.270375139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.275046448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.270268022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.27187648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.269328187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.271009643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.281010645 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.269897878 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.274239872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.270475676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.273209799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.269684664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.271180522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.270922092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.280909269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.270420789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.270032961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.271535991 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.271071372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.277720572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.270719598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.282519513 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.270849041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.270915549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.296270719 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.270710802 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.270779704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.271410958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.272179236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.284074496 seconds)
  done (took 201.962132242 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.467580171 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.27961136 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.280553044 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.215471169 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.281150672 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.280187502 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.27551142 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.477829814 seconds)
  done (took 13.768480975 seconds)
done (took 601.991612513 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.51353552 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.241628497 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.474836392 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.300752824 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.028584481 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.303189375 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.302052548 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.451894246 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.169900042 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.455383933 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.449354148 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.299641545 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.591195485 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.30005888 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.533844274 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.388195532 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.137054849 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.250988842 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.595019432 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.778827979 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.549329594 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.692768988 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.453946911 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.186489581 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.592605838 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.694465246 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.9476691 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.140683597 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.301629366 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.596747509 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.89537557 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.200499064 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.353182353 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.332937046 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.388732407 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.371239005 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.173206205 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.334029318 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.473681531 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.470622588 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.782751404 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.007599506 seconds)
  done (took 87.719594031 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.270831593 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.270864325 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.269901836 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.271711003 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.273671547 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.270181027 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.269719889 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.270030815 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.271204894 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.269602062 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.269487517 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.272557326 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.271135917 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.271905301 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.27035914 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.269813363 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.270904277 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.272468742 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.269878052 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.270081122 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.270363234 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.270850649 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.27049391 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.271079834 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.271300002 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.271129111 seconds)
  done (took 34.256879953 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.285031303 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.522125367 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.685264383 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.292641615 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.283352093 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.286803298 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.352767693 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.285834866 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.28596073 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.286678431 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.428590873 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.288055527 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.318291272 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.694130705 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.285113454 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.286408029 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.285550422 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.284414394 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.536718776 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.294176769 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.371630478 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.287057828 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.353056907 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.295371435 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.304289862 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.285538488 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.289002892 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.790734052 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.286920891 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.434016107 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.976804337 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.352927474 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.741694621 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.682008782 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.977156171 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.290636751 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.285863628 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434823008 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.287889886 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.286180031 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.353223588 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.2865861 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.681842273 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.883849666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.298766966 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.287492093 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.808500807 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.436887664 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.502267769 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.293826369 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.701590157 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.288976104 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.288894362 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.287333461 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.500775449 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.293898213 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.285660613 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.795161369 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.305933856 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.354719544 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.28772242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.286587349 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.536677256 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.286402914 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.525378933 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.287674797 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.294201969 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.288590898 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.685354902 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.288542837 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.904085753 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.300626819 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.288472267 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.432200191 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.5250265 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.84292851 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.289525366 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.540029536 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.758256202 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.353687509 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.289753055 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.780482577 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.358424254 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.291216821 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.292547318 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.291561821 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.288752376 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.340344742 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.35409979 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.83013847 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.8920893 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.806020893 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.371481086 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.300089775 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.288692943 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.792171814 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.303831378 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.289683719 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.679148216 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.903253594 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.301882342 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.296035557 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.888228487 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.303415847 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.35717129 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.292564076 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.688754845 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.289226612 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.33950531 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.288602013 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.295412689 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.295177521 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.360795192 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.294410997 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.2913946 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.878622322 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.455978615 seconds)
  done (took 169.099762288 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.28225442 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.28212527 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.281805912 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.294190725 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.282578964 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.288141229 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.283443732 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.284994311 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.288339741 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.28282562 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.282996878 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.284601545 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.283940607 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.298803261 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.292671438 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.290861618 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.89417898 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.28481579 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.284220379 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.297177825 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.06050975 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.286843481 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.282729207 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.283438399 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.284630393 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.282052684 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.28427251 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.285501528 seconds)
  done (took 150.617405668 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.291533237 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.793765082 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.291830654 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.407564255 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.312105262 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.290322885 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.404603099 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.340846398 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.294770314 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.290415677 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.290239217 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.558934987 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.293172458 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.747079374 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.458720873 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.406285027 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.747476313 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.294148337 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.290499269 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.291980353 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.409292199 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.297248745 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.560960403 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.795034803 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.294176386 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.797229504 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.281333802 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.293450011 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.289936298 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.796862609 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.29144265 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.561522167 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.359127772 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.343513293 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.796827862 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.75172381 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.75287964 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.420507161 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.291781619 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.291532346 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.291220551 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.281549645 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.798644723 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.294850389 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.294158481 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.79255628 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.307132576 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.295515199 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.302704962 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.29132908 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.343646629 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.344957515 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.564817489 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.802614837 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.360654127 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.313018647 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.407867288 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.671305544 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.296419847 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.750640121 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.281899924 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.803628325 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.29855083 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.282588052 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.296272638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.30008758 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.425836291 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.41149664 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.752757388 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.294903669 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.752611274 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.425723134 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.297431937 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.294352759 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.297561058 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.802498593 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.753743778 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.428020666 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.41566884 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.464762311 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.287140386 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.29375226 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.283535364 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.3621839 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.293924533 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.804655516 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.754962189 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.297343818 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.296919282 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.296870716 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.297524478 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.450419668 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.808009971 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.362708899 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.748549512 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.582458483 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.567820077 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.298146167 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.347743804 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.297074769 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.568346601 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.299268276 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.346489594 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.73528358 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.568265393 seconds)
  done (took 153.135130034 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.533013124 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.405367778 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.378896039 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.399555454 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.863010881 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.842898936 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.555482884 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.408929558 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.395066946 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.525698514 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.370778617 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.388239231 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.450384444 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.362838954 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.017213391 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.361328312 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.381749196 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.412410533 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.383570216 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.272453035 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.888422597 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.568430528 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.458137938 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.218260657 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.379898679 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.018975338 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.816518696 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.865356325 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.460333182 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.517783876 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.823096889 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.365706078 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.209531824 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.913771137 seconds)
  done (took 62.442026889 seconds)
done (took 658.48242437 seconds)
SAVING RESULT...
DONE!
