cset: moving following pidspec: 4416
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.303870064 seconds)
loading group "string"... done (took 0.584693859 seconds)
loading group "linalg"... done (took 7.20383497 seconds)
loading group "parallel"... done (took 0.169016702 seconds)
loading group "find"... done (took 1.129925666 seconds)
loading group "tuple"... done (took 2.00317731 seconds)
loading group "dates"... done (took 1.287078321 seconds)
loading group "micro"... done (took 0.236728854 seconds)
loading group "io"... done (took 0.973310235 seconds)
loading group "scalar"... done (took 38.593288482 seconds)
loading group "sparse"... done (took 12.33191005 seconds)
loading group "broadcast"... done (took 0.968953322 seconds)
loading group "union"... done (took 13.143761714 seconds)
loading group "simd"... done (took 4.424374521 seconds)
loading group "random"... done (took 8.977510071 seconds)
loading group "problem"... done (took 1.933844282 seconds)
loading group "array"... done (took 21.160811169 seconds)
loading group "misc"... done (took 1.925374725 seconds)
loading group "sort"... done (took 3.211563294 seconds)
loading group "collection"... done (took 17.987135852 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53979442 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143108517 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118448705 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139388868 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18633005 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132527745 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145955839 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08671779 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.029291889 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162558323 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140159495 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478923066 seconds)
done (took 5.062786319 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204868881 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087885868 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097419325 seconds)
  done (took 0.886059691 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068267778 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128325134 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081755809 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068850405 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067563699 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082638203 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067910657 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067343084 seconds)
  done (took 1.272348897 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07495035 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069802313 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086468849 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068922031 seconds)
  done (took 1.011304656 seconds)
done (took 4.161119468 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.900660935 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.235754259 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191132649 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456482387 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149008288 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190731749 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.663893715 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348802202 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211277316 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102185549 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106069675 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.381428747 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107694575 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661008465 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07692896 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106730344 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160846689 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.464024718 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082111464 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083497271 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104403751 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14347574 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101298611 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078244598 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171772797 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070864727 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149181824 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096324826 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069064898 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.246346988 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190915885 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695244934 seconds)
  done (took 10.544331991 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100984335 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119201048 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069629507 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140873304 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105031921 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087261668 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072360298 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084363817 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093195059 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160311348 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116257983 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107483172 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082915205 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071050494 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102833145 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213421891 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107801779 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086502304 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088673362 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076931314 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122842013 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084000775 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095166416 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079966943 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153532922 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196398205 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11158281 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112179847 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070153019 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08158901 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132292111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142504258 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068531759 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083542221 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140638003 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11152235 seconds)
  done (took 4.594691064 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.051036361 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.16158729 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092770051 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152852102 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086745855 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109929979 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083951979 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09981385 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246371963 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.070710204 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.45466791 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129494374 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102265359 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068520608 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085066573 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069006458 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.509795728 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145432531 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102431043 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103931248 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090530714 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071336657 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358759536 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068842427 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067444547 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085153007 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060678651 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145487502 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068522508 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.222455102 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088744074 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089791131 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119449182 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179935371 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095389629 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122945288 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082572673 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067793646 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.1699285 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075053637 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08422873 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089047609 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121576203 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119880766 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070420433 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082678319 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181961404 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067941439 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100607951 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.894106065 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086326022 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168681172 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092425788 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071062438 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289821552 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085588651 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084635582 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065363371 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272038397 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153286984 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068372001 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084358637 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067065496 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068705711 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382719087 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068450678 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.020825184 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06963936 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077522886 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086399123 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068063093 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089560484 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073927235 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102330106 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067630087 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064731108 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085560494 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067658429 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082389136 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070249676 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100934189 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204495591 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069039147 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06699299 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082772514 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086590777 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112884421 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070690374 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082726715 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101439369 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107990912 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068483201 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085330411 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102727828 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084735138 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064805983 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102612837 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085458104 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115070135 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082529715 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137511891 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074241759 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111730234 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07342408 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115506711 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094978119 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069847614 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153429738 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06575477 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082558692 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068147479 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065499007 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085394693 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069375739 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098811812 seconds)
  done (took 21.266364709 seconds)
done (took 38.16625066 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291319687 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091568086 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09254384 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076141286 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092581174 seconds)
  done (took 1.431327618 seconds)
done (took 2.190788102 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120772471 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117064122 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064557733 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113255101 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064309564 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117238823 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114479077 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081926894 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118758623 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065041796 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112655902 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065407976 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064355034 seconds)
  done (took 2.007437036 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084169119 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086305894 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086344126 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082452499 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079978579 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083936059 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080835344 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106127549 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081846143 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089209904 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065295227 seconds)
  done (took 1.683084671 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08345835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084493043 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085952397 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081767597 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079620125 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082892152 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081323045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103020812 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081696747 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090444398 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065977276 seconds)
  done (took 1.681083786 seconds)
done (took 6.121269032 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079290254 seconds)
  done (took 0.83210033 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.698079163 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.668502537 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085773964 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134849475 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223352193 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155786199 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.443578676 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110221704 seconds)
  done (took 10.442108497 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104626208 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089945017 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070942949 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086870717 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072085431 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089790881 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072412507 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073280471 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085256582 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070580665 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085390702 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06968854 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085867211 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071642761 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072717315 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087387303 seconds)
  done (took 2.109478376 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094502614 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093544945 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091946407 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076761889 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090907868 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07429563 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092912065 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07518066 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088855582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074173518 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092128585 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076472749 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088983943 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067518471 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091729411 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077328153 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088470066 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077252981 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092641827 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07662223 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09253818 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06760972 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088864883 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076037877 seconds)
  done (took 2.8722354 seconds)
done (took 17.01489361 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131067653 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077075127 seconds)
  done (took 0.967711341 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083073207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098312899 seconds)
  done (took 0.950466363 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083467994 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082100073 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091044731 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094352722 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082174181 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067894151 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103307544 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06770531 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082727934 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068596435 seconds)
  done (took 1.594013637 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069517743 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094087446 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072794392 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098290278 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075143993 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081345985 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074782766 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085479958 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079411889 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080246396 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073101638 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.09988097 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073161076 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10113476 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074859919 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085514881 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087873935 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069116231 seconds)
  done (took 2.246906295 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067510074 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068612697 seconds)
  done (took 0.909095918 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068703704 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065309148 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083029197 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068377849 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080869495 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064475263 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080143272 seconds)
  done (took 1.284189198 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400467692 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109883326 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259163693 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072842587 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104962737 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26211517 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084452531 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072293835 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089261433 seconds)
  done (took 2.263696518 seconds)
done (took 10.982090179 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080816989 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087322926 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11093005 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417902785 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107144822 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06746796 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143700563 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.20519069 seconds)
done (took 1.991580531 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.12622661 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619135041 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401929186 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213084931 seconds)
  done (took 2.009661247 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.379577606 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092955618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075239767 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068783275 seconds)
  done (took 1.39637746 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068034618 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071203486 seconds)
  done (took 0.918453769 seconds)
done (took 5.227265104 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068197734 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.101855988 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067680608 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065850375 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084371046 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064963137 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065220266 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082629727 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067173756 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067261876 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082790069 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070722607 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083075339 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065501684 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065465472 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082729229 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068035278 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065363635 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081070229 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065331617 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067787126 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080827892 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065590106 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068481977 seconds)
  done (took 2.560098713 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086624661 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084369748 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07359098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088665762 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073095634 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08824429 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073543336 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068183839 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0884595 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070500975 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087282257 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072201755 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084964302 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072881253 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085441455 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07181232 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088325971 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070864717 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070184199 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087327651 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072641911 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083851646 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071627839 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088873999 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071152257 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08683814 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070006786 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084561602 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07300436 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087112049 seconds)
  done (took 3.158175887 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072461151 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065020557 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081814154 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072121197 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065255301 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082794578 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06477265 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081508571 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066339887 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065228756 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083295661 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065120135 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065471629 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082319247 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066141839 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083956361 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081940526 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065950663 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081886874 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066241108 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068718533 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08154275 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065766952 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08138614 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06557973 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065487078 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081339652 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066177755 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06639372 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081920765 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068134674 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068824277 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082098925 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072429195 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085151037 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065162504 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069165232 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080884157 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066227972 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065160946 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081441938 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064949121 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065377031 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088333148 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065421056 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083955801 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065781501 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066723551 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081778638 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068832732 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081484244 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065802992 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067413397 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082219812 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06950651 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065135783 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082492292 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065496958 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081848463 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06590463 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065251997 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080967862 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067920004 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066132247 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096270804 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071858562 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080926447 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067610889 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066291594 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084245253 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067784664 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078695668 seconds)
  done (took 6.04276362 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117915096 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092403129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083991669 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067183598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079884837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06654559 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069148993 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081278774 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067228591 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088095046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066368294 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066423589 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08365157 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078945801 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082402338 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067319187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087702654 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065438112 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065870338 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085224012 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066484538 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08625236 seconds)
  done (took 2.503670725 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186138016 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089538115 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110680053 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092404955 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085790862 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075679635 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086887601 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072514135 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072178783 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087400075 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070590189 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087863412 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069933101 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08618219 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070443228 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086521462 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072241814 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086192081 seconds)
  done (took 2.375846874 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080367467 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067860092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108118091 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067869281 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084666235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071163812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08954252 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076963211 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086769056 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068393191 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092976825 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071309393 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086870668 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069115556 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070859641 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084687302 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070843229 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084331417 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076830657 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089149572 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072796952 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092215742 seconds)
  done (took 2.55262367 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082984243 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069497689 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102689435 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087014396 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06488634 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067301881 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09075689 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06844855 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091349998 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070527842 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068194066 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082914437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073374343 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084427275 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072868353 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084595832 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070255011 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06814889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086466138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064562057 seconds)
  done (took 2.342027292 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089091917 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085463882 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069443757 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093511869 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070109313 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086199098 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077721895 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085670042 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069305686 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109694024 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069428543 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085095932 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077135566 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090690437 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069671278 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094181797 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076745245 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092720119 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069494152 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085354143 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109433829 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178009223 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093095952 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069338788 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084601858 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069855155 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06922787 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090031304 seconds)
  done (took 3.205329984 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068376406 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067994881 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081873263 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065086737 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065606509 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082149396 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065669437 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065762056 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084591457 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065296815 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067278404 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083683136 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067947856 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083611646 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068282225 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067909 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084174544 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065833615 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065610788 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082291977 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068098019 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067718182 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083924318 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065643423 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081314817 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068230132 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065982881 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082689365 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068844505 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065506795 seconds)
  done (took 2.961756791 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077560844 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0919919 seconds)
  done (took 0.96784057 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065778598 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082292263 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082528587 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071984209 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08893244 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069100561 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09260952 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072780887 seconds)
  done (took 1.421653913 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083088755 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078779288 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086514441 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078557755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095937059 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083972258 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154897683 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085883919 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074474305 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083331912 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081993166 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067295796 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091633145 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067805577 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090356219 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074464397 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065797361 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090084186 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071541772 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083695189 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069916241 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093154749 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070877639 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065186097 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085935933 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076684485 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095325275 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069492533 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088202082 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075679075 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089906914 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062964729 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068471919 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085646856 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066915275 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094625552 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083062537 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087431485 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076820735 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069221495 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094571009 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06348543 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08878213 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074281978 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095298289 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068990456 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085146923 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064051716 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06585806 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086848985 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064346286 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068156465 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079975615 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075451671 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087937091 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078598474 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086591798 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070179537 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070982902 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088871352 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075023444 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086550361 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070948897 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068485894 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094252405 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073206107 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093808397 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064108618 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062454678 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083715742 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077614858 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106735927 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074688401 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086058711 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069392413 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082531691 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071824294 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069300284 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090225397 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073982767 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085370786 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073742504 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092179155 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067980809 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070011696 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093043969 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067267267 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08678049 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065593889 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100439807 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067835245 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082994595 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065813223 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078260705 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088641276 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068380144 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082317901 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074912551 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062602875 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085792833 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069872385 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084586953 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07828887 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089609639 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073920646 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092893998 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076144291 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067925895 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087972982 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065246646 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086227 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067816647 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074741669 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079464675 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071306886 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085286291 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069416639 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093277846 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066605194 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068615159 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092137723 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073675472 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083695257 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066186681 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071086995 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08601971 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071982883 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092369425 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067495096 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064322261 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07988534 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071672629 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084639372 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071932827 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089436241 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070805821 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062900329 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083535133 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072559836 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093606943 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069209169 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085442408 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073821734 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069813323 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085134738 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073867219 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086897056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067797699 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073348715 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085246276 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06418618 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089060833 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071133829 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066719846 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088744645 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071825841 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087049163 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069369783 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083093312 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073760485 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068929615 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084077875 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068449289 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083551381 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078800384 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069690162 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080749518 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065808889 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09182228 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066368221 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067732598 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.0847677 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070044963 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085980825 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067096955 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067104 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08751779 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078586463 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089095045 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068930609 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090819719 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079548141 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085452584 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070764316 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068149311 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086557224 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069443893 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094012484 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074361618 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089503393 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070569051 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065916763 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091191204 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075467815 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084523713 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066749607 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067282187 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088861497 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073101003 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088673764 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069899283 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083350275 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069591186 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070994327 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088099252 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068197682 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083890242 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073417673 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084570995 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075096303 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068850258 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095203315 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070902149 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081199579 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071962587 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083166913 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07419566 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063893195 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08339389 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0674092 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086291135 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067874414 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07103273 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079867726 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075150485 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092493793 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068754581 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06735963 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085502292 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075092003 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086730971 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073017274 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071138881 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091644476 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07846052 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084307451 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071128195 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094560086 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068605307 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062801222 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090185735 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067390496 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084711675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067876639 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066505781 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088501616 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076162204 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092516497 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062919679 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087932604 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06709954 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067318175 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081090585 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073126531 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08742805 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069034216 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074056542 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086095297 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069006618 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088784649 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067801504 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085282806 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070207634 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070946785 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086695036 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071620155 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083900525 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072134452 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06736914 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08314578 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069895166 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084984789 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068752013 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072951562 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084519081 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068432971 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087310555 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069939794 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068469168 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08621368 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067711614 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088325889 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068912982 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06857601 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087871447 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064045698 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091929584 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068514053 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075557975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085564652 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065477465 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089843382 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070601308 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089394452 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069620202 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06961744 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086306192 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068286036 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087371404 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075466887 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066303466 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096089548 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075269362 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085914937 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071180437 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085712084 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070843658 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06712322 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086531838 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069291754 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085266076 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068716414 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072728307 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087772154 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068465357 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087131401 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069682227 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067973467 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086462978 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062918558 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084316932 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068314881 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068000909 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094576647 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069463319 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085026053 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067660821 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069383788 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084794102 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065913752 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092583026 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076813417 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085896629 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075278022 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084855596 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069790722 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077634324 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080735666 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066784159 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083172644 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06651789 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075095343 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086591731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077356168 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085638893 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06785716 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065511813 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086788381 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067758479 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080309622 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067301463 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071811657 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085062313 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067938142 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085915546 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071419113 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069258009 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09493363 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067702773 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086636264 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06907317 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064690253 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08488217 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068010864 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088072436 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070573034 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065542081 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083210693 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068372699 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085859876 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070163884 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067675896 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086991723 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07483708 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085775289 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07179696 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071296595 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083267085 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072011825 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085823559 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068592871 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066846746 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088780547 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071315657 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087232547 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076905282 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084700054 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069365554 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068719141 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084026378 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068785262 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085762996 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069296347 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067095152 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086655236 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076131662 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083701289 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071481127 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067827332 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085891004 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074380322 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086556026 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07111162 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092903515 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069241204 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069214448 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093610922 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071768214 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089027556 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069718576 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086758278 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074529154 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067046364 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091807466 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068135732 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086234789 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071163403 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065857755 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086165369 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068637247 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084380146 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074570468 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068488122 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085024433 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067347412 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083655485 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069527433 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070723453 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093133489 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070355067 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088364742 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064122309 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065269209 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087298072 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06639229 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08732294 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071453921 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073123567 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088677174 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068921357 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084852288 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076837307 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09138249 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071942564 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066307234 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089136201 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069681781 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088605891 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069745834 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067901072 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087210743 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072501829 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087157172 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067904834 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074754233 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089166096 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06917752 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087068759 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069328299 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06741145 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081751545 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068938238 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087904278 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073725935 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087881837 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069167398 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07877567 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083217242 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068588118 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089234223 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068447198 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072768985 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08231839 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070082744 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086876013 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070002723 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063258056 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085831381 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066928709 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088249239 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068065342 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06334581 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096945035 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077054652 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08840705 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068528761 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085519007 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064261072 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064100568 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084704064 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069754883 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087477164 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078389984 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066721509 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085035428 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064343575 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085639721 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071592693 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070745861 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083700027 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064500148 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083908163 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071264338 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073295298 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084985836 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068358728 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089078806 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071485628 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06606218 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089331734 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065804476 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089053668 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080986539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085930634 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06938189 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073957379 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093133426 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069294505 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081626991 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069933303 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088051206 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069233999 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069799035 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087622342 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083424273 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089227609 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068604596 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067184474 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089218609 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067550755 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093106624 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069732026 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086190916 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072952939 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069333336 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094722574 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07044375 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093462897 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071340026 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089051585 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067970251 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067688801 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084189362 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067892591 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087400122 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070016 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090324372 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076371059 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067009094 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0964658 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076485095 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088502179 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066468453 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084450049 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068323261 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064045923 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087338093 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067392726 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065909661 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084911825 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068631705 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086485348 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073426916 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068701938 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087509018 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06879294 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080280149 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071524096 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069960347 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086776611 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065924924 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086009705 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070018217 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071645709 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090134138 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066160836 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087739377 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070389245 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068505844 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081865914 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07508763 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085139095 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071404164 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067558328 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08624263 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069475471 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088736217 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073688975 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086774741 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07121739 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077073674 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088586093 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065982815 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083531402 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073781122 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066497156 seconds)
  done (took 46.977945294 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109722335 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083809392 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064036866 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081855487 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076863733 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083969696 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064284767 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065005353 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08295278 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067896477 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081510383 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065476905 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090285157 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087347839 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094446267 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067845937 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082087574 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065606687 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082069976 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065109934 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090473642 seconds)
  done (took 2.496071279 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077165197 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091121333 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075267139 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096060215 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070210941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091195554 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074522758 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091036253 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095617225 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07105016 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096135776 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073297399 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087871444 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069480511 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086890522 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073092977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095821516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069454616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091024265 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074652991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090631566 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075866233 seconds)
  done (took 2.657453234 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069502737 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068071005 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087093513 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064408936 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067020787 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081266285 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071796376 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083878714 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071820094 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074191802 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08459069 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067655331 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086849524 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064313542 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067814012 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084050641 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132467607 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072209328 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067305427 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087889654 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063541419 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087694734 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064053845 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063156399 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085290328 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072099695 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086425309 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066497858 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06751374 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085866722 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068647006 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083795376 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069079657 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067671597 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084622923 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066924913 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066970476 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086192404 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063768798 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083906909 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069202231 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064208672 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086396312 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069313995 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065326024 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083774848 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069094649 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085597737 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064105369 seconds)
  done (took 4.540027122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086352809 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131104726 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088783322 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090583266 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102567342 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093799559 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071499958 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112214494 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064903442 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085945196 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083751947 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104561447 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086882098 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072647583 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091837286 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068804931 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086639936 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067401779 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071375438 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086008727 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070784683 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092803996 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100095292 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082126109 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089602139 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067236893 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085363908 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07297611 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099731564 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07240583 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091426052 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073349098 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102461092 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068975792 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086424961 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070476285 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103067937 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067425688 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089707868 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065512395 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087664435 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07269367 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091873848 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083899327 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087574592 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073603072 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086444703 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064821959 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099469375 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070249968 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094294914 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100186102 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07245569 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085971263 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07278996 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.10144121 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067985656 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084797874 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071403404 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098026769 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066707259 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08964393 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082710262 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088505867 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074758157 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100659774 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073312909 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090242518 seconds)
  done (took 6.70448442 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077393563 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092957117 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083620099 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102098977 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093035529 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075657691 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09287836 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075707427 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092957716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080033491 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093609357 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113925149 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069883059 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095191951 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075153057 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094117188 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074778037 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0937406 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074733244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093771112 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092903452 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083314192 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093164683 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101126051 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105165048 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088872384 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074776167 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093298564 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08208438 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094004434 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103787113 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075082304 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09318152 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101009221 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087512541 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092901162 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067225602 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092684829 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074817574 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093255994 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07094118 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101356912 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073743453 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088469701 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074903961 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093369367 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100532809 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085746889 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095807126 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09743558 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075428546 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100546816 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074469632 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093485672 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101124222 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107677147 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101195831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100675434 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075138794 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101695807 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100261183 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.1075552 seconds)
  done (took 6.409129427 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089001368 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096116947 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097315977 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064398613 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065762351 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090521552 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066319501 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083625165 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07695103 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094741049 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079751344 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090650182 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07551856 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098440491 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089914601 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075459429 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090727172 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071749585 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094922316 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072509321 seconds)
  done (took 2.518570571 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078060533 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104193307 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069675283 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07311859 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091066963 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073644983 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090137852 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071274958 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087352172 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07188917 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096687282 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078827764 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087345059 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074861145 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097094303 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073703322 seconds)
  done (took 2.177728949 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080096442 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097234054 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082600143 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088014511 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066479144 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084452367 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068541235 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063881937 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083729002 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081752396 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087572985 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07134028 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087239411 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067174522 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064381813 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090855675 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064334696 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08489734 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068344425 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100828288 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079529864 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085513845 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069756214 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068977754 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087833663 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073148161 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087710709 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066454657 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085598424 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068932059 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086889287 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075629808 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083618893 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067134156 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066638274 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084331163 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068008149 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086957936 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071869437 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067442897 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085900491 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068245231 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086642592 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069104214 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082996166 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069831904 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064025556 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093166019 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066440764 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087142655 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06863605 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089362959 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06990391 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077895208 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091369271 seconds)
  done (took 5.147969038 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08317045 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071348216 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083701378 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066483016 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09022149 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071447403 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07095975 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089952957 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070170974 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085073224 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070725098 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08993842 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070907977 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071874591 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089075581 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072265775 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082579736 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070860889 seconds)
  done (took 2.263764026 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074760885 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068101928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094826081 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068383936 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087077458 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071020998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064354759 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086229358 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06697773 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086394036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068692213 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070502143 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08614216 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070788292 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08597918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069036583 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069956476 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085348396 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068184063 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08231165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071059568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066714741 seconds)
  done (took 2.527673905 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074650743 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094918778 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163253434 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107841317 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084208845 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101249904 seconds)
  done (took 1.492175137 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092628444 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100172251 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069353934 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107293135 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076759954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089232335 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070438853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088591809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07993709 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101792516 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07004744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097521729 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097287062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078731745 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095140576 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075702775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089409312 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069668972 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087877857 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105761774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070949195 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096679341 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07087921 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08841664 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070577104 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096933423 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077541298 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102017284 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088904383 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078853204 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094107814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070258005 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097080797 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102247793 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071626766 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096826296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070405223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106299576 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075807827 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096981286 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070398863 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0953564 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097834844 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075593014 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097436266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070166143 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094075984 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069235479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089878147 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112442618 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075978922 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097352168 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094128278 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07964944 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09704331 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114096157 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083543345 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097456803 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094481316 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08400612 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097152387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074772862 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09729954 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10232092 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075462408 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097545201 seconds)
  done (took 6.668047258 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087444049 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106792195 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070326211 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102844923 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09692764 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071069853 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088547021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070507994 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088171768 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070228607 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129488866 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07034441 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097886633 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09669347 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070245452 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088607501 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070215386 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096711857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069458111 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113822833 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088919336 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078081622 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097846581 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097021766 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083266235 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094798053 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070361614 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089121112 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069995335 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089321087 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074126054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090349583 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097123402 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070014644 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097363287 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071132282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089435094 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075891783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08895734 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076009229 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097614269 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106819997 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070828109 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0895131 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083736253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089551643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070181754 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089558403 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069958885 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089295903 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08238178 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103241543 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102346839 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097071198 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070356581 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089396455 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070275572 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089018946 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071120432 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095243472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077908128 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089137039 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113435313 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070497248 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089607575 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078530046 seconds)
  done (took 6.562458156 seconds)
done (took 130.01348008 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202326388 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186373463 seconds)
  done (took 1.255848327 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070043799 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096292 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099000949 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128860434 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087322795 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10162123 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119205417 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.0802691 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067551101 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087237666 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068130535 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087969702 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13312666 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068286368 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087125587 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070352257 seconds)
  done (took 2.32605602 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103305833 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196258313 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110305126 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066831789 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100385646 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078752206 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086109044 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077104988 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095373434 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067323364 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078149349 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096389149 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066457954 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096238301 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076047665 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098515134 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066058911 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098696977 seconds)
  done (took 2.536265745 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104876711 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141525244 seconds)
  done (took 1.12123958 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200789111 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123294894 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201953263 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.416899432 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206411743 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27699989 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173946734 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172703586 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158001591 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168938832 seconds)
  done (took 2.971557293 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100515249 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171189129 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311815974 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137728198 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086846924 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115933795 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139073889 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090172154 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102043325 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101328652 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082623939 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098341393 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099405138 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096206756 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075838027 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098444246 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121631867 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076324419 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077638488 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096719816 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118944733 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068594901 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075734998 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094992695 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078939529 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100129497 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067709011 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08727767 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07766668 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096037203 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080118079 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114745345 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097899973 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131196959 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083238803 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131543446 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098975351 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074639663 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096297711 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074146452 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098299353 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079022157 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104415956 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07739129 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08774902 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079371397 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086826649 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068935344 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100132224 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078761272 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100080556 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080303905 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130421144 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098352907 seconds)
  done (took 6.273489392 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.745656016 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111489281 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095394829 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.805156672 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090803494 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10772362 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.71070374 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117770221 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210043107 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760601182 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09048326 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100520043 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179007201 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235649241 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.882938524 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282130061 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.629446259 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105620336 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110050899 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.133039954 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139740306 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176170594 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150105944 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437373063 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076642111 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093083541 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138367564 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076820438 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159625424 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085373103 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094581433 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155084818 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225019967 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154704017 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097358077 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071536969 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093023516 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147810406 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239118042 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170723209 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158739282 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068429092 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091730781 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139801161 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131973875 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069466602 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139373586 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172295938 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.149528204 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074842093 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097199607 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142398891 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138330808 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142233058 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102530299 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.268266988 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282535962 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091347898 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099288098 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105518611 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236834063 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083482371 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197590899 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14175938 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16638356 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091847033 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.729848209 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145598655 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092346172 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075936343 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118803029 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095970657 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139513141 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144756641 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368479277 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142376899 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073888259 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091025161 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211612138 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104532464 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072187239 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141260128 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096574132 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101172316 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163942377 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143602578 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146189079 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.205946795 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141233196 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159447407 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075095594 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124375392 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09566537 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190755862 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170387278 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139720318 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207010396 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140294377 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.143118043 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146156883 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097950713 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150288199 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11847115 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082016821 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138148629 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189986958 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123570991 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082701834 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096113688 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139726039 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125663606 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085577646 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.161229036 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149569632 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457677965 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145931821 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089746783 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087813718 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138441383 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160579005 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077869092 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232799941 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102649138 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166883793 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120939839 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070081043 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119757004 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141613644 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07881902 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123060249 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.158520573 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078793231 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.209808969 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188368084 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078718538 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213507872 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161428212 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077405894 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148429684 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12042151 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145800971 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099243495 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139479337 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075767144 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76732553 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142475939 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121080214 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073108126 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175595432 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092100612 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083424221 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105451836 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068689785 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758910125 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085470118 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106813709 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103684489 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077104245 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121815981 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136902282 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094427447 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14022384 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179568289 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098308266 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119055106 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084088571 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139700904 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098337923 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104874511 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086006453 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105528588 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123108956 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075482988 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10455704 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147404612 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140733559 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.190907659 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540553449 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070404578 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105203471 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198301479 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072087193 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261480581 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136312803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194796528 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141448779 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081079708 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285728825 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143203267 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178915154 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106548714 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151755409 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069784692 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135403837 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141276406 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093437064 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075956095 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.14117431 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164799517 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142899679 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.938348804 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072844046 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203648824 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068361775 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170170193 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07800454 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097504333 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238153932 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092298642 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146991675 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142928564 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09384241 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084736102 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.693950013 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105529822 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138379127 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095899372 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171341597 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162502953 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135801958 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139320633 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07692754 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159697233 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.18554324 seconds)
  done (took 40.428366948 seconds)
done (took 57.788149486 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260047119 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179327091 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242065805 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145277051 seconds)
  done (took 1.799390154 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144967685 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104972948 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117837116 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086512606 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105188198 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087347564 seconds)
  done (took 1.546166951 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.406584524 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267342254 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231669298 seconds)
  done (took 1.805525199 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262541476 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214793621 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446998558 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297143556 seconds)
  done (took 2.248263866 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176810592 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114880722 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068616715 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107964248 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159197768 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252585208 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130294163 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187618187 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080861141 seconds)
  done (took 2.228031395 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198908042 seconds)
done (took 10.72881442 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.292032373 seconds)
    (2/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.213018133 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.125879288 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.276081705 seconds)
    (5/309) benchmarking ("sort", Float32, false)...
    done (took 0.12962454 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.150876476 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098916174 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.212187848 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.281607701 seconds)
    (10/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077578191 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 0.175898389 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095256152 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.139326776 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.24969823 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101613056 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079945982 seconds)
    (17/309) benchmarking ("sort", Float64, false)...
    done (took 0.148806818 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075922237 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.28433801 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099984319 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.154797135 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17200589 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107194058 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073825865 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102716013 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.170299681 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093196843 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.255115533 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.170976914 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.232730002 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148577777 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095888497 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09719831 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073088847 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168885873 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097826966 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.235594074 seconds)
    (38/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.236561946 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101220609 seconds)
    (40/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105542924 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.095765199 seconds)
    (42/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065130537 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.109899723 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075011982 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097881949 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.220109854 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093754308 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.262975515 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.223160825 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090876358 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11341561 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116966664 seconds)
    (53/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100836355 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096833244 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199581707 seconds)
    (56/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054199733 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118714275 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075503699 seconds)
    (59/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054435385 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.136566121 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122731457 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077370375 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.263960985 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081348586 seconds)
    (65/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105753194 seconds)
    (66/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.141648783 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091001288 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078439662 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095885089 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075886703 seconds)
    (71/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095655113 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074694446 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193111499 seconds)
    (74/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076618737 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.242146742 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11573104 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092702348 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112157352 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129905118 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107653338 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063161212 seconds)
    (82/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096740443 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.211568675 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169098998 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091198062 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078459206 seconds)
    (87/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075774978 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.078112354 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.259201458 seconds)
    (90/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111121397 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114809361 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067728042 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.06826805 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097654047 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.236293311 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167885179 seconds)
    (97/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077435446 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089558407 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067550812 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091931735 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.225137201 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.220186208 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089258485 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068674277 seconds)
    (105/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.10119547 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071668025 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.239575297 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080801831 seconds)
    (109/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100167606 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.217173067 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.254573462 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.243807067 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197200576 seconds)
    (114/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072446922 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074644577 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097365628 seconds)
    (117/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.114789342 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077260689 seconds)
    (119/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054222224 seconds)
    (120/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119270978 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.239233158 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167543863 seconds)
    (123/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116784819 seconds)
    (124/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.245280146 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075720788 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.096355416 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071267888 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.133884421 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.15879718 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077149508 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092175569 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121809633 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116236546 seconds)
    (134/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092487405 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122171535 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075210947 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072789049 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115588539 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052986297 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.137662918 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074305589 seconds)
    (142/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116608305 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113937978 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068490377 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075419669 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.241184455 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111923654 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054266855 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211210867 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08273087 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094686606 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069819031 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089997647 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076259573 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156872243 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068251561 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.139173282 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076572598 seconds)
    (159/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077272779 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090157011 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115474189 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053991253 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055528529 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089379412 seconds)
    (165/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108966062 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075663258 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096512474 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074638285 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089924587 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056084951 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125068922 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070067641 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115484306 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06870938 seconds)
    (175/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053848315 seconds)
    (176/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.252088686 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054404128 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0898851 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111901433 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077375404 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097432452 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093190806 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.317136474 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.08063638 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077131072 seconds)
    (186/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055053458 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.181119318 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074418603 seconds)
    (189/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055307582 seconds)
    (190/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.085286708 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092742728 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054147771 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104944498 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054221069 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120849438 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068819577 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066663887 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091935574 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.259485105 seconds)
    (200/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101306013 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054543441 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.240598951 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067764882 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.075910992 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054096637 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192367848 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076851485 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098408634 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14900592 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076019825 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068588612 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07906638 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121356143 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053859677 seconds)
    (215/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.121935391 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081139862 seconds)
    (217/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06341016 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089357503 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053588182 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083514054 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100056876 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054961452 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072041492 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126901602 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067155189 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088703816 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.1366339 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078123692 seconds)
    (229/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054090771 seconds)
    (230/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119733976 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098595243 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163452227 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074153327 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067097048 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095868951 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088125062 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170601354 seconds)
    (238/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053548179 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068141748 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095601354 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069566302 seconds)
    (242/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.075553867 seconds)
    (243/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053878167 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069676642 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069072473 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076519991 seconds)
    (247/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053932381 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053106927 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0892055 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087604319 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.075003043 seconds)
    (252/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05457543 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053945067 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066988681 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077575963 seconds)
    (256/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067717485 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055948372 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076839324 seconds)
    (259/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072657611 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095790682 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054105459 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075521829 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116231195 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067790529 seconds)
    (265/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068297587 seconds)
    (266/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076194244 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090551071 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074795293 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054657744 seconds)
    (270/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064867108 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114320537 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06748131 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054779973 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146427977 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07025433 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078264365 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053311006 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164614746 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076342888 seconds)
    (280/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06913466 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089161006 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067613107 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158925821 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066692509 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053941816 seconds)
    (286/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112376179 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053495865 seconds)
    (288/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089629518 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087214488 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196706384 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075929759 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093613384 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099020797 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092015495 seconds)
    (295/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064051125 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080093057 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097018572 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137023617 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097774466 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075581751 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053504785 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076543667 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053980304 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054002408 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095677173 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074772219 seconds)
    (307/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116910054 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.076061006 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067603967 seconds)
  done (took 35.186691968 seconds)
done (took 36.099449238 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082995882 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11530057 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077167348 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116909333 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083625988 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10232655 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074629442 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079901255 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104753003 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083495241 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103740995 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057079317 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098696503 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07691467 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098934365 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093237248 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102583402 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075280817 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075326965 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089103477 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075544032 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089547778 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069650852 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056693439 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101631226 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074533672 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073989169 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099164891 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067430095 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089085209 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071809448 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074199916 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090049952 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080904231 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096078106 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075788387 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07728217 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100622893 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069691642 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088565279 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075437261 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067563655 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096102735 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075145833 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073279603 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095616842 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07599113 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103984031 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093054054 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091946068 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075519034 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099996918 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078476971 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07442506 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094231449 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075522317 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094433533 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093414495 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098791925 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070623895 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07547059 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098821201 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073163384 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097225803 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076440321 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077494419 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100726948 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073572478 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098722811 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0736462 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067900642 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098003534 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071643139 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066881738 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.10044105 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079136307 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088938285 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073152784 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07444539 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096487679 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068161303 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069201381 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.092061743 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074599252 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0910866 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056889083 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072121632 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095842584 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067832925 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076833458 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096254582 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074088266 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069121622 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100991128 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067427342 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094706364 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067745264 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068106937 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091981745 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071530931 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066610031 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09222228 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077183469 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090920702 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074543393 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081978817 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090479764 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073592429 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088485004 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067461373 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083226133 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100517401 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068141839 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091348751 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067757442 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074853524 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089748477 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067850015 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067319014 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089938319 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073456134 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067836066 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092531358 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07552744 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103456577 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067685698 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070828059 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092138646 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067642208 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073794979 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090330993 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068480969 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069491932 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087930485 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069520264 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089759682 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075397326 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069875822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098241267 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070375622 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098213482 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073190978 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073909138 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095680248 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067787608 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060739839 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091815688 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069747789 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069820779 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089872074 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06960195 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067226668 seconds)
done (took 13.418395704 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067880085 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.171339452 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12742263 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097887689 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112129076 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067373145 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102524509 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10489369 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093307327 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129117256 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089293701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109395631 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116128551 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090312359 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067706959 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071918913 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092536093 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089989317 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126213679 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110345257 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118636818 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089767771 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122981822 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091617015 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11342961 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096143888 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091212733 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072159371 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093125256 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104456818 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110474313 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.0715093 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06836166 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124595039 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118702388 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087418636 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089950878 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087133746 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090282882 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068009008 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115458922 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101781201 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10705969 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.10567515 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075584366 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070557027 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092325027 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088066936 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115607972 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082483232 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112131016 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134729101 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071309111 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107425692 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066981042 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111642768 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107355857 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071010627 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068429162 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093774891 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068879708 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071187807 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112838573 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117329185 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071402438 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106859005 seconds)
  done (took 7.355508297 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086199941 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118391049 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085466732 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109101419 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068532837 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068529059 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091477729 seconds)
  done (took 1.600005766 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069756867 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090838796 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113869082 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090829147 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110956039 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088269572 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101188617 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068262231 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108791458 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070207613 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113221959 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106794902 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093167845 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076353568 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092396181 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091955965 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092712575 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091729981 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07191993 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11541453 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072172537 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.111946254 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071456958 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068913076 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106577962 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069089841 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139899307 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073488733 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09394719 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072624079 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067077058 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140949757 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105738873 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079507984 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068619367 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107036513 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084075449 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089883054 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085378247 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09733653 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084079999 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069973565 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093443783 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067549946 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073290817 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102779718 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070651806 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092263874 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072652783 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088575885 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093158538 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083487094 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091762802 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073487627 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069963354 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097484318 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079043775 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093288996 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089729748 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070591685 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108416792 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08465176 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10709394 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084857248 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094863021 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083480499 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105978714 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072676004 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070642195 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096063618 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085553479 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089784728 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071092182 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079762455 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094106425 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091959545 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114784776 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071317856 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10253359 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069681762 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070115751 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092927154 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092016401 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096224755 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070184218 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073416707 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096139473 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067105175 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067735991 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096382896 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067531625 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092792643 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07314948 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069956038 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094332215 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086104664 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092598909 seconds)
  done (took 9.475799339 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070338408 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069942971 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093812517 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069912518 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069848855 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093977002 seconds)
  done (took 1.450011911 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099913504 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094491504 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083469341 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097868906 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108415808 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107207002 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08483015 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107599528 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087280792 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105318572 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084416153 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108017787 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090050858 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098970427 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084390998 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0976733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08510764 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102030732 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081359268 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098562665 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090539848 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098440309 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075834534 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108002769 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073162445 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075396703 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10193715 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081903418 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104307332 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084822061 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098670926 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073535151 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096669284 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08439836 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107240585 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073949735 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098008232 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074213834 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102173689 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073298593 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107858717 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076828845 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.0801708 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097279663 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107105741 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074879097 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073820324 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101884142 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084506145 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097385035 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07391597 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097250383 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072602183 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097629629 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074021132 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107300339 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074532181 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107530235 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075782589 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074168426 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095810897 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07324999 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107127965 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072704985 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106631994 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073914888 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096629871 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075633484 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098494918 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074988391 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073845748 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095215801 seconds)
  done (took 7.468609293 seconds)
done (took 28.315971313 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.64892719 seconds)
  done (took 1.629979429 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.767139148 seconds)
  done (took 1.749900561 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.498019613 seconds)
  done (took 15.488832462 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.613816135 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.754113597 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.809744211 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159404992 seconds)
  done (took 3.32265757 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.880954656 seconds)
  done (took 1.885458901 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236164135 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225859169 seconds)
  done (took 1.451566291 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.731451284 seconds)
  done (took 1.728650775 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.305638646 seconds)
  done (took 2.296227526 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320480391 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183240069 seconds)
  done (took 1.501909796 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.526651403 seconds)
  done (took 1.525045282 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.566123587 seconds)
  done (took 7.569744874 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231615711 seconds)
  done (took 1.245200064 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268447081 seconds)
  done (took 1.270321201 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.150336027 seconds)
  done (took 4.150988089 seconds)
done (took 47.806817054 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079092914 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083622757 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106087928 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080322338 seconds)
  done (took 1.344086367 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07934025 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077042841 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102603198 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074697372 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102587855 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075380032 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100695376 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079488871 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074680485 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099083906 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075403233 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097538241 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077955035 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099882767 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072704029 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077954466 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101889618 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075118486 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101976995 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075931245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073123157 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099737456 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078373089 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097554266 seconds)
  done (took 3.078508269 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079513473 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07528268 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099415815 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074090052 seconds)
  done (took 1.332180932 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078979989 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116998777 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091784328 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079690437 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117423885 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111500153 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073427987 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072964359 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097430854 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079283106 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093010761 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099739552 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112092851 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078831442 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104226327 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068043367 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.0708627 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112266983 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079650585 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102960403 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072850362 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081411319 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093515327 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092358776 seconds)
  done (took 3.19204335 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078929785 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105439704 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104280341 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091097191 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117524992 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067605918 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10208204 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092810095 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150602725 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066987933 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096064357 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067630633 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097731703 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066543528 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079200526 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134073546 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113076196 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093956438 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09892753 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091304835 seconds)
  done (took 2.92821363 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075955126 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071523864 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090059596 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070667454 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078040132 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097935852 seconds)
  done (took 1.492283196 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069774898 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069267446 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09190349 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068211595 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073096473 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091919059 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068190607 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068828237 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092632896 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069152316 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068375027 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091380265 seconds)
  done (took 1.930864848 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.43305366 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07067087 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094556085 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068201837 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072730473 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091583938 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082485344 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069779496 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115978702 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068887657 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092244778 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070428617 seconds)
  done (took 2.342899892 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264125721 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079278849 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32408999 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16856312 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14173736 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155948912 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105696937 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140711202 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199283634 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139691075 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200733506 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223861435 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135119336 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168831802 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116524012 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133130309 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187497946 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222343097 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107278892 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224107879 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20749943 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157202977 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180892895 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129799214 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136667812 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15084605 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074060956 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106744863 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233023828 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161731466 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201623865 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139196093 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098373702 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231426293 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226723126 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195527402 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16331295 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086791397 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158880391 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165217534 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257170839 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115578586 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194474523 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134947861 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108178129 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1725036 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147157825 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147994555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136920445 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115909803 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174610472 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239809575 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166605421 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113880321 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137715149 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143118094 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144744198 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104092934 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267422364 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195939423 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16009945 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097777914 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099453329 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213060023 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161047394 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142575515 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153945268 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120988004 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16783325 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211960448 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147877731 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173857665 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182231576 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090727683 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149234968 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196250091 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157877072 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228322187 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156268626 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075481457 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153066125 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131690816 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108270576 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146410234 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102870317 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209080642 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127032046 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140850336 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140376524 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138392313 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114065597 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2206753 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203945393 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132342928 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068271225 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132183123 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150720779 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177353213 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115589038 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136525258 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14853368 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081153573 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192797696 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077788977 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154246896 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10542752 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153353566 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163992998 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077838911 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156746081 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129140498 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129945431 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164426707 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220693415 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09218675 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109634771 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227348269 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156569415 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132958819 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177065143 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216252191 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103684731 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131197514 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205402987 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243624946 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092330522 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225511512 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136191413 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086109513 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115375363 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155272561 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140936522 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151052027 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110679113 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155014483 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225119474 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077680128 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122919175 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168601368 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083961855 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108704576 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142011991 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12878848 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097501428 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128461421 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135111134 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170623894 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18052335 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111538168 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179008348 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102103722 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226695343 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116793832 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133094313 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106769613 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097698229 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165715927 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219303251 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082773821 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227776729 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156358133 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133201258 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148494069 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085226649 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196835162 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081424618 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073159238 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202534181 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139624326 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139210906 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185124313 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131810833 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156142609 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153005096 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164232887 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187389694 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162858777 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135316462 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090269504 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141203447 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154571629 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101603477 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122495046 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085248721 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132047093 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124741887 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086465057 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198680053 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157185938 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125379347 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115483989 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124301908 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20688801 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08024784 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160216483 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148141471 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122476352 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213075617 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188244607 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165275946 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127470685 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201886931 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073455338 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076179162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118176863 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156406878 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111497037 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086115212 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171249132 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18201109 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157836345 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166735451 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138672117 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150810833 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213470568 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074307737 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145395489 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180574937 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1532315 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15607592 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114657673 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101919756 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201364438 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110865045 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271835034 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14452909 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154664612 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182665722 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131764587 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107727329 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10846451 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19356679 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134244917 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182285327 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128324732 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11559766 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139108676 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083476844 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132447062 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155709265 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148135179 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190141976 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145431635 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163302785 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079515093 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150195319 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175790852 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151459477 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067443134 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149810501 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220318534 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123062976 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147566909 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186376482 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107089082 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.127552857 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23482243 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201714308 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086406886 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138301272 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150729233 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184132004 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149189161 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172203909 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139260174 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165843647 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138650262 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087871862 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115741792 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127040718 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136026648 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097760096 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139378749 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146171091 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121554766 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160995376 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140319787 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13980172 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14743988 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126140255 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093980006 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125999988 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235835428 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152535668 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234862485 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103408424 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205715115 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227258407 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077159914 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107456933 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083536788 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194114874 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087825753 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163451403 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124199227 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132399326 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157244308 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173939632 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125283802 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071404159 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13842643 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162967079 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139566472 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126663676 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134581606 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223198413 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106348134 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107928492 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154809997 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107293223 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130504185 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23413478 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063166744 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12503111 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103586709 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083455604 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158212715 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214857961 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109766224 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130842093 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147391106 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14897676 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158927917 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129760186 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127402434 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141533311 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181260306 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157534429 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118681286 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141953578 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159809389 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214816906 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134680343 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097998917 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231332509 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211527051 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196142927 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116561021 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143828884 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144435886 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138391735 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196129548 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086963658 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226131735 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085132092 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193424519 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133531814 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119928213 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159921526 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100095113 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117064653 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196564074 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173508032 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085214091 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106992905 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146480781 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152347207 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135822386 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07820124 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19564721 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07557456 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165516714 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227733701 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084081016 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13488938 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124643731 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109305138 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136782662 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107088634 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114668286 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123947187 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226797853 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118707393 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20975771 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171729176 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143301173 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194026625 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102555816 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66331556 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106581304 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187346151 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148736333 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261760347 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100824316 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150295327 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140941759 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152875754 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200513806 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133301772 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179282966 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187829167 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150831178 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082252951 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13191052 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140240869 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119330581 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135365319 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143100583 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145951887 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.102852632 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172712999 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157426853 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084649959 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124609609 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215880808 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147521041 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175458081 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170393701 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11349409 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148596834 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171097046 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108808887 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151929326 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215011317 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136284868 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101861187 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108904225 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133901083 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230803065 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076025169 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219937069 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153706006 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139532524 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143449344 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148383653 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162800827 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13667927 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154763438 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122864385 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140437957 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145213278 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112606383 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079833342 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133950221 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140502021 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127368651 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130451894 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122430927 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209070638 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074352573 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125353561 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130863039 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175082504 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237985525 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116585025 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087006589 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148730208 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142183423 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144034107 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154362057 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109486244 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084543498 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.11041177 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117050012 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134753061 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145131659 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131718349 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14053758 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225726644 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087062835 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255061276 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123292354 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108626096 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097286857 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081579647 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12429694 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125829093 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136348775 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100134467 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231862433 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124579406 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092373526 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121027405 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100967349 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08627997 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158950529 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13914353 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151233786 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126548843 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06453248 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13755096 seconds)
  done (took 71.779473209 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133017251 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104968428 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118744098 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173716112 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146315289 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237620953 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181371096 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223193829 seconds)
  done (took 2.419902188 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07131858 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117716163 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103807662 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116388123 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090556207 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069921912 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293030127 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.11089096 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067893911 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115376324 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119617192 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092829693 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.467923576 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066298948 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09492131 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085888182 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068946326 seconds)
  done (took 3.23958154 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425749049 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628253541 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450767752 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076268315 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.903260096 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107871163 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.391129036 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162490289 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091115859 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430059497 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.730566417 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149099264 seconds)
  done (took 17.642275844 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076620783 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070336977 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110487888 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084780754 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099480498 seconds)
  done (took 1.537842331 seconds)
done (took 115.256542649 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08121721 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.346797732 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054582559 seconds)
  done (took 1.530921874 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084763066 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08593788 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111796654 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084552312 seconds)
  done (took 1.471313225 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075946041 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077430677 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111843039 seconds)
  done (took 1.366571176 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278576596 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166360159 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090448439 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085008572 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079396955 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106066878 seconds)
  done (took 1.376536134 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074311016 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077084111 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101349629 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078147138 seconds)
  done (took 1.431622973 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077506782 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053630008 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056669088 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082650652 seconds)
  done (took 1.376838503 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090766421 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107358824 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082015397 seconds)
  done (took 1.383484577 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109700642 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114233252 seconds)
  done (took 1.331406204 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084203781 seconds)
  done (took 1.184732864 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093641509 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141795462 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156822975 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137719845 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165976508 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136977698 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087672605 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115814359 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105245876 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089371442 seconds)
  done (took 2.337680715 seconds)
done (took 16.499532125 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079653176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.394349614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362872344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118136979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669462703 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357733605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.011072494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119753624 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122088991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095799618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084514311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676304845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018619505 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351097316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006233783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32447851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676666216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06933412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094320845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069640265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973079734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094813641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069816265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069814317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675908444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392719758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095683313 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325417044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069221245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097461357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356515243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095752726 seconds)
  done (took 16.115909329 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071490188 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144724203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074906579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085173136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098173043 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07044296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100026698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070161133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154059649 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06854291 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112602991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06981705 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099405816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070324015 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088258752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095713527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070072547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06996714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09576677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070490632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114799848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069074929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069722383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095403778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069700691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107835836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070673768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069115772 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095556908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071480283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098560692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070809713 seconds)
  done (took 3.888288463 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117449311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153759578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075693254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130524333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114674895 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098107503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172342833 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094096054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156621403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069657335 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112993913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069431282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129473297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070560479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11595957 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070282157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071570195 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09572216 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069433501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097446884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088903359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095178776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070058945 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069584042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096044756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082735091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09573176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069980109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070332092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098207204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073024267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095841634 seconds)
  done (took 4.204767304 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074277613 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0768606 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110523076 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.0847751 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097822903 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07410367 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075219526 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097940943 seconds)
  done (took 1.799249049 seconds)
done (took 27.115792324 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079541813 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070937196 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101011274 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082958177 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100831215 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080543369 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0697241 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102430353 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078248448 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074940272 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103646932 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069471435 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099159057 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068988109 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076226366 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095986297 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080367299 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100224059 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080606485 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08071374 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098394832 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078883541 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102208675 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080606526 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10764143 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080948635 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084800066 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10240248 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071485888 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098353192 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078388424 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085725997 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097314637 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080492729 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096924398 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06996357 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069795106 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096139788 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081087726 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101968087 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073565514 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10225488 seconds)
  done (took 4.740111059 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089673374 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090768222 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113327975 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071954281 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099763183 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064404367 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.11892286 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072903505 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.094815007 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090546005 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05708479 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087824267 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072825873 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063895962 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.09596442 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059077228 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060714892 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084796006 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061921895 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061249248 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085905893 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056032261 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062168302 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065088655 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084000113 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064307439 seconds)
  done (took 3.146668339 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077212818 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086391215 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116244815 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130891998 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134333134 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080042263 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106488992 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090254855 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116691136 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068841218 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072555888 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125229042 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090301895 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102211698 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068625017 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115631081 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083946824 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071187254 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102288134 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092798817 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112647 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080138773 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122537857 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083719688 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069549338 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098734867 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073688413 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.10923954 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074369401 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078143346 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100071569 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072909353 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098438047 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080859418 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074088534 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09777078 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092216831 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106014412 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080848244 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070219742 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100209846 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070214065 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11679266 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11382721 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095673164 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077001313 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076148933 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105584661 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069161522 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114281393 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07880375 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068677986 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099391367 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068253921 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09534271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082182748 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071118094 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098265224 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077898065 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098783817 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082499357 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073351308 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111996055 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068540065 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103395324 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068770501 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069837414 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094620121 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093624913 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07048018 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138579205 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070270358 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09749707 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078211328 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103600101 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07507976 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069083472 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111287533 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078992995 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099708057 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078025652 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072172771 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099233709 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090815825 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098233713 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071598967 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07040447 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102286675 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071815873 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097283317 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082361999 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069298235 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099945362 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086801838 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095667381 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071184408 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075017181 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100857326 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069243614 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107933279 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074858161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070693107 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105307182 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069268583 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099126334 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079186912 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07389742 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094831726 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074548567 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101776387 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070732445 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070904055 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099295762 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071290801 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078746573 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102455192 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073422907 seconds)
  done (took 11.495018511 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192490119 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186255181 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072157392 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17970065 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077652618 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108316961 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179770124 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097063707 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097256304 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070026053 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070020332 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131334053 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125466403 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107333344 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107319379 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069230674 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115157202 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106058625 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183229947 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177469562 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11707884 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07749902 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071423183 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098753281 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072512739 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07832546 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114082137 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077739579 seconds)
  done (took 4.294401454 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083565436 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.13791696 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075671039 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093552081 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12076853 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069972564 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10297124 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071044188 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109281036 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081582509 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096868042 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075263219 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076563376 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105899835 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070381783 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106572051 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080286513 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07126656 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100020179 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075327401 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.108673533 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082269174 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100551167 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068767449 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076377425 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096501991 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066587634 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114686228 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069181557 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121022672 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067986488 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075385752 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.1153158 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070333438 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096213211 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072872614 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073347619 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100000682 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070741779 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068888416 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095235695 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059454837 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068996845 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108679644 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075756522 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087991812 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075674519 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101497869 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075030694 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067472879 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09923325 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071921339 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072620938 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110999693 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074220154 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102549932 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073948323 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06728756 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105360312 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073080883 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065932433 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095571133 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074856857 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.095848951 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078273648 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074059575 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096205877 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072726514 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074923206 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103575686 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07314178 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099317251 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067483071 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071802459 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101941098 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073799102 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07408098 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095438255 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068898637 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096816918 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058135561 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069427688 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055494759 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099418626 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068241031 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094967057 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072952326 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075007004 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110233027 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071181387 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102384331 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069849668 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068086254 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099346399 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06510394 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09940059 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087621202 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112024838 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069070811 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067993461 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113623484 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074328375 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095656993 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058198808 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076222711 seconds)
  done (took 10.01647325 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098311327 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094118663 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098450729 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085414231 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125265665 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094182349 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10401791 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075738892 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070964117 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11417156 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069085626 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104418065 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070248377 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079063021 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125582187 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077520656 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09823314 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078610101 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074605784 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137900033 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08538721 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111947216 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083995149 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097534729 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074326023 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081716363 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125236208 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082457592 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108171533 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087854755 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082781886 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124636297 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088550652 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101016317 seconds)
  done (took 4.356119146 seconds)
done (took 39.15696265 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.188599491 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.396655545 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184285502 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.056726587 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.210866663 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.195088954 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.198426392 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.182958094 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.350344814 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.184675222 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.447191932 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.811789573 seconds)
done (took 58.54247117 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.265067267 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.325650112 seconds)
    (2/2) benchmarking "String"...
    done (took 1.455298219 seconds)
  done (took 3.91159434 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.538157082 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.146652243 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.470267324 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.184562602 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.186505809 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.6343583 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.839612808 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.01597868 seconds)
  done (took 27.607018341 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.191730668 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.540236845 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.473345315 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.488527201 seconds)
  done (took 17.826227768 seconds)
done (took 59.279453731 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.217882826 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.258911671 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.224130034 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.188064281 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290826979 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.205589121 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.513611596 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.406875178 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.185867735 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.195977625 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.193120924 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.185864582 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.197493798 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.49991033 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.185010373 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.184509492 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.189402865 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.645494539 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.559562923 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.192309066 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.193837206 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.187951661 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.204148343 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.185420768 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.190929744 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.19088686 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.185141265 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.190644282 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.252628358 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.18319903 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.263099733 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.675692623 seconds)
  done (took 190.755435333 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.181171053 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.181722235 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.294575326 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.210622801 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.623923827 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.381621119 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.314752296 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.694812745 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.196265249 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.189485682 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.473565785 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.180858071 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.507080374 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.163467008 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.190621874 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.271677316 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.385292352 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.496647337 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.197346597 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.452189974 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.19397905 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.396434151 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.306708456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.410795472 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.215035359 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.294910992 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.208941356 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.215634596 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.375763718 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.331836502 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.224493926 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.222114571 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.71723852 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.038608597 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.180062738 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.199687838 seconds)
  done (took 149.246629162 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.445990536 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.179042015 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.179706433 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.180113223 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.206923069 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.179216449 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.67347682 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.673311185 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.679384518 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.308676572 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.239241422 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.378182003 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.181477175 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268970617 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.192079058 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.180326606 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.19496945 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.204740777 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179089252 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.179946009 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.67008028 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.192846112 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.231299845 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187579095 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.180315443 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207251169 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.572642552 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.180068915 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207311617 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.489271591 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.220882451 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180207756 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.434339514 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.06132402 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284316802 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182158358 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209671441 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.179720367 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.442231128 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.179850853 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.179921291 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.183005135 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.697124051 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.179480277 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.665186682 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181407271 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.023838292 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.180817286 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.179070222 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.510183203 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.181320682 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.518030115 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.178651973 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.178429175 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.18137933 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.17975383 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178951328 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.204267557 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.484018324 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.272329194 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.177885119 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.179903628 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.204985416 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.177442026 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.237808968 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179902906 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.677533861 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.235796263 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.284249713 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.648947723 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178714846 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265908939 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292183334 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.177895357 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.177509205 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.17767605 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.17752476 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.178455898 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.279797072 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.178642536 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.53367959 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.184550532 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.179519505 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235385697 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.267723295 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.178848533 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42218927 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.179813901 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.177862253 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.84780386 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.179766305 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266059475 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.178554372 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.178357656 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178366614 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.178382057 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.53774631 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.647968663 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.293449421 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.181252683 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.516966036 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.179848297 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.545911671 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.632221521 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.696809487 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.180886768 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280289895 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.182529093 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.17854169 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.17855687 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206709817 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.177408339 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.235991033 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.179183909 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.570256624 seconds)
  done (took 340.679743428 seconds)
done (took 683.259325834 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.839740629 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.823672135 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.92942898 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.82562972 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.805338955 seconds)
  done (took 10.347310483 seconds)
done (took 11.471434551 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.344185386 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.345635235 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.231807654 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.343984502 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.203408616 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.358402727 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.322038348 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.200349762 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.270579388 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.242829295 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.269036966 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221515211 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.201989308 seconds)
  done (took 17.684043061 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459853093 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.467714653 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.242557205 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.457470328 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218964243 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.470964761 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361463246 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.367531908 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.374391561 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.193744871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.192995516 seconds)
  done (took 15.933404105 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.473432598 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.455202494 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246539603 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.465590747 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220886101 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.473604698 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361077704 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.368478826 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.358480234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.194503563 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.192557241 seconds)
  done (took 15.93465608 seconds)
done (took 50.677640109 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.187926242 seconds)
  done (took 2.3124134 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.219114103 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.379530778 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.201693895 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.192139419 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.189470728 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.190670723 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.193412718 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.189685827 seconds)
  done (took 10.881780818 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.189259515 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.188880338 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.186130295 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.18556319 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.188540023 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.188488229 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.187742876 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.189037638 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.186203703 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.186820622 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.186571875 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.185635929 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.186100297 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.186236593 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.188571998 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.189057741 seconds)
  done (took 20.124882325 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.189051815 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.185491802 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.186264366 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.187471259 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.188547303 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.187269619 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.188176696 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.186992804 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.185882694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.186535928 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.188149053 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.18756274 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.187956594 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.188722062 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.186978189 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.188425588 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.187210621 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.186985047 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.192330396 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.187046813 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.187792766 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188537499 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.188145968 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.187235993 seconds)
  done (took 29.632511902 seconds)
done (took 64.076563684 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.961012759 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.609569786 seconds)
  done (took 8.697238353 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.189115394 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.189357544 seconds)
  done (took 3.506554633 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.189563659 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.188348286 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.190554035 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.189450178 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.189634868 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.189295032 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.188343917 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.189319946 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.188775561 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.189699618 seconds)
  done (took 13.019410758 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.189575143 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.189357587 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.186121697 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.188774643 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.189483762 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.18634367 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.188611769 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.189134804 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.190811088 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.186272027 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.189952544 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.186945724 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.190401219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.187218643 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.190290285 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.187574986 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.189873949 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.186389941 seconds)
  done (took 22.520901949 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.18970488 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.18927366 seconds)
  done (took 3.504420699 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.187419173 seconds)
    (2/7) benchmarking "second"...
    done (took 1.186800712 seconds)
    (3/7) benchmarking "month"...
    done (took 1.186975725 seconds)
    (4/7) benchmarking "year"...
    done (took 1.187533533 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.186557897 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.186519709 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.187151488 seconds)
  done (took 9.434901773 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.189269516 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.36310595 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.438823792 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.755673446 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.191274806 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.193768525 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.067423214 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.193529149 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.195587685 seconds)
  done (took 13.715426481 seconds)
done (took 75.525757379 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.131064467 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.181708361 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.931098969 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.19854644 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.196718795 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.524679444 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.198758365 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.297046912 seconds)
done (took 36.787478564 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.184230558 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.86446646 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.872049228 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.183448923 seconds)
  done (took 11.04731154 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.168009411 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.005351296 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.183994391 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.09443896 seconds)
  done (took 17.581003302 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.724008471 seconds)
    (2/2) benchmarking "read"...
    done (took 1.512968809 seconds)
  done (took 4.364551728 seconds)
done (took 40.305050116 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190914131 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.189678029 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.191707443 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.188732135 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.191107858 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.188899911 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.189274093 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.188147406 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.191413418 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.191594123 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.193170752 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.191430234 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192177261 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189540678 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188646292 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.19236999 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192140025 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.190013653 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190076767 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189945494 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191747147 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.189807463 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.188901315 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.192681283 seconds)
  done (took 29.702879705 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.192148103 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.190064616 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.193106887 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.192619441 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.188898864 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.192771883 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.192572764 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.190331395 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.193233805 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.191410523 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190957585 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.191200403 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.192833619 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.190060384 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193096316 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.190418647 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.193216503 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190068717 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19283443 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.190508599 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.192777638 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191447529 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.191157971 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.19371055 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.191370028 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190182064 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.193861838 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.19229665 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.193357197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.19218744 seconds)
  done (took 36.885070428 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.197701543 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.198672935 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.193629146 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.193736729 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.195370028 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.19358687 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.193708097 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.194059008 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.194295475 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.193990351 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.193178062 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.195395379 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.193911136 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.195720316 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.194481723 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.193916712 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.194170485 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.194086599 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.193799241 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.193671463 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.193792662 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.195175872 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.194560349 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.193735825 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.194278782 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.194271011 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.193894249 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.193401094 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.194003133 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.195946678 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.19429084 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.194530436 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.194566706 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.195558626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.194433992 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.195303055 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.198498367 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.200376212 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.196418789 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.194480644 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.194450738 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.19561427 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.195309096 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.195683853 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.194827608 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.195014006 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.195866026 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.195696908 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.19647598 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.195076318 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.196328168 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.195399398 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.196207661 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.195569705 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.196261956 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.196146478 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.196392663 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.195929418 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.195941836 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.195007558 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.196716773 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.196423224 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.196694255 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.196519413 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.19796162 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.197062033 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.196386036 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.196796848 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.196625678 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.19678358 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.196357271 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.198368581 seconds)
  done (took 87.20196171 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.195919799 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.195154862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.194105575 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.193986393 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194577819 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.197665777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.195612342 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196940679 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195294254 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.19686738 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19711449 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.195573005 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195067633 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.197106616 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197440114 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.194957098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.196877855 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.193782131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.196415334 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198531532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19830844 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.195731577 seconds)
  done (took 27.447196419 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197824646 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198186108 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.195692511 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.19808784 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.196068675 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.198396195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.19858817 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.198616423 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198483882 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196658195 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195484543 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198267808 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.195677112 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195896365 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195358053 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.195735194 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198442047 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.196158878 seconds)
  done (took 22.683556842 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.196229527 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.196729389 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.198876129 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196407224 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.195914574 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.198661365 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197772489 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.199912505 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.199382514 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.196664218 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.199222919 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199067614 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.198993129 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19685039 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198198179 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.197563619 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.199540588 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197250836 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199650962 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197873004 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.197669721 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20081725 seconds)
  done (took 27.496177768 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201915492 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200946347 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.19819033 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.199195691 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.197383403 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.201054145 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.200873929 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.197682451 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.201380319 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.201569776 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198749735 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.201073234 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.198467219 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199957925 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.198209382 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198403028 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.201363671 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.199609645 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200738929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.198282161 seconds)
  done (took 25.132466511 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.201584764 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200965246 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.20257895 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201747928 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201995967 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202256118 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201854443 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.201536463 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201432844 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.201831664 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.201602569 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.201319075 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202105603 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.201836988 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.201426123 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200956578 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202485941 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201579223 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202612403 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201577078 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.201587305 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.202473343 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202571484 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203275967 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203238552 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203068025 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202958588 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.203448878 seconds)
  done (took 34.797719207 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203310795 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20355636 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.199958119 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.201201823 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.201249027 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.200044938 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.201122769 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.200223285 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203330867 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200579857 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.203098389 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.203251747 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203737305 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.203390584 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.20350316 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.204188878 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2041049 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.2016751 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201256163 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20195589 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.203543742 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204240413 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.20344862 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.20114635 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200919809 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.203383143 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201015933 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.201628605 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203770405 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.201003225 seconds)
  done (took 37.20982216 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.2232235 seconds)
    (2/2) benchmarking "in"...
    done (took 1.222537031 seconds)
  done (took 3.58626724 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.202931727 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205224034 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.204303119 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.201768968 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.201938413 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.204190536 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204203273 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201872537 seconds)
  done (took 10.768452591 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.203004068 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.204622337 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.205770037 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.205388536 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.204068517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.203989232 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.213945298 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.21974893 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.205994251 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.205186906 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.209275246 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.210616047 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.209384222 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.205023624 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.204128763 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.207801405 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.205122432 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.204968555 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.205837388 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.20507731 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.205617131 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207291313 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.208265904 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.202692689 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.205854579 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.217927036 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.212669217 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.205452113 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.204587115 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.210919881 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.205464585 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.20360585 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.206050509 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.205877436 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.205634534 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.206536021 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.217310045 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220080736 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.214276786 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.206627555 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.207584748 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.203324643 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.208758288 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.20859207 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208099366 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.207495061 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.206904001 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.204229889 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.206005054 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.207660749 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.210539922 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.205925706 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.204639574 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213002861 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.208213966 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.216073817 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.220583509 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.208535501 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.213119523 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.218916519 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.220716256 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.212780945 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209921566 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.208415956 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215718666 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.227216247 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217050716 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.219439051 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.205790944 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.207691915 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.217869263 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222911048 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.216547533 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.208530029 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208525179 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.208343338 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.208926185 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209041315 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21755537 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.225732654 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.209012733 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208747359 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.216964485 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225841505 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.207967227 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.209049258 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.20936712 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.209028851 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.210206981 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220800604 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.223269106 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.209535788 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.208978485 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.208969813 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.21184619 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.210010879 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.208335914 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210167729 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.207024977 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.210722556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209818857 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212123971 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.216318393 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210372458 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209131121 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.219658529 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.210452234 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209104909 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.220829329 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.210809762 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210508087 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.210942908 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.21700778 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.208643122 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212346101 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.217674389 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.210563789 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.212879226 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.210633193 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.21111437 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.219679676 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.233856762 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.211700266 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.211693014 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.214932821 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.219614086 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211371263 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.215177443 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.211605416 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.208990475 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.208598435 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.214624511 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.212175072 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.212096966 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210566962 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213869457 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.209165854 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.21199036 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.211645447 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.213087527 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.213795622 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.212151346 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.214299937 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.216251573 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.212404293 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.216141625 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.221610024 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.212681195 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.21336915 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.213591256 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.210688741 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.213131182 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.214328329 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.211775082 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.21367484 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212524944 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.211246476 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.212788394 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.212535999 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.214162423 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.213039503 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.213122025 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214760436 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.213149061 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.219608162 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.212227655 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.211049633 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.214700332 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.214756119 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.213312411 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.213282784 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.212667255 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.21574406 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.22038892 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.21383273 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.213984406 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.218982117 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.214190717 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.213482777 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213575816 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.216363052 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.220475851 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.213992533 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.222598843 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.214194044 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2135093 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.214516795 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.214988848 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.213313442 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21472503 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.216487972 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.219854485 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228521296 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.223177229 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.215476586 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.217913142 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.215568807 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.217908729 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.220808394 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.214997431 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.215517647 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215133675 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213382794 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215116992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.218269974 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.21658434 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.214520675 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.215784718 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.216310679 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.214172324 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21555881 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.216604885 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.217386001 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.212939672 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.217443357 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214580625 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.215367885 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.213215461 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.214283095 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.21508722 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.216346674 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.215310169 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.227313898 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.214145384 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217534211 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21757975 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.216953398 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.21451863 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.217059972 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.219366581 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.217161643 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226160151 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.231631668 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.216553346 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225414025 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.230930944 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.216454237 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.220114706 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.218400002 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.215315389 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.219431913 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.22371929 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.217430324 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.217690256 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.217735159 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217000169 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217757047 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.226597344 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.216296995 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.216813094 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.219063333 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.221256104 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.216120087 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.220466709 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.219483668 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.218387602 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221031893 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218209312 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.217795852 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219808258 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.217644792 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.217516527 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.218893674 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.219929415 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.223745166 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.225093265 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.218581182 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.222020081 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.21877633 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.222312345 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.219740136 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.218683353 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.217501623 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232062697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.225369449 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227991873 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.22465919 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.219107727 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226199611 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.22002476 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.22208363 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217951087 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220069089 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.218781808 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.219038154 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.21681909 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.220601842 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.220874846 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.220645558 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.220797585 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.222646512 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.220182861 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.218862801 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.21940897 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.220193282 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.219629868 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.220130589 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.220924532 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.223821747 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222567846 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.219695616 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.219541975 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228561954 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235434585 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.221741437 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.219584202 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.220199611 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.220780897 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.22147146 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.220554526 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.22211164 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.226245465 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.222668783 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.228857221 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.22136127 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230756958 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.220811358 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.222832625 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.227055236 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.218732374 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.21940828 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.221454573 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.220838459 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231055544 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.236129961 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.221203767 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.224135687 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220925459 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.222723765 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.222060658 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.221143283 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222375216 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.222122455 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232804647 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.236688918 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.224730857 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.225189947 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.220845675 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.22269917 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.223367944 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.220887662 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229152614 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.222320426 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.223837353 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.222606436 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.222713558 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.223120865 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.223393223 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.223434261 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.220457862 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.223354386 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231215321 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.238376285 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.225800519 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.223012881 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.234815126 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223856994 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232371472 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.238921472 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.223290502 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.222191858 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.225364386 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.227418175 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.222871648 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.223912278 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.222251482 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.223889009 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.227122946 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.224170004 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.22656906 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.224294375 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.224431887 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.223465919 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232126776 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243433475 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.224713163 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227578049 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.222932473 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.225178005 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.227000375 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.224552049 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.222911655 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.225273287 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232493402 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230680328 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.225337065 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.224192596 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22456156 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224948008 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.225749728 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.225157474 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.224822449 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.225772872 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.227814807 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.224546967 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231871307 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.225218522 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.226432931 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228028738 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.226026089 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.236631964 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.225522145 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.227174782 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.22565262 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.22662156 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.225268306 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.2267091 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.226030787 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.227175013 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226909497 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.226772693 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231125337 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.230943892 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2302389 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.226135952 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.22570972 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.227496229 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.227779222 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225801013 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.226403921 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226427379 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.227849517 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.226600918 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.229279741 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.225011142 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.226691867 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.228241432 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22755013 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228754077 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.232016464 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227212508 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.224903584 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.226995911 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226931499 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.226227953 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.22773426 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.239113378 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229990667 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.235487543 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.232821966 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.230406054 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.227663568 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23004488 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.234171133 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.226104184 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.22842787 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.227387389 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.229895511 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.226787903 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.230329345 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228373498 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.237179286 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.228075125 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.227901805 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239440546 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.24434765 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228064029 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.229085106 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.230757183 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.229485318 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.225790559 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.228768436 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.227677736 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238422771 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.245533639 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228402426 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.231619529 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.226396396 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.229195594 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231989587 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228717808 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.229843413 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.226900925 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.229268798 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229031891 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228937763 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.227378831 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.230100278 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.228960754 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.23186812 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.234346419 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.226320338 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232223501 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.230072368 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.230202058 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230149692 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230200266 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.227737551 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.22798766 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.231072337 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230680905 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.230435969 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.233397772 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.229059918 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.230937736 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.230778356 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230298074 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231678856 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.237863685 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.236555581 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.228803464 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.229649324 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.23217451 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.235364995 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230555125 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.231391683 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231206214 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.234090407 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.232119392 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23055663 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.231825559 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.233069978 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250901553 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.246381895 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230663629 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.232561685 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236808848 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.231881288 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.229872224 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.232483267 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.234273707 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.233081157 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.23742138 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.232063119 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240206205 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245774504 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.23303782 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.235115539 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.234910664 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.239034469 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.236371863 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231083645 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.231944573 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.236169935 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.247892583 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232702148 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241587915 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260412249 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.247279258 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.2326752 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.232459261 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230444671 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.232576952 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.234826595 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.232412775 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.232630515 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232699699 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.232755707 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.233320088 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238507168 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.234219043 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.233327507 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.234339805 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.232770639 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.235592694 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.230540683 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.23350897 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.234040764 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.233113153 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.233405205 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.233639417 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.233030099 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246977326 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.2432238 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.234145952 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.23388509 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.231865825 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.23923371 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.236089997 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241873691 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.240035107 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.2341074 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.233817424 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.236783035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233198464 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.232196859 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.23425273 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.233559728 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233440139 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.23201893 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.248221513 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242245782 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.240911603 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.236599953 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235270611 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.235028054 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236773994 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234703465 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235636802 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.237032085 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.235235708 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23841585 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.2346213 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.236127575 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.237614867 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.241503491 seconds)
  done (took 729.685184152 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.233337022 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232440799 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.233238316 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234231079 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233544214 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233295005 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233348601 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233671282 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.231707897 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231697899 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.232233634 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231564813 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231605444 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232593644 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23280984 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235347474 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224384902 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224203659 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224371978 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224732245 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224782372 seconds)
  done (took 27.020705391 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.226869101 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.224848288 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222086035 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222960606 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21998957 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22221123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219810543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222602982 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.222851338 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220509852 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.223290988 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223590198 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.220530233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.220667778 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220612712 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223297811 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224001228 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220981091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.223426737 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.220392885 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22306145 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22100849 seconds)
  done (took 28.053232906 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.222915702 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.223515968 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.222330489 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.220802493 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.224063441 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.221235278 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.224049012 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.224183086 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.223932484 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.225172219 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.222833334 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.223814411 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.229701011 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.227842311 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.228426625 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.224450727 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.368317624 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.224341213 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.224112654 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.224176199 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.222758656 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.232320587 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.222616488 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.222096827 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.223900452 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.223606701 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.225394193 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.225437292 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.224048877 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.225118295 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.228194363 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.225427886 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.224175397 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.227129444 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.225591945 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.224785002 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.223635479 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.217869049 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.215409367 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.217471117 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.226396653 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.23481723 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.218160674 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.226565712 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.217385352 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.213982361 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.217100623 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.21917694 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.211802926 seconds)
  done (took 61.253838231 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.212610796 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.214320299 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.212048348 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.210660828 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.211776006 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.210856065 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.211389997 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.211319814 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.208896201 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.208748993 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.211782618 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.207086831 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.206010188 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.209601095 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.209456974 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.206517906 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207840704 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.206566393 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.206846956 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.206863274 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.205280698 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.20788522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.20781001 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.20585632 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.208287887 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.205086476 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.205714247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.208569551 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.204974849 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.204952804 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.208141075 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.20713236 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.208882488 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.206079706 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.204955019 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.208083822 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.20928704 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.205862311 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.207025181 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.204651097 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.207260512 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.2080281 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.208052327 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.208056642 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.206256636 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.206165505 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.205732642 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.205701921 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.206562843 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.208230031 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.20896325 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.206888544 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.208498972 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.20466489 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.206986061 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.207983231 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.203100846 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.205208562 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.207194538 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.204680119 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.204851085 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.204360883 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.201688378 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.204482168 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.204248186 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.203416221 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.201108278 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.205458309 seconds)
  done (took 83.242888854 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204517238 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.203115517 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203460024 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202979442 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203079247 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.203385445 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.203788732 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.203370533 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.203750945 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.200930007 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20163075 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.20112323 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.201297134 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.201395142 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.202111311 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.201568688 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.201413103 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202222376 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.201783662 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201891131 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.202132503 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20230937 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202227213 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.202227076 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.203222906 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.201223045 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.201372519 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.200166129 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200851118 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.201049201 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.201537734 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.201124737 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.201187814 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.201056046 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.198672727 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.199000972 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.198463457 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198609409 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.198479175 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.199445417 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.198843144 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19899892 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196091925 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.196387415 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196298014 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.195608203 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.196633034 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.196839094 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.195562737 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197526125 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.195141093 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.193985089 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194702821 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.194166174 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.195303372 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.193891557 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195079461 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.195285462 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195568834 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.194556779 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.193862333 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.193923634 seconds)
  done (took 75.512315513 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193794748 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.194471917 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.191929536 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.192142762 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.194167684 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.19242451 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.195194591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.195008363 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.194636946 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.193484927 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194441311 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.191831975 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192060008 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195021969 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.19222362 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192834305 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.192809755 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.192528372 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194959246 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.192230634 seconds)
  done (took 25.001123899 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.191697225 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.195003573 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.192379356 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.192451322 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.195077097 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.19314728 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.195155501 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195070501 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191576513 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195040123 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.195638879 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.195167508 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193085932 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.193040297 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.194981057 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.19244481 seconds)
  done (took 20.234260758 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.192959086 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.195207664 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.195924058 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.195888593 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.192684539 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.192694475 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.195760492 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.192925464 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.192810757 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.196670692 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.195035598 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.195785272 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.195849574 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.196090161 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.193780626 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.196608219 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.19328098 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.193902602 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.195833653 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.196875683 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.194393168 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.193712154 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.196156138 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.196714755 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.194372374 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.194502686 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.193956087 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.19375296 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.194708005 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.197543569 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.193193312 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.194470739 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.19431257 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.193970461 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.196988578 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.19448993 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.196562534 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.196478541 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.19732388 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.197388942 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.197555319 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.195543528 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.197596854 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.198025852 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.194110556 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.197894932 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.19566644 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.195438965 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.195270667 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.195582894 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.19777424 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.198822591 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.197298962 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.198213261 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.197263128 seconds)
  done (took 66.888673018 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196605408 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.198177172 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.195208247 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.196839335 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.198085248 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.195506128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.198527789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.195944843 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195074352 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.198956689 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.197761239 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.199490771 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196559077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.198837148 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197186827 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198367904 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.196198204 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.19608592 seconds)
  done (took 22.68560231 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.196832845 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.197365215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.199431379 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.196197578 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.196521647 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199810464 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196884354 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.199882081 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19957613 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.196921831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196438379 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.199760253 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199536716 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.199317789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.197889718 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196385032 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.201045189 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199500576 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.197831096 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197690555 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200042933 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199502068 seconds)
  done (took 27.50143175 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.198380241 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.199069607 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.216226083 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.239670886 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.226680264 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.198696713 seconds)
  done (took 8.415964335 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197848779 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200079733 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.197967934 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201737431 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200437154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197675379 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19756039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197508774 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200308571 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198699968 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198772083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201336926 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199964514 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198237599 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201159082 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200863456 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199000348 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198701488 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199877273 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201938946 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199098644 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202416836 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198968993 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198951201 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198677898 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199380716 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201322858 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2004008 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199485737 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201499946 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202016632 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200201339 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201587067 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200606753 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202872022 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202968854 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200571864 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2030998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203029197 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201056821 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.202542092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203424849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202463626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200578057 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202773311 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200707186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200682299 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201247685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199662877 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203895408 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202688221 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200648484 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203075703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203423623 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203221091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204245026 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201433953 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200824293 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203312582 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201816513 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200944817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203620711 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201499949 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202035382 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203105635 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200874422 seconds)
  done (took 80.40294207 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200876062 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201468052 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201220788 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202906399 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201817897 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202406388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20188717 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201725486 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201768933 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201030602 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20511673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201475861 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201835973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201618309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201760239 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201845882 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202293847 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202379188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202889064 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205442884 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20271805 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202163882 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202559477 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202537553 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202778357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205092616 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202458542 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202931823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202378249 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202115285 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202545655 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202716399 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203347961 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.202953188 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203449791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202529655 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203471921 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203076497 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203984188 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205578305 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203649972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206201945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20308381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203782196 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20448585 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203713662 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203094143 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204221909 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2041764 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203878366 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204835238 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203857574 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204576455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204132454 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203646931 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203958669 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203544483 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204826227 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204595057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207050339 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204295489 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204136074 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20690265 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204595328 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203831564 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204972766 seconds)
  done (took 80.562466336 seconds)
done (took 1680.500539356 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.23774307 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.218643894 seconds)
  done (took 13.600100962 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.368136622 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.318652003 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.205581493 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.211593505 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.20502386 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.199660837 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.219859234 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.205296482 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.205168881 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.206018004 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.205508776 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.39233485 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.259587557 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.206627817 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.20548785 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.299002421 seconds)
  done (took 41.060284776 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.228268015 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.217509457 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.313331908 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.231834129 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.23727804 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.378156097 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.264251431 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.218918561 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.362562322 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.252519289 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.556314013 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.237297234 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.217472708 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.170869512 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.232294871 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.379119326 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.426469042 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.562863984 seconds)
  done (took 27.632966919 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.597222182 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.229365705 seconds)
  done (took 8.977454247 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.241479527 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.231501324 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.239078005 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.240691679 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.245034469 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.287736798 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.266529274 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.23404965 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.227194925 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.247627571 seconds)
  done (took 63.614808866 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.232257652 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.217228951 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.218163899 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.21529519 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.207809937 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.209077434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.213319304 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.209411575 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.284646579 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.318857181 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.221259768 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.21606306 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.209518556 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.210638413 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.207405285 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.243016175 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.330225683 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.202589849 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.202903256 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.211316778 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.204502765 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.324986408 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.240333197 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.204481582 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.310545957 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.281400284 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.206423961 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.209582594 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.320241946 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.199502526 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.201281689 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.201914513 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.203850177 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.744917905 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.669466655 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.206759151 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.235590674 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.20986402 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.199922902 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.375641587 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.203328103 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.208811873 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.194057716 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.651326102 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.352093973 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.299591599 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.303303 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.202083312 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.20369975 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.260871295 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.20397828 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.204798322 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.227910248 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.913032273 seconds)
  done (took 102.91534649 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.234318716 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.6811225 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.363025588 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.215357393 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.949083159 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.831682769 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.198658963 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.440128015 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.200687558 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.198370085 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.522431359 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.653721045 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.205508739 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.206995906 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.221756568 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.204703453 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.19606521 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.915583879 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.199890669 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.201461707 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.593179307 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.210882608 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.197365848 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.24524319 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.234228923 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.620768885 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.46252686 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.601531182 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.200801341 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.196125225 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.61747857 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.206607991 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.195947508 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.196806604 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.450161646 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.508640622 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.490344633 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.19773765 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.218520265 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.200521587 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.228637137 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.617446593 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.504691933 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.198203954 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.198223432 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.619986846 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.197814738 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.198040898 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.204450956 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.394213551 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.186689562 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.19931187 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.47607354 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.19781307 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.528544056 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.24073106 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.26604036 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.646120983 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.198715904 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.243651488 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.209750818 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.197591643 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.206947393 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.202790231 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.201609932 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.504559286 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.611523669 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.198637591 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.504718049 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.612652664 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.198439752 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.677676437 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.046644995 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.201509433 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.250865101 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.198506606 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.725927726 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.646358712 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.239475734 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.198873066 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.490666333 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.201536791 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.498900281 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.211127195 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.199997859 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60508155 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.21966594 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.222078914 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.199564914 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.224613665 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.823463951 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.204506065 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.44659781 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.215392191 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.199455187 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.200799781 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.231543286 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.200773164 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.21455677 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.199497251 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.677766025 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.208797526 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.480330981 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.218091952 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200729527 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.200840821 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.200952539 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.202044569 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.412192463 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.604278254 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.204963587 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.202797026 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.200795599 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.209572311 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.488718393 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.204583095 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.466405849 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.202477555 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.20059447 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.201708422 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.860786019 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.214471517 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201819805 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.21781607 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.040733099 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.409166541 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.217112596 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.216374777 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.20235478 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.21435449 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.394180593 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.204435791 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.230964755 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.202926671 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861038201 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.231559255 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.228252231 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.852633743 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.211960231 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.999079931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.219766189 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201843421 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.494149571 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.457516814 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.496182801 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.20662511 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.202871045 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.835413377 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.238665887 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.334665478 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.219612302 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.207541188 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.399601641 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.377464178 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.202926015 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.790166597 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.202923213 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.409579528 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.204434729 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.508729043 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.648360625 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.203267751 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.210238905 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862269863 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863745121 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.823790358 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.207319843 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.515762698 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.191868091 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.648461018 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.203602593 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.202996207 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.628420036 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.208130558 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.207234941 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.203653599 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.205503767 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.274784267 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.376081183 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.86077815 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.211092915 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.622257227 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.218265503 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.204074731 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.213435149 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.207034413 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.559352945 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.27126984 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.209237555 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.216736583 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.205506161 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.206520195 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.635356051 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.069094988 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.207904334 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.357506118 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.78960652 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.204363341 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.206219438 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.813014223 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.514021671 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.672801414 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.228936025 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.473318272 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.213805423 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.243749798 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.891058339 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.220649734 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.635252392 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206096778 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.208880274 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.751444212 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.206391471 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.272952124 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.206697323 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.206135922 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.689331552 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.206460587 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.206408235 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.405599748 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.205001993 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448529084 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.208518891 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.207842078 seconds)
  done (took 1078.53962132 seconds)
done (took 1337.484903906 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.205769913 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.208834083 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.194540054 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.209805831 seconds)
  done (took 25.969290945 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.216470134 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.212856538 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.214139147 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.213548511 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.216348393 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.213807286 seconds)
  done (took 8.437309618 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.233462317 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.209792962 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.209655352 seconds)
  done (took 18.804459741 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.404925258 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.347970103 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.538168984 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.120067241 seconds)
  done (took 9.563174543 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.214675671 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.2156398 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.215325401 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.217897195 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.218432354 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.219343672 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.217091519 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.216598562 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.219161269 seconds)
  done (took 12.10559959 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.699645458 seconds)
done (took 80.730380938 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.195364801 seconds)
    (2/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.532419206 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.209040018 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.798177508 seconds)
    (5/309) benchmarking ("sort", Float32, false)...
    done (took 5.162732518 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.02796847 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.249053414 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.336402444 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.599000984 seconds)
    (10/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.333459134 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 4.249768477 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.443527494 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.028155726 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.495060609 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.251220335 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.262866375 seconds)
    (17/309) benchmarking ("sort", Float64, false)...
    done (took 5.424661537 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.236581933 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.196189225 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.33029217 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.197005335 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.855018027 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.445498689 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.274479978 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.295896026 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.754823784 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.636595054 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.973017816 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.706367587 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.739462073 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.285434371 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.544532292 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.353478051 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.401921016 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.330467567 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.211657111 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.712845092 seconds)
    (38/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.209567697 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.216169623 seconds)
    (40/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.54531193 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.637449929 seconds)
    (42/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.523753777 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.389394728 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.419697734 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.255875624 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.210569285 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.27555071 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.214072341 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.200050786 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.811143877 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.261425321 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.924854506 seconds)
    (53/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.95921023 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.32153933 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.211542543 seconds)
    (56/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.772550364 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.036663966 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.491744252 seconds)
    (59/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.496263892 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.285502455 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.901449135 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.227058914 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.448033649 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.347736465 seconds)
    (65/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.366051546 seconds)
    (66/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.361050797 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.269296363 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.296916007 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.865579394 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.212306039 seconds)
    (71/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.32974395 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.238722253 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.212524624 seconds)
    (74/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.239497253 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.718989697 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.23134919 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.446812563 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.325154559 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.331427509 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.450539509 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.536249253 seconds)
    (82/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.347351397 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.782120726 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.269559856 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.225054487 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.290465393 seconds)
    (87/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.239868133 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.390875955 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.432819166 seconds)
    (90/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.495838582 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.594669977 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.988919546 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.349296465 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.241470988 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.97908896 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.237217585 seconds)
    (97/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.322279915 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.958447799 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.297331674 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.285489622 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.513551025 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.90629915 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.301061375 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.218253765 seconds)
    (105/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.22860596 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.199243325 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.367115499 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.211323855 seconds)
    (109/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.24217186 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.561023315 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.798699788 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.713299596 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.228749903 seconds)
    (114/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.279662108 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.89856171 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.429784321 seconds)
    (117/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.202351048 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.272773753 seconds)
    (119/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.409791319 seconds)
    (120/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.34654646 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.371763174 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.216599496 seconds)
    (123/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.202253315 seconds)
    (124/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.243276517 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.263979189 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.742736103 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.407113812 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.936599223 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.719016393 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.239253239 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.175541841 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.259259696 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.477744602 seconds)
    (134/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.245303977 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.266297869 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.243815427 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.891404869 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.481349204 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.372166638 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.269512897 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.508284958 seconds)
    (142/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.316097706 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.332482765 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.008975313 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.323800544 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.481720749 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.924454851 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.441744088 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 6.220634137 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.723863087 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.325538268 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.220473287 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.90338374 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.2459951 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.325011136 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.611851703 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.217638263 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.244660358 seconds)
    (159/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.711029705 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.542425625 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.353983102 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.921871813 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.205409956 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.810148658 seconds)
    (165/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.564603666 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.243906767 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.234030105 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.325779399 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.224024958 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.778159818 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.234011668 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.332797436 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.222978113 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.607368711 seconds)
    (175/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.207435577 seconds)
    (176/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.42878911 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.716147092 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.493047392 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.408030225 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.618602921 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.260286402 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.335346812 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.220931581 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.264392334 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.209007953 seconds)
    (186/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.793965319 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.658989528 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.896866314 seconds)
    (189/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.654258246 seconds)
    (190/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.548762766 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.451688096 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.37357226 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.900600195 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.432624142 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.768528368 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.909231456 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.279609705 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.303968216 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.613945303 seconds)
    (200/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.575955917 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.510637116 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.734451145 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.747846728 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.98540853 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.218391688 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.223846345 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.748821468 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.439202276 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.221832114 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.434546755 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.240831063 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.232964358 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.269728747 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.618684235 seconds)
    (215/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.767457127 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.329437681 seconds)
    (217/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.355080267 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.073976564 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.497398617 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.37137095 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.016186641 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.764144368 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.246860534 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.294895113 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.261915839 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.449370069 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.235171254 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.235555851 seconds)
    (229/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.651872111 seconds)
    (230/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.239588225 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.250166434 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.221857782 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.362233726 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.561778162 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.260733789 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.546053517 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.238803451 seconds)
    (238/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.420392931 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.236597385 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.25693143 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.224035778 seconds)
    (242/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.564153104 seconds)
    (243/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.324981685 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.274071756 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.306117733 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.050893488 seconds)
    (247/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.927482984 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.362699061 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.224917146 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.484539424 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.352900713 seconds)
    (252/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.428510183 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.59624845 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.417941883 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.231570162 seconds)
    (256/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.224024241 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.215578117 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.212525316 seconds)
    (259/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.311179901 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.249804248 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.683796218 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.610770906 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.049290484 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.699455578 seconds)
    (265/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.311024043 seconds)
    (266/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.196378034 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.239444824 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.014122819 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.220535627 seconds)
    (270/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.216953634 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.266316134 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.081584972 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.21601497 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.252272407 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.291111483 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.240476541 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.540156531 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.229678532 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.312903232 seconds)
    (280/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.351183496 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.309735895 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.634079997 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.230610702 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.359845767 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.979730378 seconds)
    (286/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.244705057 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.452948851 seconds)
    (288/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.229246121 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.519639815 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.231192525 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.389129732 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.22827372 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.880576265 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.624047571 seconds)
    (295/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.915219921 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.238664217 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.271802185 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.329184899 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.237576303 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.237995112 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.690371862 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.695999502 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.792913148 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.790575016 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.253125197 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.255464726 seconds)
    (307/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.428493523 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.250424853 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.102013639 seconds)
  done (took 873.964051467 seconds)
done (took 875.117865493 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.262216016 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255275369 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.239078236 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.261413314 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.350775511 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.272192645 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.249109993 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.241112809 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.286991635 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.288509511 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.238249499 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.272040784 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.240736696 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.239819823 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.239566499 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.253707383 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.138713814 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.240881659 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.25692642 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.249859918 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.256411432 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.238361725 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.289566793 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.272159604 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.243710578 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.243367269 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.243054006 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.258962577 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.352536167 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.242328767 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.244139277 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.251353998 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.13793578 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.239184157 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.236099027 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.26061395 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.251482774 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.249914746 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.244731921 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.273367549 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.494480523 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.241394981 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.241846805 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.241551912 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.242430374 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.245745221 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.242158506 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.247666032 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.254437107 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.254937262 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.489019144 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.25601929 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.244365031 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.242497989 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.253483909 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.241913267 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.24474014 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.257395622 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.26126141 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.258053063 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.133491298 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.247295349 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.244811953 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.259409499 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.249864502 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.52934128 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.238346565 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.247744284 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.501863382 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.249323837 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.529227546 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.251547668 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.245122292 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.256578008 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.274049368 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.143791982 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.238758511 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.242301139 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.250859035 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.241641297 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.253098195 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255888273 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.247388208 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.244370861 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.257998847 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.276031314 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.253910235 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.245037402 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.252712355 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.263093172 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.250699021 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.25412101 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.246853074 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.239128189 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.253016449 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.248589671 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.246361737 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.247325759 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.249183241 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.255314087 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.501588997 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.260795969 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.240736166 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.241360674 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.243820281 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.258037737 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.503282415 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.246196427 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.26712836 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.292592547 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.246835532 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.139204039 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.248879625 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.260699991 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.253595579 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.247969392 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.240798709 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.138870434 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.497118386 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.260634308 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.247093831 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.243675072 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.260790526 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.247838873 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.243227401 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.148848126 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.24751693 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.259179357 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.366724245 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.257208102 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.277157216 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.24505587 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.248917242 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.279692223 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.262455569 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.278251761 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.249777271 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.262068716 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.262618264 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.24382179 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.25669505 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.258120991 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.248618836 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.253274852 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.241504185 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.276597403 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.258848687 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259619626 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.268100835 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.367834924 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.245700188 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.141750483 seconds)
done (took 209.155911674 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.306883195 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.243294949 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.349720162 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.244620059 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.341478667 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.342298927 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.242039505 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.242113841 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.242108967 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.623372422 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.242481281 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.242485294 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.241354911 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.243048509 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.32811492 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.245055791 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.242880647 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.586022284 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.244984017 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.314075117 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.241154044 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.242755143 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.244395108 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.627364583 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.239873249 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.238998212 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.315177909 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.245161722 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.591550572 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.24175573 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.239985461 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.590788018 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.336475135 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.261415964 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.255408222 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.252961392 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.34395035 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.260737671 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.325450607 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.32580176 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.349906974 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.28302141 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.245914879 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.238930326 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.246918288 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.246919596 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.2431431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.272561723 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.243536711 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.24397671 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.587334157 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.255499947 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.244855608 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.244550755 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.244414056 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.275605547 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.24462629 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.247212487 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.336865051 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.246030806 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.307719751 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.62935478 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.625493008 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.246712692 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.246329665 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.244550932 seconds)
  done (took 142.553668261 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.313319473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.319527177 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.352686167 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.247489696 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.297729012 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.35631574 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.2475857 seconds)
  done (took 10.317562069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.253114758 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.247347122 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.296564571 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.296871094 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.247220369 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.394961841 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.247910097 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.258183414 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.245723191 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.300630211 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.248363985 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.248406406 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.255339497 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.245180284 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.296691735 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.259173507 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.363348636 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.249043004 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.248258125 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.401768896 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.247011057 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.256505874 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.300846557 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.259872723 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.250635895 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.25493121 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.81609234 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.249010513 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.247411227 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.249311968 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.247299268 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.286505309 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.248920996 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.2460104 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.247710851 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365329763 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.249112108 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.247528449 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.250042274 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.243389414 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.249979641 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.250873867 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.251335774 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.248222893 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.250288986 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.273566636 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.25044866 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.249925995 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.251095015 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.25055155 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.30168028 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.250188287 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.247704477 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.247866518 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.305582639 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.257533198 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.250787867 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.248782403 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.251577367 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.248050791 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.403903395 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.298155969 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.250949116 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.298340479 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.250644341 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.251426282 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.250817394 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.25151564 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306144166 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.251127068 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.299643938 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.248304454 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.405915885 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.275055213 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.251879799 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.254100941 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.253532591 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.251283629 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.250925639 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.257342317 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.249211764 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.253247388 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.257147486 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.249125633 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.249521144 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354846678 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360747091 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.250314757 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.265253026 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.259383553 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.249615881 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.304665996 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.252563848 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.249617847 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.304431247 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367101898 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.304917146 seconds)
  done (took 145.033344031 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.256661925 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.259619639 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.25355678 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.269879213 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.251871965 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.252489807 seconds)
  done (took 8.732299718 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.253908634 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.253852974 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.252769829 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.253227374 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.252956187 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.254145152 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.253740786 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.254006452 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.256522823 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.253065668 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.25434003 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.254774332 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.255253531 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.253443132 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.254682333 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.253922314 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.254880892 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.251614183 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.253673586 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25420471 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.356436456 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.254261558 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.254137525 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.254803809 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.258732191 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.253953609 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.261571469 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.254448249 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.254590339 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.260385136 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.256767158 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.255276746 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.255799558 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.259655216 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.258570651 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.25562982 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258416122 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.256695611 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.253542875 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.255740952 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.25675673 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.255821168 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.255321887 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.256364639 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.25727704 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.259535813 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.260073044 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.263463344 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.255735875 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.257467597 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.257390876 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.256791193 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.256005525 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.257452337 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.261000126 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.260303979 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.261291805 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.257894124 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.257256734 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.25748309 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.258014263 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.258685612 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.258483944 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.259649021 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.255259028 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.257941775 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.258954436 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.260184151 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.257867023 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.257269053 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.258161644 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.256197099 seconds)
  done (took 92.756328032 seconds)
done (took 400.573106095 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.415234872 seconds)
  done (took 7.607943703 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.433450037 seconds)
  done (took 7.628493602 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.067156874 seconds)
  done (took 19.265268612 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.291848841 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.317218718 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.262377834 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.25716847 seconds)
  done (took 26.322819355 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.406451093 seconds)
  done (took 7.600222426 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.250909214 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.263069282 seconds)
  done (took 13.709742516 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.583176117 seconds)
  done (took 7.777148282 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.09087204 seconds)
  done (took 8.290769478 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.266330799 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.28501903 seconds)
  done (took 13.757497168 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.23902425 seconds)
  done (took 7.434535263 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.132059342 seconds)
  done (took 8.326093643 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.258195768 seconds)
  done (took 7.452640072 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.327845881 seconds)
  done (took 7.521236113 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.404426066 seconds)
  done (took 8.597577985 seconds)
done (took 152.484974645 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.248764881 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.251135598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.251872715 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.249442412 seconds)
  done (took 26.194445845 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.290086126 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.291291831 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.292763607 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.30101914 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.293309875 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.2895161 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.2830971 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.283263528 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.301492313 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.293687354 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.293083345 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.293265616 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.292107448 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.283541417 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.293116425 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.293328392 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.302177911 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.292783526 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.283560984 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.294257197 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.258692276 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.30337898 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.293783411 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.258416336 seconds)
  done (took 32.14936989 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.456323415 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.328852822 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.410873194 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.312092309 seconds)
  done (took 6.702519527 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.310620609 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.31158239 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.324146171 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.362153163 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.387459433 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.321858656 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.285200138 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.280044513 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.266846159 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.312154058 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.387879039 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.328687506 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.394555536 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.258834165 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.445287785 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.260346098 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.258840461 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.311219703 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.363338206 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.376464254 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.260283809 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.311897405 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.314285451 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.329148233 seconds)
  done (took 32.958213996 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.258057646 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.267415563 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.26542282 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.258717589 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.25912155 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.259609703 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.265730697 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.261137784 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.280446693 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.260205499 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.25806013 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.258755852 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.258384009 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.259912847 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.259109999 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.271822059 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.272768778 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.259949679 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.26303648 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.265647463 seconds)
  done (took 26.459987308 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.253160379 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.107340677 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.604941575 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.509652765 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.254041948 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.256059605 seconds)
  done (took 27.182561089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.319758991 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.438729249 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.261662867 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.57899619 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.658769081 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.261719298 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.261376971 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.468805197 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.741165875 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.744674036 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.310891633 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.321951049 seconds)
  done (took 18.566338515 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.256197736 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.256022147 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.255910741 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.272438142 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.309274931 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.266692237 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.267824613 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.254780351 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.31225416 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.314786766 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.26571978 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.31103626 seconds)
  done (took 36.541636 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343104086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299746486 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.134256276 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970218023 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.634278833 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.467744768 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.994143666 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.670272712 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.264101577 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.530811971 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974822635 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360793701 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.510610879 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263591401 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25999938 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.189192835 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485909215 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710048372 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262855083 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935831255 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284406174 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.256408642 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.018565583 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.285185434 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468814098 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.386776965 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.518640765 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25777824 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51283321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271415958 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268496253 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258892569 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531532921 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890067843 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351771353 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268031731 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.930170723 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.971117339 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.244837593 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.941001345 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.718697795 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.263016201 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269167211 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258902399 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.191721886 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258531614 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692655586 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.268282582 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.970441605 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.25871547 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.268644131 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35283984 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.262413918 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.074202339 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254592388 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260925086 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.256994201 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265362899 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828556921 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.400814853 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272210241 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.195737774 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.613052898 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.964859683 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834501351 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.361972199 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.263631052 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26313715 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194322571 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.033007208 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279455695 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407281844 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.280666889 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90970412 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90900974 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.997438832 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204142386 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771584706 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.26212757 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.197845838 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487290855 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26100394 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194719636 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.219340113 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.194502118 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916238971 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271790963 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.59961121 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.271354742 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671727034 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.274201016 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277405088 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283846288 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.484642616 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.150257865 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262889282 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.764752406 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402947512 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28384161 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674261231 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198604441 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.265301201 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514724926 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.472243001 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266898483 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.189854332 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449203539 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.690374892 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.279259363 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.261438168 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.274861795 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.791243855 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273841017 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.416885883 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28195505 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.263042308 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956112727 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266064825 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.37780576 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.012603519 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505806903 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.99298335 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266811702 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344699076 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264041023 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.263206226 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.042719782 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.779684527 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.263114772 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.264336888 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264745193 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.276696566 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.263549957 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211888001 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.262528189 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.020569018 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.268460126 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.486990354 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262941558 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540753342 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197632633 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410773447 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.31873702 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.486258806 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.379691085 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.266915247 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520889549 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263365281 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.267212635 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278118542 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282061632 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362391888 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28635142 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.270670822 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.521425392 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.268123554 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.268852815 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.058410958 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.269287035 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271869335 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.269616145 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.081540185 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800384123 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246815273 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267648388 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153907538 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.279215379 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329267252 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270780698 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.274462366 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.906619356 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044687959 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.271625895 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.268827337 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489012771 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274624853 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.043093822 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346740462 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.445738655 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.806154076 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280293951 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.200061498 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.976324402 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.958073912 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265602417 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.20088568 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266134468 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274928298 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276774136 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.749502951 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.797644347 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271025987 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.961586597 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.275965694 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276664694 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.271364383 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267464148 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.888563354 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.423149764 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27097855 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281422449 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410401065 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.280795814 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.201204016 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.271398073 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272989795 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267225706 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.266853904 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300027669 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.972172249 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740225762 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525426915 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.927249607 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281040374 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.133206764 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.298685763 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.268427673 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.811483655 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28366528 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.272710605 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278717003 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.277323793 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.02626665 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941702552 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838835859 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927991022 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754559051 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15660559 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.272081959 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270377608 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.68646548 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206260297 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82446781 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440997352 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.693499583 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216342624 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454564389 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.388562957 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968773036 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280001253 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49659373 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152561102 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.807515018 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296014315 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480647126 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302914275 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278145245 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198687979 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.554613882 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486032722 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.781200774 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352544396 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685431883 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.826244451 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.285524712 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.268215302 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.556676549 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429412595 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.985131588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.441794152 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270242059 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.05804651 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741490263 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.272995479 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.494606093 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854270384 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.275787126 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.46721072 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208544159 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.281364596 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.280689251 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.271052914 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.414025623 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.271648998 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.525742626 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280881221 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20467196 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.271793639 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758566988 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.12664485 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.27706199 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27169738 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969922764 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287896347 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5329958 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.285735717 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.89393494 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276444516 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.205305634 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206275024 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.964107304 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275593278 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24783652 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725988268 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.608907007 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.255638865 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292724362 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117029599 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.525501334 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.285298073 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.812102017 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49775914 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.041390778 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296486945 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.372303842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.858906914 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.273349444 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272033142 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.506927749 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090414562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.496222691 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.164204371 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.180064874 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.271238917 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.486269032 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272602581 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.068530768 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510366423 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.985253447 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.291744886 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931333983 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298750062 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.068121237 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.202827404 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.624984217 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.283023545 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352350445 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282188606 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.28416446 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.283754356 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431035484 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.085071607 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288436934 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.287322367 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367826975 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.455710912 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.890985128 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.280592517 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819214367 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956263231 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.813045623 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28668737 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272754639 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282008993 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207984461 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422546678 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.500127878 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547539358 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402485396 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.743338368 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299474407 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.869103091 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299866177 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487553346 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549570526 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.169155435 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280375632 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288875969 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.275637394 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286480246 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.486101409 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73217529 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794512856 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383418494 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281678087 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.692449287 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552646029 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275476507 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275690931 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.864326864 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.277884562 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.570380616 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.284040023 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.098043951 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426278792 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285954555 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913062786 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.286772297 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.431575197 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.048910143 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.082513126 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.533935613 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.69124137 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.287828901 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815308448 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918839996 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542726743 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34386412 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.287825991 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.390293592 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424041284 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.273952419 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277278618 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276861431 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12118281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.987160603 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.287070668 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814526709 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544196824 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.275284339 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.285921306 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30025807 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.285827787 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.500406098 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945896197 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504251618 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286617587 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.279540905 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.091982856 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8165044 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292498501 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210811323 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.281856921 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499034196 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.515349782 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298461331 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.730876056 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.988650196 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80291099 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.25277873 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300210977 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279010412 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93635091 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818342243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.905508983 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739205464 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.847231295 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282694672 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554696286 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.283842869 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287275837 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557080539 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.28331996 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.285689624 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292122737 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.815379845 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996895948 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.283060506 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011698261 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.21837396 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620123783 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892480811 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21888337 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279724828 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.449981897 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284336415 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411420285 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290393403 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.277748591 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292587952 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.014765637 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552309558 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.286103739 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.269978231 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.935984371 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297340658 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28869411 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501092946 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286169873 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.948180162 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.630038145 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.535105256 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.290857703 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.267727127 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.284291963 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281144503 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267786463 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.478992915 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.76663396 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808274318 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.284985691 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.293085562 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.285496832 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.496829005 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491470448 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.114676401 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308219677 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291810412 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298596889 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.188043695 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.783940537 seconds)
  done (took 1547.667877568 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.320314928 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.298441418 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.300052923 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.374878504 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.330298932 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.351180711 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.336104683 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360971519 seconds)
  done (took 51.896046101 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.281955353 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.499348324 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.3102353 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.281919468 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.291638119 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.287957386 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.689348672 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.292159003 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.290412684 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.291583276 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.286089341 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.284625113 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.862775388 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.294848885 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.293509849 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.275156263 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.292563567 seconds)
  done (took 64.333234284 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.296150957 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.51357072 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.357077968 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.300925028 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.985946339 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.285725218 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.489239867 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.288145023 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.301634726 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.326323792 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.936929691 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.297422348 seconds)
  done (took 82.605036041 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.29197632 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.290909837 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.291012136 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.290826477 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.29083655 seconds)
  done (took 7.680510328 seconds)
done (took 1962.132319979 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.537107253 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.911319705 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.8862745 seconds)
  done (took 5.021519522 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.434887437 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.484378726 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.604637348 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.610567381 seconds)
  done (took 7.364207023 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.566972744 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.668712173 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.478126315 seconds)
  done (took 5.942373655 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.573633984 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.306858481 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.405601937 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.286659935 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.287999111 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.291044558 seconds)
  done (took 20.097090282 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.291062645 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.293008032 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.291066573 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.294292752 seconds)
  done (took 6.399109605 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.272933757 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.033853628 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.278874699 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.291213169 seconds)
  done (took 18.10575198 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.042472899 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.05179295 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.038589515 seconds)
  done (took 7.362485199 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.295668645 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.134346344 seconds)
  done (took 9.65950945 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.590243148 seconds)
  done (took 2.819491774 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.422652712 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.563914638 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.234201348 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.18043717 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.272207012 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.741428129 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.761072101 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.38601763 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.166667885 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.235772123 seconds)
  done (took 26.195326276 seconds)
done (took 122.015866246 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.821420224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.292730023 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.499233007 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.788455035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.521075564 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.50057545 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.49007891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.751072975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.335005922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.28602422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.785179162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.521036006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.645626225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.292942445 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.647597665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.297237891 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.520621097 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.940580534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.46754093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.705307487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.493505967 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.421470517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.616807117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.488932437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.51877611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.449130874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.998605963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.295800281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.63968529 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.069580328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.450401669 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.875874789 seconds)
  done (took 183.659703573 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.289750926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.315651692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.290315833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.316290067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.301600216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.292711452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.292498549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290445446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.291632615 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.291690913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.290461469 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.290082333 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.290592491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.30327589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.292100567 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.290638167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.290854093 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.303186938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.291440998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.303058087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.292866292 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.293896491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.291356085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.29035116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.291396336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.291127304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.312844277 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.303026402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.291760957 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.291521074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.292910715 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.292296778 seconds)
  done (took 202.686457174 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.29408145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.306680666 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.294702668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.316382819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.292706986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.293434398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.308155187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.292612378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.293538922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.292346102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.292734109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.293314045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.295416646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.312134408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.295440353 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.307221799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.293122313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.309548721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.29404028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.294075662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.307377163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.305530326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.303758257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.29893783 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.296023901 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.292590279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.298057746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.293291112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.293631614 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.3063151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.29572243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.294875336 seconds)
  done (took 202.792991977 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.489051767 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.300594108 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.301383744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.236661259 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.302155375 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.299962901 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.29684966 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.489694045 seconds)
  done (took 13.950702289 seconds)
done (took 604.320797788 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.477221794 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.191220799 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.489497658 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.32154955 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.993837912 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.323425239 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.322987838 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.478053701 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.194621958 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.481707253 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.473090961 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.318395299 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.610035656 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.319162798 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.556783419 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.412341568 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.124577575 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.23800057 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.61945853 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.76391077 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.558982369 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.690136165 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.475690537 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.191518694 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.614474509 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.690436789 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.906833538 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.128704249 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.321274147 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.620135635 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.815794911 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.157202484 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.372907592 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.355665125 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.41061215 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.392125479 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.129627406 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.354524622 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.49260093 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.458869972 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.776000944 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.009625994 seconds)
  done (took 87.8699267 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.291778604 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.29315777 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.290220744 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.292357211 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.292476076 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.293309457 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.290161565 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.292088198 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.291980011 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.290729068 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.290174007 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.29242218 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.292390844 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.292221621 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.292709354 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.290376911 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.293787771 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.293314546 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.293391289 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.292583076 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.292027251 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.290697551 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.292783876 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.292758289 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.292765109 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.293319443 seconds)
  done (took 34.835826058 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.304841713 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.532259022 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.691890971 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.309633346 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.304693884 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.30910874 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.374354415 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.305556072 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.307232439 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.309191773 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.448294618 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.307796159 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.339670676 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.701299599 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.307083106 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.304927 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.30594859 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.30564999 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.543964205 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.31509823 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.376758593 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.307197805 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.375685877 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.316001092 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.308532836 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.308703629 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.309653639 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.788698305 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.307432646 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.448711028 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000496993 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.375960472 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.745217246 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.703863803 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.00076008 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.309573883 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.306113475 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.453641283 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.309481468 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.307227469 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.37502993 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.307434186 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.701742247 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.91141702 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.321418092 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.308833797 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.809534001 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.452179736 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.524827214 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.315705514 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.723279106 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.311882122 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.309167957 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.308016071 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.524670092 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.314964218 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.307139743 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.814101303 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.311882916 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.377424193 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.308009381 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.308079735 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.547838497 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.308079514 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.537470312 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.309584765 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.315905959 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.308932144 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.703312288 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.309934789 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.927004649 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.322980734 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.306702749 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.449587607 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.538620729 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.846469207 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.311023725 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.551339402 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.753604827 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.376651526 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.312027739 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.77992014 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.379151273 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.311469258 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.31154578 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.310782036 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.308970162 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.353790468 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.375201854 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.870231511 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.921431706 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.831174922 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.380382008 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.321043879 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.310123529 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.817606328 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.310557144 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.309445542 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.699476444 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931799031 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.323936805 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.319149682 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.914190745 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.325700734 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.379755912 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.315263902 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.713278291 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.310688327 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.355388772 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.31041574 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.317516022 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.312949097 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.380072128 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.317218281 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.310494302 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.905151301 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.472053238 seconds)
  done (took 171.332387792 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.314584626 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.303839414 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.309762618 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.302366887 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.303244115 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.307695951 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.303138255 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.303310386 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.308570247 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.303592867 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.30426643 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.305633269 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.305836069 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.317208291 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.313656596 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.310121147 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.914354213 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.306495818 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.303035563 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.304126398 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.07995113 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.307384938 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.305158904 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.304172489 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.304170595 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.305110078 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.309111428 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.307710868 seconds)
  done (took 151.213564514 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.31162057 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.821941439 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.314709427 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.427986473 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.332016985 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.308750057 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.425885444 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.36502063 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.3130158 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.3100612 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.310265279 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.584893002 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.315144562 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.772075034 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.478801975 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.430832496 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.773538046 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.313567867 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.310685466 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.310658807 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.429620372 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.319952856 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.586172423 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.825560767 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.315308683 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.822839609 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.303358639 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.312957934 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.311037678 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.825270383 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.313535728 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.588132266 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.383242067 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.367379812 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.821930718 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.77485443 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.778473349 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.444537016 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.311808674 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.31110226 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.311072148 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.301689308 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.827064213 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.315837996 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.312762193 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.820832411 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.328941231 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.315302135 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.322073823 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.311926853 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.366792145 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.366451288 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.592500357 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.834101197 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.382968542 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.333550058 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.430637237 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.659798438 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.31835795 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.779564714 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.303765626 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.828540754 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.318932916 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.302601778 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.314206612 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.318639908 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.447809988 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.43091093 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.775028561 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.314878136 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.775630358 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.448450185 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.312815091 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.312737077 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.315237975 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.830745374 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.779430992 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.44860255 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.434656551 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.487483534 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.30553115 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.313833748 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.303702355 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.383303366 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.314452133 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.83228003 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.779794694 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.31614733 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.315924882 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.316734199 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.317255039 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.471480924 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.831983571 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.385859487 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.776178135 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.608561016 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.594087684 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.318258237 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.367580885 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.315610236 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.59476731 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.317770779 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.366213985 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.719582518 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.594012048 seconds)
  done (took 155.423083722 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.537679433 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.413680917 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.400396815 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.420036035 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.824485437 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.857006565 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.422506054 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.431093132 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.416009609 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.543644365 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.388222678 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.41379464 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.485748248 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.382804196 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.96554491 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.377615989 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.401473881 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.432605445 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.417072671 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.299751052 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.896347267 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.579003727 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.474232366 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.321751896 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.404427795 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.055671371 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.833188616 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.81321947 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.471479442 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.499076571 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.822030326 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.368879343 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.191962706 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.935137738 seconds)
  done (took 62.750439851 seconds)
done (took 664.660148526 seconds)
SAVING RESULT...
DONE!
